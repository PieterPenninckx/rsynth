initSidebarItems({"constant":[["MICROSECONDS_PER_SECOND",""]],"enum":[["CombinedError","The error type that represents the errors you can get from the `run` function."]],"fn":[["run","Run an audio renderer with the given audio input, audio output, midi input and midi output."]],"mod":[["dummy","Dummy backend that does nothing, useful for testing."],["hound","Backend for reading and writing `.wav` files, based on the `hound` crate."],["memory","In-memory backend, useful for testing."],["midly","Read midi files."]],"struct":[["MidiWriterWrapper","A wrapper around a midi writer that implements `EventHandler<Timed<RawMidiEvent>>` by queueing the events, which can then be written to the encapsulated `MidiWriter` by calling `step_frames`."],["TestAudioReader","An audio reader, useful for testing."],["TestAudioWriter","An audio writer, useful for testing."],["TestMidiReader","A midi reader, useful for testing."],["TestMidiWriter","A midi writer, useful for testing."]],"trait":[["AudioReader","Define how audio is read."],["AudioWriter","Define how audio is written."],["MidiWriter","Define how midi is written. Note: there is no “`MidiReader`”; we use `Iterator<Item = DeltaEvent<RawMidiEvent>>` for that."]]});