var searchIndex = JSON.parse('{\
"rsynth":{"doc":"Rsynth","tn":["buffer","AudioBufferIn","new","number_of_channels","number_of_frames","channels","index_frames","index_frames_from_slice","get_channel","index_channel","AudioBufferOut","new","number_of_channels","number_of_frames","channels","split_channels_at","index_frames","index_frames_from_slice","get_channel","index_channel","set","channel_iter_mut","as_audio_buffer_in","AudioBufferOutChannelIteratorMut","AudioBufferInOut","new","number_of_frames","number_of_input_channels","number_of_output_channels","split_output_channels_at","get_input_channel","index_input_channel","get_output_channel","index_output_channel","index_frames","index_frames_from_slices","separate","inputs","outputs","interleave_with_slice","interleave","AudioChunk","InterlacedSampleIterator","new","zero","from_channels","from_interlaced_iterator","interlaced","with_capacity","channels","number_of_channels","append_sliced_chunk","inner","as_slices","as_mut_slices","split","buffers_as_slice","buffers_as_mut_slice","backend","combined","dummy","AudioDummy","with_sample_rate_and_length","new","MidiDummy","new","hound","HoundAudioReader","HoundAudioError","UnsupportedAudioFormat","new","HoundAudioWriter","new","memory","dasp_sample","conv","i8","to_i16","to_i24","to_i32","to_i48","to_i64","to_u8","to_u16","to_u24","to_u32","to_u48","to_u64","to_f32","to_f64","i16","to_i8","to_i24","to_i32","to_i48","to_i64","to_u8","to_u16","to_u24","to_u32","to_u48","to_u64","to_f32","to_f64","i24","to_i8","to_i16","to_i32","to_i48","to_i64","to_u8","to_u16","to_u24","to_u32","to_u48","to_u64","to_f32","to_f64","i32","to_i8","to_i16","to_i24","to_i48","to_i64","to_u8","to_u16","to_u24","to_u32","to_u48","to_u64","to_f32","to_f64","i48","to_i8","to_i16","to_i24","to_i32","to_i64","to_u8","to_u16","to_u24","to_u32","to_u48","to_u64","to_f32","to_f64","i64","to_i8","to_i16","to_i24","to_i32","to_i48","to_u8","to_u16","to_u24","to_u32","to_u48","to_u64","to_f32","to_f64","u8","to_i8","to_i16","to_i24","to_i32","to_i48","to_i64","to_u16","to_u24","to_u32","to_u48","to_u64","to_f32","to_f64","u16","to_i8","to_i16","to_i24","to_i32","to_i48","to_i64","to_u8","to_u24","to_u32","to_u48","to_u64","to_f32","to_f64","u24","to_i8","to_i16","to_i24","to_i32","to_i48","to_i64","to_u8","to_u16","to_u32","to_u48","to_u64","to_f32","to_f64","u32","to_i8","to_i16","to_i24","to_i32","to_i48","to_i64","to_u8","to_u16","to_u24","to_u48","to_u64","to_f32","to_f64","u48","to_i8","to_i16","to_i24","to_i32","to_i48","to_i64","to_u8","to_u16","to_u24","to_u32","to_u64","to_f32","to_f64","u64","to_i8","to_i16","to_i24","to_i32","to_i48","to_i64","to_u8","to_u16","to_u24","to_u32","to_u48","to_f32","to_f64","f32","to_i8","to_i16","to_i24","to_i32","to_i48","to_i64","to_u8","to_u16","to_u24","to_u32","to_u48","to_u64","to_f64","f64","to_i8","to_i16","to_i24","to_i32","to_i48","to_i64","to_u8","to_u16","to_u24","to_u32","to_u48","to_u64","to_f32","FromSample","from_sample_","ToSample","to_sample_","Duplex","types","i11","MIN","MAX","EQUILIBRIUM","I11","i20","MIN","MAX","EQUILIBRIUM","I20","i24","MIN","MAX","EQUILIBRIUM","I24","i48","MIN","MAX","EQUILIBRIUM","I48","u11","MIN","MAX","EQUILIBRIUM","U11","u20","MIN","MAX","EQUILIBRIUM","U20","u24","MIN","MAX","EQUILIBRIUM","U24","u48","MIN","MAX","EQUILIBRIUM","U48","I11","I20","I24","I48","U11","U20","U24","U48","Sample","Signed","Float","EQUILIBRIUM","IDENTITY","to_sample","from_sample","to_signed_sample","to_float_sample","add_amp","mul_amp","SignedSample","FloatSample","IDENTITY","sample_sqrt","Duplex","FromSample","from_sample_","ToSample","to_sample_","I24","I48","U24","U48","wav_0_6","header","WAV_FORMAT_PCM","WAV_FORMAT_IEEE_FLOAT","Header","audio_format","channel_count","sampling_rate","bytes_per_second","bytes_per_sample","bits_per_sample","bit_depth","BitDepth","Eight","Sixteen","TwentyFour","ThirtyTwoFloat","Empty","read","write","Header","audio_format","channel_count","sampling_rate","bytes_per_second","bytes_per_sample","bits_per_sample","WAV_FORMAT_IEEE_FLOAT","WAV_FORMAT_PCM","BitDepth","Eight","Sixteen","TwentyFour","ThirtyTwoFloat","Empty","AudioChunkReader","new","AudioBufferReader","AudioBufferWriter","new","midly","midly_0_5","io","WriteResult","Write","Error","Seekable","write","invalid_input","make_seekable","Seek","tell","write_at","NotSeekable","Cursor","CursorError","OutOfSpace","InvalidInput","IoWrap","0","SeekableWrap","0","live","LiveEvent","Midi","channel","message","Common","Realtime","SystemCommon","SysEx","MidiTimeCodeQuarterFrame","SongPosition","SongSelect","TuneRequest","Undefined","MtcQuarterFrameMessage","FramesLow","FramesHigh","SecondsLow","SecondsHigh","MinutesLow","MinutesHigh","HoursLow","HoursHigh","SystemRealtime","TimingClock","Start","Continue","Stop","ActiveSensing","Reset","Undefined","stream","MidiStream","Buffer","push","clear","as_slice","DefaultBuffer","num","u14","u15","u24","u28","u4","u7","stack_buffer","write_std","Arena","BytemappedTrack","Smf","header","tracks","SmfBytemap","header","tracks","Track","Error","ErrorKind","Invalid","Malformed","Result","MetaMessage","TrackNumber","Text","Copyright","TrackName","InstrumentName","Lyric","Marker","CuePoint","ProgramName","DeviceName","MidiChannel","MidiPort","EndOfTrack","Tempo","SmpteOffset","TimeSignature","KeySignature","SequencerSpecific","Unknown","MidiMessage","NoteOff","key","vel","NoteOn","key","vel","Aftertouch","key","vel","Controller","controller","value","ProgramChange","program","ChannelAftertouch","vel","PitchBend","bend","PitchBend","0","TrackEvent","delta","kind","TrackEventKind","Midi","channel","message","SysEx","Escape","Meta","Format","SingleTrack","Parallel","Sequential","Fps","Fps24","Fps25","Fps29","Fps30","SmpteTime","Timing","Metrical","Timecode","parse","write","EventBytemapIter","EventIter","Header","format","timing","TrackIter","MidlyMidiReader","new","new_with_track_mask","AudioReader","Err","number_of_channels","frames_per_second","fill_buffer","AudioWriter","Err","write_buffer","specifies_number_of_channels","number_of_channels","MICROSECONDS_PER_SECOND","MidiWriter","write_event","MidiWriterWrapper","new","step_frames","CombinedError","AudioInError","AudioOutError","run","TestAudioReader","new","TestAudioWriter","new","TestMidiReader","new","TestMidiWriter","new","check_last","jack_backend","jack","get_time","AsyncClient","Client","ClientOptions","ClientStatus","ClosureProcessHandler","process_fn","CycleTimes","current_frames","current_usecs","next_usecs","period_usecs","NotificationHandler","thread_init","shutdown","freewheel","sample_rate","client_registration","port_registration","port_rename","ports_connected","graph_reorder","xrun","latency","ProcessHandler","process","buffer_size","ProcessScope","CLIENT_NAME_SIZE","Control","Continue","Quit","Error","CallbackDeregistrationError","CallbackRegistrationError","ClientActivationError","ClientDeactivationError","ClientError","FreewheelError","InvalidDeactivation","NotEnoughSpace","PortAliasError","PortAlreadyConnected","PortConnectionError","PortDisconnectionError","PortMonitorError","PortNamingError","PortRegistrationError","SetBufferSizeError","TimeError","WeakFunctionNotFound","ClientIsNoLongerAlive","RingbufferCreateFailed","UnknownError","LatencyType","Capture","Playback","error_callback","info_callback","reset_error_callback","reset_info_callback","set_error_callback","set_info_callback","AudioIn","AudioOut","MidiIn","MidiIter","MidiOut","MidiWriter","Port","PortFlags","PortSpec","jack_port_type","jack_flags","jack_buffer_size","RawMidi","time","bytes","Unowned","PORT_NAME_SIZE","PORT_TYPE_SIZE","Frames","PortId","Time","RingBuffer","RingBufferReader","RingBufferWriter","Transport","TransportBBT","bar","beat","tick","sig_num","sig_denom","ticks_per_beat","bpm","bar_start_tick","TransportBBTValidationError","BarZero","BeatRange","TicksPerBeatRange","SigNumRange","SigDenomRange","BPMRange","TickRange","TransportPosition","TransportState","Stopped","Rolling","Starting","TransportStatePosition","pos","state","JackHost","client","run","vst_backend","vst","api","consts","MAX_PRESET_NAME_LEN","MAX_PARAM_STR_LEN","MAX_LABEL","MAX_SHORT_LABEL","MAX_PRODUCT_STR_LEN","MAX_VENDOR_STR_LEN","VST_MAGIC","PluginMain","HostCallbackProc","DispatcherProc","ProcessProc","ProcessProcF64","SetParameterProc","GetParameterProc","AEffect","magic","dispatcher","_process","setParameter","getParameter","numPrograms","numParams","numInputs","numOutputs","flags","reserved1","reserved2","initialDelay","_realQualities","_offQualities","_ioRatio","object","user","uniqueId","version","processReplacing","processReplacingF64","future","ChannelProperties","name","flags","arrangement_type","short_name","future","SpeakerArrangementType","Custom","Empty","Mono","Stereo","StereoSurround","StereoCenter","StereoSide","StereoCLfe","Cinema30","Music30","Cinema31","Music31","Cinema40","Music40","Cinema41","Music41","Surround50","Surround51","Cinema60","Music60","Cinema61","Music61","Cinema70","Music70","Cinema71","Music71","Cinema80","Music80","Cinema81","Music81","Surround102","Supported","Yes","Maybe","No","Custom","ProcessLevel","Unknown","User","Realtime","Prefetch","Offline","HostLanguage","English","German","French","Italian","Spanish","Japanese","FileSelectCommand","Load","Save","LoadMultipleFiles","SelectDirectory","FileSelectType","Regular","FileType","name","osx_type","win_type","nix_type","mime_type_1","mime_type_2","FileSelect","command","select_type","mac_creator","num_types","file_types","title","initial_path","return_path","size_return_path","return_multiple_paths","num_paths","reserved","future","Events","num_events","_reserved","events","EventType","_Placeholder","Midi","_Audio","_Video","_Parameter","_Trigger","SysEx","Event","event_type","byte_size","delta_frames","_flags","_reserved","MidiEvent","event_type","byte_size","delta_frames","flags","note_length","note_offset","midi_data","_midi_reserved","detune","note_off_velocity","_reserved1","_reserved2","SysExEvent","event_type","byte_size","delta_frames","_flags","data_size","_reserved1","system_data","_reserved2","TimeInfo","sample_pos","sample_rate","nanoseconds","ppq_pos","tempo","bar_start_pos","cycle_start_pos","cycle_end_pos","time_sig_numerator","time_sig_denominator","smpte_offset","smpte_frame_rate","samples_to_next_clock","flags","SmpteFrameRate","Smpte24fps","Smpte25fps","Smpte2997fps","Smpte30fps","Smpte2997dfps","Smpte30dfps","SmpteFilm16mm","SmpteFilm35mm","Smpte239fps","Smpte249fps","Smpte599fps","Smpte60fps","ChannelFlags","PluginFlags","ModifierKey","MidiEventFlags","TimeInfoFlags","buffer","AudioBuffer","AudioBufferIterator","Inputs","InputIterator","Outputs","OutputIterator","PlaceholderEvent","WriteIntoPlaceholder","write_into","SendEventBuffer","channels","ChannelInfo","ArrangementTarget","Music","Cinema","StereoChannel","Left","Right","StereoConfig","L_R","Ls_Rs","Lc_Rc","Sl_Sr","C_Lfe","SurroundConfig","S3_0","S3_1","S4_0","S4_1","S5_0","S5_1","S6_0","S6_1","S7_0","S7_1","S8_0","S8_1","S10_2","SpeakerArrangementType","Custom","Empty","Mono","Stereo","Surround","editor","Editor","size","position","idle","close","open","is_open","set_knob_mode","key_up","key_down","KeyCode","character","key","modifier","KnobMode","Circular","CircularRelative","Linear","Key","Back","Tab","Clear","Return","Pause","Escape","Space","Next","End","Home","Left","Up","Right","Down","PageUp","PageDown","Select","Print","Enter","Snapshot","Insert","Delete","Help","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","Multiply","Add","Separator","Subtract","Decimal","Divide","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","Numlock","Scroll","Shift","Control","Alt","Equals","event","Event","Midi","SysEx","Deprecated","MidiEvent","data","delta_frames","live","note_length","note_offset","detune","note_off_velocity","SysExEvent","payload","delta_frames","host","Host","automate","get_plugin_id","idle","get_info","process_events","get_time_info","get_block_size","update_display","PluginLoadError","InvalidPath","NotAPlugin","InstanceFailed","InvalidApiVersion","PluginLoader","PluginInstance","HostBuffer","plugin","Category","Unknown","Effect","Synth","Analysis","Mastering","Spacializer","RoomFx","SurroundFx","Restoration","OfflineProcess","Shell","Generator","Info","name","vendor","presets","parameters","inputs","outputs","midi_inputs","midi_outputs","unique_id","version","category","initial_delay","preset_chunks","f64_precision","silent_when_stopped","CanDo","SendEvents","SendMidiEvent","ReceiveEvents","ReceiveMidiEvent","ReceiveTimeInfo","Offline","MidiProgramNames","Bypass","ReceiveSysExEvent","MidiSingleNoteTuningChange","MidiKeyBasedInstrumentControl","Other","Plugin","get_info","new","init","set_sample_rate","set_block_size","resume","suspend","vendor_specific","can_do","get_tail_size","process","process_f64","process_events","get_parameter_object","get_input_info","get_output_info","start_process","stop_process","get_editor","PluginParameters","change_preset","get_preset_num","set_preset_name","get_preset_name","get_parameter_label","get_parameter_text","get_parameter_name","get_parameter","set_parameter","can_be_automated","string_to_parameter","get_preset_data","get_bank_data","load_preset_data","load_bank_data","HostCallback","util","AtomicFloat","ParameterTransfer","ParameterTransferIterator","plugin_main","VstPluginMeta","plugin_id","category","VstPluginWrapper","get_info","new","host","process","process_f64","get_input_info","get_output_info","process_events","set_sample_rate","HostInterface","output_initialized","stop","Stop","envelope","staircase_envelope","StairCaseEnvelopeIterator","StairCaseEnvelope","EnvelopeIteratorItem","item","has_updated","Envelope","Iter","EventType","iter","insert_event","forget_past","event","event_queue","EventQueue","EventCollisionHandling","InsertNewBeforeOld","InsertNewAfterOld","IgnoreNew","RemoveOld","HandleEventCollision","decide_on_collision","AlwaysInsertNewBeforeOld","AlwaysInsertNewAfterOld","AlwaysIgnoreNew","AlwaysRemoveOld","new","queue_event","forget_before","clear","shift_time","get_last_before","first","split","drain","drain_all","DrainingIter","EventHandler","handle_event","EventHandlerExt","map","Map","ContextualEventHandler","handle_event","SysExEvent","new","data","RawMidiEvent","new","try_new","data","bytes","MidlyConversionError","NotALiveEvent","CursorError","Timed","time_in_frames","event","new","Indexed","index","event","new","DeltaEvent","microseconds_since_previous_event","event","TimeStretcher","new","stretch","meta","Meta","MetaData","meta","General","GeneralData","general","Name","name","write_name","Port","PortData","in_ports","out_ports","AudioPort","MidiPort","MetaData","general_meta","audio_port_meta","midi_port_meta","InOut","inputs","outputs","test_utilities","DummyEventHandler","TestPlugin","new","check_last","utilities","polyphony","simple_event_dispatching","SimpleVoiceState","Idle","Releasing","Active","SimpleEventDispatcher","new","EventDispatchClass","Broadcast","AssignNewVoice","VoiceSpecific","ReleaseVoice","ToneIdentifier","0","EventDispatchClassifier","VoiceIdentifier","classify","RawMidiEventToneIdentifierDispatchClassifier","VoiceAssignment","None","All","Some","Voice","state","VoiceAssigner","Voice","assign_event","find_active_voice","find_idle_voice","EventDispatcher","dispatch_event","ContextualEventDispatcher","dispatch_contextual_event","vecstorage","VecStorage","rsor","Slice","AudioHandlerMeta","max_number_of_audio_inputs","max_number_of_audio_outputs","AudioHandler","set_sample_rate","MidiHandlerMeta","max_number_of_midi_inputs","max_number_of_midi_outputs","AudioRenderer","render_buffer","ContextualAudioRenderer","render_buffer","CommonPluginMeta","name","plugin_name","CommonAudioPortMeta","audio_input_name","input_name","audio_output_name","output_name","CommonMidiPortMeta","midi_input_name","input_name","midi_output_name","output_name","audio_chunk","vst_init","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","into_iter","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","from","into","borrow","borrow_mut","try_from","try_into","type_id","from_sample_","to_sample_","fmt","drop","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","from_sample_","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","rem","rem","rem","rem","rem","rem","rem","rem","mul","mul","mul","mul","mul","mul","mul","mul","shl","shl","shl","shl","shl","shl","shl","shl","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","not","not","not","not","not","not","not","not","add","add","add","add","add","add","add","add","sub","sub","sub","sub","sub","sub","sub","sub","shr","shr","shr","shr","shr","shr","shr","shr","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","neg","neg","neg","neg","default","default","default","default","default","default","default","default","clone","clone","clone","clone","clone","clone","clone","clone","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","div","div","div","div","div","div","div","div","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","default","default","clone","clone","try_from","hash","from","from","from","from","from","eq","ne","eq","ne","fmt","fmt","tell","write_at","tell","write_at","tell","write_at","write","invalid_input","make_seekable","write","invalid_input","write","invalid_input","write","invalid_input","make_seekable","push","clear","as_slice","from","from","from","from","from","from","from","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","cmp","cmp","cmp","cmp","cmp","cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","next","next","size_hint","next","default","default","default","default","default","default","default","default","default","default","default","source","drop","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from_iter","from_iter","from_iter","fmt","fmt","fmt","bitor_assign","bitor_assign","bitor_assign","hash","hash","hash","hash","bitxor","bitxor","bitxor","cmp","cmp","cmp","cmp","fmt","fmt","fmt","fmt","fmt","drop","drop","drop","drop","drop","sub_assign","sub_assign","sub_assign","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","jack_port_type","jack_flags","jack_buffer_size","jack_port_type","jack_flags","jack_buffer_size","jack_port_type","jack_flags","jack_buffer_size","jack_port_type","jack_flags","jack_buffer_size","jack_port_type","jack_flags","jack_buffer_size","not","not","not","sub","sub","sub","extend","extend","extend","bitand_assign","bitand_assign","bitand_assign","write","flush","process","read","bitxor_assign","bitxor_assign","bitxor_assign","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","eq","eq","ne","next","size_hint","count","last","nth","default","default","default","default","default","default","default","default","default","fmt","fmt","fmt","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","bitand","bitand","bitand","bitor","bitor","bitor","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","initialize","initialize","initialize","deref","deref","deref","fmt","fmt","fmt","fmt","fmt","get_info","init","set_sample_rate","set_block_size","resume","suspend","vendor_specific","can_do","get_tail_size","process","process_f64","process_events","get_input_info","get_output_info","get_parameter_object","get_editor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","hash","hash","hash","hash","hash","bitxor","bitxor","bitxor","bitxor","bitxor","cmp","cmp","cmp","cmp","cmp","fmt","fmt","fmt","fmt","fmt","fmt","drop","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","write_into","write_into","write_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","not","not","not","not","not","sub","sub","sub","sub","sub","extend","extend","extend","extend","extend","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","into_iter","index_mut","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","index","index","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","next","next","next","next","automate","get_plugin_id","idle","get_info","process_events","get_time_info","get_block_size","update_display","default","default","default","default","default","default","default","default","fmt","fmt","fmt","fmt","fmt","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","bitand","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","bitor","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","from_iter","from_iter","from_iter","from_iter","from_iter","default","drop","number_of_channels","frames_per_second","fill_buffer","number_of_channels","frames_per_second","fill_buffer","number_of_channels","frames_per_second","fill_buffer","number_of_channels","frames_per_second","fill_buffer","write_buffer","write_buffer","specifies_number_of_channels","number_of_channels","write_buffer","specifies_number_of_channels","number_of_channels","write_buffer","write_event","write_event","output_initialized","stop","output_initialized","stop","output_initialized","iter","insert_event","forget_past","decide_on_collision","decide_on_collision","decide_on_collision","decide_on_collision","handle_event","handle_event","handle_event","handle_event","handle_event","handle_event","handle_event","general","in_ports","out_ports","in_ports","out_ports","classify","classify","find_active_voice","find_idle_voice","max_number_of_audio_inputs","max_number_of_audio_outputs","set_sample_rate","render_buffer","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","from","from","next_back","next","next","next","next","next","next","next","size_hint","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","index","index_mut","try_from","source","source","source","new","new_unchecked","inner","new","new_unchecked","inner","new","new_unchecked","inner","new","new_unchecked","inner","new","new_unchecked","inner","new","new_unchecked","inner","new","new_unchecked","inner","new","new_unchecked","inner","new","as_never","new","from_parts","into_parts","slice","slice_mut","cursor","written","unwritten","split","written_mut","unwritten_mut","split_mut","parse","write","write_with_running_status","write_std","write_std_with_running_status","as_track_event","new","encode","new","with_buffer","feed","flush","max_cap","new","max_value","new","from_int_lossy","try_from","as_int","slice_try_from_int","slice_from_int","slice_from_int_unchecked","slice_try_from_int_mut","slice_from_int_mut","slice_from_int_unchecked_mut","slice_as_int","max_value","new","from_int_lossy","try_from","as_int","slice_try_from_int","slice_from_int","slice_from_int_unchecked","slice_try_from_int_mut","slice_from_int_mut","slice_from_int_unchecked_mut","slice_as_int","max_value","new","from_int_lossy","try_from","as_int","slice_try_from_int","slice_from_int","slice_from_int_unchecked","slice_try_from_int_mut","slice_from_int_mut","slice_from_int_unchecked_mut","slice_as_int","max_value","new","from_int_lossy","try_from","as_int","slice_try_from_int","slice_from_int","slice_from_int_unchecked","slice_try_from_int_mut","slice_from_int_mut","slice_from_int_unchecked_mut","slice_as_int","max_value","new","from_int_lossy","try_from","as_int","slice_try_from_int","slice_from_int","slice_from_int_unchecked","slice_try_from_int_mut","slice_from_int_mut","slice_from_int_unchecked_mut","slice_as_int","max_value","new","from_int_lossy","try_from","as_int","slice_try_from_int","slice_from_int","slice_from_int_unchecked","slice_try_from_int_mut","slice_from_int_mut","slice_from_int_unchecked_mut","slice_as_int","new","clear","len","add","add_vec","add_u7","add_u7_vec","new","parse","write","write_std","save","new","parse","write","write_std","save","new","kind","source","message","min_raw_value","mid_raw_value","max_raw_value","from_int","from_f32","from_f64","as_int","as_f32","as_f64","as_live_event","from_int","as_int","as_f32","new","hour","minute","second","frame","subframe","fps","second_f32","new","unread","running_status","running_status_mut","not_bytemapped","into_vec","new","unread","running_status","running_status_mut","bytemapped","into_vec","new","new","unread","collect_tracks","collect_bytemapped","new","as_client","deactivate","new","activate_async","sample_rate","cpu_load","name","buffer_size","set_buffer_size","uuid_string","name_by_uuid_str","ports","register_port","port_by_id","port_by_name","frames_since_cycle_start","frame_time","frames_to_time","time_to_frames","is_mine","request_monitor_by_name","connect_ports_by_name","connect_ports","disconnect","unregister_port","disconnect_ports","disconnect_ports_by_name","type_buffer_size","raw","from_raw","transport","NO_START_SERVER","USE_EXACT_NAME","SERVER_NAME","LOAD_NAME","LOAD_INIT","SESSION_ID","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","FAILURE","INVALID_OPTION","NAME_NOT_UNIQUE","SERVER_STARTED","SERVER_FAILED","SERVER_ERROR","NO_SUCH_CLIENT","LOAD_FAILURE","INIT_FAILURE","SHM_FAILURE","VERSION_ERROR","BACKEND_ERROR","CLIENT_ZOMBIE","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","new","n_frames","last_frame_time","frames_since_cycle_start","cycle_times","client_ptr","from_raw","to_ffi","to_ffi","peek","next_if","write","lost_count","max_event_size","as_slice","as_mut_slice","iter","writer","spec","clone_unowned","name","short_name","flags","port_type","connected_count","is_connected_to","aliases","is_monitoring_input","request_monitor","ensure_monitor","set_name","set_alias","unset_alias","from_raw","client_ptr","raw","buffer","set_latency_range","get_latency_range","IS_INPUT","IS_OUTPUT","IS_PHYSICAL","CAN_MONITOR","IS_TERMINAL","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","new","mlock","reset","into_reader_writer","from_reader_writer","get_vector","read_buffer","peek","advance","space","peek_iter","write_buffer","advance","space","get_vector","peek_iter","start","stop","reposition","locate","query","query_state","with_bbt","with_bpm","with_timesig","with_ticks_per_beat","with_bar_start_tick","validated","valid","valid_bbt","valid_bbt_frame_offset","frame","set_frame","frame_rate","usecs","bbt","set_bbt","bbt_offset","set_bbt_offset","get_plugin","drop_plugin","from","events","ACTIVE","STEREO","SPEAKER","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","HAS_EDITOR","CAN_REPLACING","PROGRAM_CHUNKS","IS_SYNTH","NO_SOUND_IN_STOP","CAN_DOUBLE_REPLACING","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","SHIFT","ALT","COMMAND","CONTROL","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","REALTIME_EVENT","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","TRANSPORT_CHANGED","TRANSPORT_PLAYING","TRANSPORT_CYCLE_ACTIVE","TRANSPORT_RECORDING","AUTOMATION_WRITING","AUTOMATION_READING","NANOSECONDS_VALID","PPQ_POS_VALID","TEMPO_VALID","BARS_VALID","CYCLE_POS_VALID","TIME_SIG_VALID","SMPTE_VALID","VST_CLOCK_VALID","empty","all","bits","from_bits","from_bits_truncate","from_bits_unchecked","is_empty","is_all","intersects","contains","insert","remove","toggle","set","from_raw","input_count","output_count","samples","split","zip","len","is_empty","get","split_at","len","is_empty","get","get_mut","split_at_mut","new","send_events","send_events_to_plugin","new","is_speaker_type","is_left_stereo","load","instance","new","from_info","bind","input_count","output_count","from_str","vst_version","raw_callback","raw_effect","new","get","set","new","set_parameter","get_parameter","iterate","with_capacity","capacity","vec_guard","new","with_capacity","fill","fill_mut","from_iter","from_iter_mut","from_refs","from_muts","capacity"],"q":["rsynth","rsynth::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth","rsynth::backend","rsynth::backend::combined","rsynth::backend::combined::dummy","","","","","rsynth::backend::combined","rsynth::backend::combined::hound","","","","","","rsynth::backend::combined","rsynth::backend::combined::memory","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::i8","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::i16","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::i24","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::i32","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::i48","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::i64","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::u8","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::u16","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::u24","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::u32","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::u48","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::u64","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::f32","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","rsynth::backend::combined::memory::dasp_sample::conv::f64","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::conv","","","","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample::types::i11","","","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample::types::i20","","","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample::types::i24","","","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample::types::i48","","","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample::types::u11","","","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample::types::u20","","","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample::types::u24","","","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample::types::u48","","","","rsynth::backend::combined::memory::dasp_sample::types","","","","","","","","rsynth::backend::combined::memory::dasp_sample","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::memory","rsynth::backend::combined::memory::wav_0_6","rsynth::backend::combined::memory::wav_0_6::header","","","","","","","","","rsynth::backend::combined::memory::wav_0_6","rsynth::backend::combined::memory::wav_0_6::bit_depth","","","","","","rsynth::backend::combined::memory::wav_0_6","","","","","","","","","","","","","","","","","rsynth::backend::combined::memory","","","","","rsynth::backend::combined","rsynth::backend::combined::midly","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::io","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::live","","rsynth::backend::combined::midly::midly_0_5::live::LiveEvent","","rsynth::backend::combined::midly::midly_0_5::live","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::stream","","","","","","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::num","","","","","","rsynth::backend::combined::midly::midly_0_5","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::midly::midly_0_5::MidiMessage","","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::MidiMessage","","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::MidiMessage","","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::MidiMessage","","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::MidiMessage","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::MidiMessage","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::MidiMessage","rsynth::backend::combined::midly::midly_0_5","","","","","","","rsynth::backend::combined::midly::midly_0_5::TrackEventKind","","rsynth::backend::combined::midly::midly_0_5","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::midly","","","rsynth::backend::combined","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend","rsynth::backend::jack_backend","rsynth::backend::jack_backend::jack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::jack_backend","","","rsynth::backend","rsynth::backend::vst_backend","rsynth::backend::vst_backend::vst","rsynth::backend::vst_backend::vst::api","rsynth::backend::vst_backend::vst::api::consts","","","","","","","rsynth::backend::vst_backend::vst::apirsynth::backend::vst_backend::vst","rsynth::backend::vst_backend::vst::buffer","","","","","","","","","","rsynth::backend::vst_backend::vst","rsynth::backend::vst_backend::vst::channels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst","rsynth::backend::vst_backend::vst::editor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst","rsynth::backend::vst_backend::vst::event","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst","rsynth::backend::vst_backend::vst::host","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst","rsynth::backend::vst_backend::vst::plugin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst","rsynth::backend::vst_backend::vst::util","","","rsynth::backend::vst_backend::vst","rsynth::backend::vst_backend","","","","","","","","","","","","","rsynth::backend","","","","rsynth","rsynth::envelope","rsynth::envelope::staircase_envelope","","rsynth::envelope","","","","","","","","","rsynth","rsynth::event","rsynth::event::event_queue","","","","","","","","","","","","","","","","","","","","","","","rsynth::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth","rsynth::meta","","","","","","","","","","","","","","","","","","","","","","rsynth","rsynth::test_utilities","","","","rsynth","rsynth::utilities","rsynth::utilities::polyphony","rsynth::utilities::polyphony::simple_event_dispatching","","","","","","rsynth::utilities::polyphony","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth","rsynth::vecstorage","rsynth","rsynth::rsor","rsynth","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::dummy","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::hound","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::types","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::types","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::memory::wav_0_6","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::memory","","","","","","","","","","","","","","","","","","rsynth::backend::combined::midly::midly_0_5::io","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::midly::midly_0_5::live","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::midly::midly_0_5::stream","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::midly::midly_0_5::num","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::midly::midlyrsynth::backend::combined::midly","","","","","","","","","","rsynth::backend::combined","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::jack_backend::jackrsynth::backend::jack_backend","","","","","","","","","rsynth::backend::vst_backend::vst::apirsynth::backend::vst_backend::vst::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst::channels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst::editor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst::host","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst::plugin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst::util","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend","","","","","","","","","rsynth::envelope::staircase_envelope","","","","","","","","","","","","","","","","","","","rsynth::envelope","","","","","","","","","","","rsynth::event::event_queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::meta","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::test_utilities","","","","","","","","","","","","","","","","","","rsynth::utilities::polyphony::simple_event_dispatching","","","","","","","","","","","","","","","","","","","","rsynth::utilities::polyphony","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::vecstorage","","","","","","","","","rsynth::rsor","","","","","","","","","rsynth::vecstorage","","rsynth::backend::combined::memory::dasp_sample","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","","","","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","","","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","","","","","","","","","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","","","rsynth::backend::combined::memory::dasp_sample","","","","","","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","","","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","","","","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","","rsynth::backend::combined::memory::dasp_sample::types","","","","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","","rsynth::backend::combined::memory::dasp_sample::types","","","","rsynth::backend::combined::memory::dasp_sample","","","","","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","","rsynth::backend::combined::memory::dasp_sample::types","","","","","rsynth::backend::combined::memory::dasp_sample","","","","rsynth::backend::combined::memory::dasp_sample::types","","","","","rsynth::backend::combined::memory::dasp_sample","","","","","rsynth::backend::combined::memory::dasp_sample::types","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::dasp_sample","","","","rsynth::backend::combined::memory::dasp_sample::types","","","rsynth::backend::combined::memory::dasp_sample","rsynth::backend::combined::memory::dasp_sample::types","rsynth::backend::combined::memory::wav_0_6","","","","","","","","","","","","","","","","","rsynth::backend::combined::midly::midly_0_5::io","","","","","","","","","","","","","","","","rsynth::backend::combined::midly::midly_0_5::stream","","","rsynth::backend::combined::midly::midly_0_5::num","","","","","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5::live","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::num","","","","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::live","","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::live","","rsynth::backend::combined::midly::midly_0_5","","","rsynth::backend::combined::midly::midly_0_5::num","","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::num","","","","rsynth::backend::combined::midly::midly_0_5::live","","rsynth::backend::combined::midly::midly_0_5","","","","","","rsynth::backend::combined::midly::midly_0_5::num","","rsynth::backend::combined::midly::midly_0_5","","","","","","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::live","","rsynth::backend::combined::midly::midly_0_5::num","","rsynth::backend::combined::midly::midly_0_5","","","rsynth::backend::combined::midly::midly_0_5::live","","rsynth::backend::combined::midly::midly_0_5::num","","rsynth::backend::combined::midly::midly_0_5","","","","rsynth::backend::combined::midly::midly_0_5::stream","rsynth::backend::combined::midly::midly_0_5","","","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::num","","","","","","","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::num","","","","","rsynth::backend::combined::midly::midly_0_5","","","","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5::io","","rsynth::backend::combined::midly::midly_0_5::stream","rsynth::backend::combined::midly::midly_0_5::num","","rsynth::backend::combined::midly::midly_0_5::stream","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::num","","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5::io","rsynth::backend::combined::midly::midly_0_5::live","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::io","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::live","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::io","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::live","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::stream","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::io","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::stream","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::live","rsynth::backend::combined::midly::midly_0_5::num","","","","","","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::live","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::num","","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::live","rsynth::backend::combined::midly::midly_0_5::stream","rsynth::backend::combined::midly::midly_0_5","","rsynth::backend::combined::midly::midly_0_5::live","rsynth::backend::combined::midly::midly_0_5::stream","rsynth::backend::combined::midly::midly_0_5::io","","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5","","","","rsynth::backend::combined::midly::midly_0_5::num","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::io","rsynth::backend::combined::midly::midly_0_5::live","rsynth::backend::combined::midly::midly_0_5","","","rsynth::backend::combined::midly::midly_0_5::io","rsynth::backend::combined::midly::midly_0_5","rsynth::backend::combined::midly::midly_0_5::io","rsynth::backend::jack_backend::jack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst::api","","","","","rsynth::backend::vst_backend::vst::host","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst::api","","","","","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::channels","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::editor","","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::editor","","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::channels","rsynth::backend::vst_backend::vst::editor","","","","rsynth::backend::vst_backend::vst::plugin","","rsynth::backend::vst_backend::vst::editor","","","rsynth::backend::vst_backend::vst::plugin","","rsynth::backend::vst_backend::vst::editor","","rsynth::backend::vst_backend::vst::api","rsynth::backend::vst_backend::vst::editor","","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::editor","","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::api","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst::host","","rsynth::backend::vst_backend::vst::api","","","","","rsynth::backend::vst_backend::vst::event","","","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::api","","","","","","rsynth::backend::vst_backend::vst::host","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::plugin","","rsynth::backend::vst_backend::vst::api","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst::buffer","","rsynth::backend::vst_backend::vst::editor","","","","rsynth::backend::vst_backend::vst::channels","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::channels","rsynth::backend::vst_backend::vst::plugin","","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::plugin","","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::editor","","","","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::plugin","","rsynth::backend::vst_backend::vst::event","rsynth::backend::vst_backend::vst::editor","","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::editor","","","","","","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::api","","","","","","","","","","","","rsynth::backend::vst_backend::vst::buffer","","rsynth::backend::vst_backend::vst::api","","","","","rsynth::backend::vst_backend::vst::buffer","","","rsynth::backend::vst_backend::vst::util","rsynth::backend::vst_backend::vst::plugin","","","","","","","","rsynth::backend::vst_backend::vst::channels","rsynth::backend::vst_backend::vst::api","","rsynth::backend::vst_backend::vst::util","rsynth::backend::vst_backend::vst::plugin","","rsynth::backend::vst_backend::vst::util","rsynth::backend::vst_backend::vst::buffer","rsynth::backend::vst_backend::vst::api","","","","","","","","rsynth::backend::vst_backend::vst::event","rsynth::backend::vst_backend::vst::api","","","rsynth::backend::vst_backend::vst::event","rsynth::backend::vst_backend::vst::api","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::plugin","","rsynth::backend::vst_backend::vst::event","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::api","","","rsynth::backend::vst_backend::vst::editor","rsynth::backend::vst_backend::vst::plugin","rsynth::backend::vst_backend::vst::buffer","rsynth::backend::vst_backend::vst::api","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::rsor","","rsynth::backend::combined::dummy","","","rsynth::backend::combined::hound","","","rsynth::backend::combined::memory","","","rsynth::backend::combined","","","rsynth::backend::combined::dummy","rsynth::backend::combined::hound","","","rsynth::backend::combined::memory","","","rsynth::backend::combined","rsynth::backend::combined::dummy","rsynth::backend::combined","","","rsynth::backend::jack_backend","","rsynth::backend::vst_backend::vst::plugin","rsynth::envelope::staircase_envelope","","","rsynth::event::event_queue","","","","rsynth::backend::combined","rsynth::backend::jack_backend","","rsynth::event","rsynth::test_utilities","","","rsynth::meta","","","","","rsynth::utilities::polyphony","rsynth::utilities::polyphony::simple_event_dispatching","","","rsynth::test_utilities","","","","rsynth::event","","","","","","rsynth::backend::combined::memory","rsynth::event","rsynth::event::event_queue","rsynth::buffer","","rsynth::backend::combined::dummy","rsynth::backend::combined::midly","rsynth::backend::combined","rsynth::envelope::staircase_envelope","rsynth::event::event_queue","","rsynth::buffer","","rsynth::envelope","rsynth::event","","","","","","rsynth::utilities::polyphony","","rsynth::utilities::polyphony::simple_event_dispatching","rsynth::utilities::polyphony","rsynth::utilities::polyphony::simple_event_dispatching","rsynth::buffer","","rsynth::envelope","","rsynth::event","","","","","","","","","","rsynth::utilities::polyphony","","","","rsynth::utilities::polyphony::simple_event_dispatching","","rsynth::event::event_queue","rsynth::buffer","","","","rsynth::backend::combined::hound","rsynth::backend::combined","rsynth::envelope","rsynth::event","","","","","","rsynth::utilities::polyphony","","rsynth::backend::combined::hound","rsynth::backend::combined","rsynth::event","rsynth::event::event_queue","","rsynth::event","rsynth::backend::combined::hound","rsynth::backend::combined","rsynth::event","rsynth::backend::combined::memory::dasp_sample::types","","","","","","rsynth::backend::combined::memory::dasp_sample","","","","","","rsynth::backend::combined::memory::dasp_sample::types","","","","","","rsynth::backend::combined::memory::dasp_sample","","","","","","rsynth::backend::combined::memory::wav_0_6","rsynth::backend::combined::midly::midly_0_5::io","","","","","","","","","","","","","rsynth::backend::combined::midly::midly_0_5::live","","","","","","","","rsynth::backend::combined::midly::midly_0_5::stream","","","","","","rsynth::backend::combined::midly::midly_0_5::num","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::combined::midly::midly_0_5","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::jack_backend::jackrsynth::backend::vst_backend::vst::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst::buffer","","","","","","","","","","","","","","","","","","rsynth::backend::vst_backend::vst::channels","","","rsynth::backend::vst_backend::vst::host","","","","","","","rsynth::backend::vst_backend::vst::plugin","","","","rsynth::backend::vst_backend::vst::util","","","","","","","rsynth::vecstorage","","","rsynth::rsor","","","","","","","",""],"d":["Audio buffers.","Audio input buffer.","Create a new audio input buffer.","Get the number of channels.","Get the number of frames.","Get the channels as slices.","Get an <code>AudioBufferIn</code> with all channels and the given …","Get an <code>AudioBufferIn</code> with all channels and the given …","Get the channel with the given index.","Get the channel with the given index.","An audio output buffer.","Create a new audio output buffer.","Get the number of channels.","Get the number of frames.","Get the channels as slices.","Split into two <code>AudioBufferOut</code>s. The first will contain …","Get an <code>AdioBufferOut</code> with all channels and the given …","Get an <code>AdioBufferOut</code> with all channels and the given …","Get the channel with the given index.","Get the channel with the given index.","Set all samples to the given value.","Get an iterator over the channels.","Convert to an <code>AudioBufferIn</code>.","An iterator over the channels of an <code>AudioBufferOut</code>.","A buffer holding both input and output audio.","Create a new <code>AudioBufferInOut</code>.","Get the number of frames.","Get the number of input channels.","Get the number of output channels.","Create two new <code>AUdioBufferInOut</code>s: one with all the input …","Get the input channel with the given index.","Get the output channel with the given index.","Get the output channel with the given index.","Get the output channel with the given index.","Get an <code>AudioBufferInOut</code> with all channels and with the …","Get an <code>AudioBufferInOut</code> with all channels and with the …","Separate the input channels from the output channels.","Get the input channels as an <code>AudioBufferIn</code>.","Get the output channels as an <code>AudioBufferOut</code>.","Interleave actions on subsequent frames with other …","Interleave actions on subsequent frames with other …","A buffer representing a fixed amount of samples for a …","An iterator over the samples of an <code>AudioChunk</code>, operating …","Create a new <code>AudioChunk</code>.","Note: cannot be used in a real-time context","","Panics","Create an interlaced iterator from an <code>AudioChunk</code>","Create a new <code>AudioChunk</code> in which each channel has the …","","Return the number of channels.","Note about using in a real-time context","","Note: cannot be used in a real-time context","Note: cannot be used in a real-time context","Note: cannot be used in a real-time context","","","Backends.","Combine different back-ends for audio input, audio output …","Dummy backend that does nothing, useful for testing.","Dummy backend that does nothing, useful for testing and …","Create a new <code>AudioDummy</code> with the given sample rate, in …","Create a new <code>AudioDummy</code> with the “default” sample rate…","","","Backend for reading and writing <code>.wav</code> files, based on the …","","","","","","","In-memory backend, useful for testing.","","Pure functions and traits for converting between i8, i16, …imilar to the std <code>From</code> trait, but specifically for …","","Similar to the std <code>Into</code> trait, but specifically for …","","Sample types which may be converted to and from some type …","A collection of custom, non-std <strong>Sample</strong> types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A trait for working generically across different <strong>Sample</strong> …","When summing two samples of a signal together, it is …","When multiplying two samples of a signal together, it is …","The equilibrium value for the wave that this <code>Sample</code> type …","The multiplicative identity of the signal.","Convert <code>self</code> to any type that implements <code>FromSample<Self></code>.","Create a <code>Self</code> from any type that implements <code>ToSample<Self></code>…","Converts <code>self</code> to the equivalent <code>Sample</code> in the associated …","Converts <code>self</code> to the equivalent <code>Sample</code> in the associated …","Adds (or “offsets”) the amplitude of the <code>Sample</code> by …","Multiplies (or “scales”) the amplitude of the <code>Sample</code> …","Integral and floating-point <strong>Sample</strong> format types whose …","Sample format types represented as floating point numbers.","Represents the multiplicative identity of the floating …","Calculate the square root of <code>Self</code>.","Sample types which may be converted to and from some type …","Similar to the std <code>From</code> trait, but specifically for …","","Similar to the std <code>Into</code> trait, but specifically for …","","","","","","","Contains items responsible for dealing with the <code>\\\"fmt \\\"</code> …","Value signifying PCM data.","Value signifying IEEE float data.","Structure for the <code>\\\"fmt \\\"</code> chunk of wave files, specifying …","","","","","","","Contains items for dealing with the <code>\\\"data\\\"</code> chunk of wave …","Enum listing the supported bit-depths and containers for …","","","","","","Reads in the given <code>reader</code> and attempts to extract the …","Writes the given wav data to the given <code>writer</code>.","Structure for the <code>\\\"fmt \\\"</code> chunk of wave files, specifying …","","","","","","","Value signifying IEEE float data.","Value signifying PCM data.","Enum listing the supported bit-depths and containers for …","","","","","","An [<code>AudioReader</code>] that reads from a given [<code>AudioChunk</code>]. …","Construct a new <code>AudioChunkReader</code> with the given <code>AudioChunk</code>…","An <code>AudioReader</code> that reads from a given <code>AudioChunk</code>. The …","An <code>AudioWriter</code> that appends to a given <code>AudioChunk</code>. The …","","Read midi files.","Re-exports from the <code>midly</code> crate.","Provides abstractions over writers, even in <code>no_std</code> …","Either <code>Ok(())</code> or the error specific to the <code>W</code> writer.","A <code>Write</code> trait available even in <code>no_std</code> environments, and …","The error type specific to the writer.","<code>Self</code> when the type is seekable, and <code>NotSeekable<Self></code> …","Write a slice of data to the writer.","Create an “invalid input”-style error from a string …","Make this writer seekable, if possible.","A <code>Seek</code> trait available even in <code>no_std</code> environments.","Where is the writer currently at.","Write a slice of data at the given absolute position, and …","The type used for the <code>Seekable</code> associated type on …","A seekable writer over an in-memory buffer.","The errors that can arise when writing to an in-memory …","The in-memory buffer was too small.","The input SMF was invalid.","Bridge between a <code>midly::io::Write</code> type and a …","","Bridge between a <code>midly::io::{Write, Seek}</code> type and a …","","Provides utilities to read and write “live” MIDI …","A live event produced by an OS API or generated …","A MIDI message associated with a channel, carrying …","","","A System Common message, as defined by the MIDI spec, …","A one-byte System Realtime message.","A “system common event”, as defined by the MIDI spec.","A system-exclusive event.","A MIDI Time Code Quarter Frame message, carrying a tag …","The number of MIDI beats (6 x MIDI clocks) that have …","Select a given song index.","","An undefined System Common message, with arbitrary data …","The different kinds of info a Midi Time Code Quarter …","The low nibble of the frame count.","The high nibble of the frame count.","The low nibble of the second count.","The high nibble of the second count.","The low nibble of the minute count.","The high nibble of the minute count.","The low nibble of the hour count.","The high nibble of the hour count.","System Realtime messages are one-byte messages that only …","If sent, they should be sent 24 times per quarter note.","","","","Once one of these messages is transmitted, a message …","","An unknown system realtime message, with the given id …","Provides support for the niche use case of reading MIDI …","A streaming raw MIDI parser. This parser takes raw MIDI, <em>…","Describes types that can be used as data buffers for the …","","","","The default buffer type used for <code>MidiStream</code>. By default …","Exotically-sized integers used by the MIDI standard.","","","","Referred to in the MIDI spec as “variable length int”.","","","Define a stack buffer type, suitable for use with …","Similar to <code>write</code>, but writes to a <code>std::io::Write</code> writer …","Helps overcome limitations of the lifetime system when …","A track, represented as a <code>Vec</code> of events along with their …","Represents a single <code>.mid</code> Standard Midi File. If you’re …","The header of this MIDI file, indicating tempo …","A list of tracks within this MIDI file.","A <code>.mid</code> Standard Midi File, but keeps a mapping to the raw …","The header of this file.","A list of tracks, along with the bytemap of their events.","A single track: simply a list of track events.","Represents an error while parsing an SMF file or MIDI …","The type of error that occurred while parsing.","Fatal errors while reading the file. It is likely that …","Non-fatal error, but the file is clearly corrupted.","The result type used by the MIDI parser.","A “meta message”, as defined by the SMF spec. These …","For <code>Format::Sequential</code> MIDI file types, <code>TrackNumber</code> can …","","","","","","","","","","","","Obligatory at track end.","Amount of microseconds per beat (quarter note).","","In order of the MIDI specification, numerator, …","As in the MIDI specification, negative numbers indicate …","","An unknown or malformed meta-message.","Represents a MIDI message, usually associated to a MIDI …","Stop playing a note.","The MIDI key to stop playing.","The velocity with which to stop playing it.","Start playing a note.","The key to start playing.","The velocity (strength) with which to press it.","Modify the velocity of a note after it has been played.","The key for which to modify its velocity.","The new velocity for the key.","Modify the value of a MIDI controller.","The controller to modify.","The value to set it to.","Change the program (also known as instrument) for a …","The new program (instrument) to use for the channel.","Change the note velocity of a whole channel at once, …","The new velocity for all notes currently playing in the …","Set the pitch bend value for the entire channel.","The new pitch-bend value.","The value of a pitch bend, represented as 14 bits.","","Represents a parsed SMF track event.","How many MIDI ticks after the previous event should this …","The type of event along with event-specific data.","Represents the different kinds of SMF events and their …","A message associated to a MIDI channel carrying musical …","","","A System Exclusive message, carrying arbitrary data.","An escape sequence, intended to send arbitrary data to …","A meta-message, giving extra information for correct …","The order in which tracks should be laid out when playing …","This file should have a single track only.","This file has several tracks that should be played …","This file has several tracks, each one a separate song.","One of the four FPS values available for SMPTE times, as …","24 frames per second.","25 frames per second.","Actually <code>29.97 = 30 / 1.001</code> frames per second.","30 frames per second.","Encodes an SMPTE time of the day.","The timing for an SMF file. This can be in ticks/beat or …","Specifies ticks/beat as a 15-bit integer.","Specifies ticks/second by dividing a second into frames …","Parse a raw MIDI file lazily, yielding its header and a …","Encode and write a generic MIDI file into the given …","An iterator over the events of a single track that keeps …","An iterator over the events of a single track. Yielded by …","A MIDI file header, indicating metadata about the file.","Information about how should the tracks be laid out when …","Tempo information about the file.","An iterator over all <em>tracks</em> in a Standard Midi File. …","Read from midi events as parsed by the <code>midly</code> crate.","Create a new <code>MidlyMidiReader</code> that will read all tracks …","Create a new <code>MidlyMidiReader</code> that will read only the …","Define how audio is read.","The type of the error that occurs when reading data.","The number of audio channels that can be read.","The sampling frequency in frames per second.","Fill the buffers. Return the number of frames that have …","Define how audio is written.","The type of the error that occurs when reading data.","Write to the specified audio buffer.","Return <code>true</code> if this <code>AudioWriter</code> is responsible for …","Return the number of channels. This method is only called …","","Define how midi is written. <em>Note</em>: there is no “…","","A wrapper around a midi writer that implements …","","","The error type that represents the errors you can get …","An error occurred when reading the audio.","An error occurred when writing the audio.","Run an audio renderer with the given audio input, audio …","An audio reader, useful for testing.","Create a new <code>TestAudioReader</code>. The newly created …","An audio writer, useful for testing.","Create a new <code>TestAudioWriter</code>. The newly created will …","A midi reader, useful for testing.","Create a new <code>TestMidiReader</code> that will return the provided …","A midi writer, useful for testing.","Create a new <code>TestMidiWriter</code> that will panic when the …","","Wrapper for the JACK backend (behind the <code>backend-jack</code> …","Re-exports of the <code>jack</code> crate. Use this so that your code …","Return JACK’s current system time in microseconds, …","A JACK client that is processing data asynchronously, in …","A client to interact with a JACK server.","Option flags for opening a JACK client.","Status flags for JACK clients.","Wrap a closure that can handle the <code>process</code> callback. This …","","Internal cycle timing information.","","","","","Specifies callbacks for JACK.","Called just once after the creation of the thread in …","Called when the JACK server shuts down the client thread. …","Called whenever “freewheel” mode is entered or …","Called whenever the system sample rate changes.","Called whenever a client is registered or unregistered","Called whenever a port is registered or unregistered","Called whenever a port is renamed.","Called whenever ports are connected/disconnected to/from …","Called whenever the processing graph is reordered.","Called whenever an xrun occurs.","Called whenever it is necessary to recompute the …","Specifies real-time processing.","Called whenever there is work to be done.","Called whenever the size of the buffer that will be …","<code>ProcessScope</code> provides information on the client and frame …","The maximum string length for port names.","Specify an option, either to continue processing, or to …","Continue processing.","Stop processing.","An error that can occur in JACK.","","","","","","","","","","","","","","","","","","","","","","Used by <code>NotificationHandler::latency()</code>.","","","Get the error callback that was set using …","Resets the JACK info callback to use stdio. Get the info …","Restores the JACK info callback to the JACK default, …","Restores the JACK info callback to the JACK default, …","Set the global JACK info callback. It is recommended to …","Set the global JACK info callback. It is recommended to …","<code>AudioIn</code> implements the <code>PortSpec</code> trait which, defines an …","<code>AudioOut</code> implements the <code>PortSpec</code> trait, which defines an …","<code>MidiIn</code> implements the <code>PortSpec</code> trait, which defines an …","Iterate through Midi Messages within a <code>Port<MidiIn></code>.","<code>MidiOut</code> implements the <code>PortSpec</code> trait, which defines an …","Write midi events to an output midi port.","An endpoint to interact with JACK data streams, for …","Flags for specifying port options.","Defines the configuration for a certain port to JACK, ie …","String used by JACK upon port creation to identify the …","Flags used by jack upon port creation.","Size used by jack upon port creation.","Contains 8bit raw midi information along with a timestamp …","The amount of time passed, in frames, relative to the …","Midi data","<code>PortSpec</code> for a port that holds has no readable or …","The maximum string length for port names.","The maximum string length for jack type names.","Type used to represent sample frame counts.","Ports have unique ids. A port registration callback is …","Type used to represent the value of free running …","A lock-free ringbuffer. The key attribute of a ringbuffer …","Read end of the ring buffer. Can only be used from one …","Write end of the ring buffer. Can only be used from one …","A structure for querying and manipulating the JACK …","Transport Bar Beat Tick data.","Time signature bar, 1 or more.","Time signature beat, 1 <= beat <= sig_num.","current tick-within-beat","Time Signature “numerator”. Jack calls this …","Time Signature “denominator”. Jack calls this …","Number of ticks within a beat.","BPM, quantized to block size. This means when the tempo …","Number of ticks that have elapsed between frame 0 and the …","An error validating a TransportBBT","<code>bar</code> must be greater than zero","<code>beat</code> must be greater than zero and less than <code>sig_num</code>","There must more than zero ticks per beat","Time signature numerator, <code>sig_num</code> must be greater than …","Time signature denominator, <code>sig_denom</code> must be greater …","<code>bpm</code> must be greater than or equal to zero","<code>tick</code> must be less than <code>ticks_per_beat</code>","A structure representing the transport position.","A representation of transport state.","","","","A helper struct encapsulating both <code>TransportState</code> and …","","","Used to communicate with <code>Jack</code>.","Get access to the underlying [<code>Client</code>] so that you can use …","Run the plugin until the user presses a key on the …","Wrapper for the VST backend (behind the <code>backend-vst</code> …","Re-exports from the <code>vst-rs</code> crate. Use this in libraries …","Structures and types for interfacing with the VST 2.4 API.","Constant values","","","","","","","VST plugins are identified by a magic number. This …","<code>VSTPluginMain</code> function signature.","Host callback function passed to plugin. Can be used to …","Dispatcher function used to process opcodes. Called by …","Process function used to process 32 bit floating point …","Process function used to process 64 bit floating point …","Callback function used to set parameter values. Called by …","Callback function used to get parameter values. Called by …","Used with the VST API to pass around plugin information.","Magic number. Must be <code>[\'V\', \'S\', \'T\', \'P\']</code>.","Host to plug-in dispatcher.","Accumulating process mode is deprecated in VST 2.4! Use …","Set value of automatable parameter.","Get value of automatable parameter.","Number of programs (Presets).","Number of parameters. All programs are assumed to have …","Number of audio inputs.","Number of audio outputs.","Bitmask made of values from <code>api::PluginFlags</code>.","Reserved for host, must be 0.","Reserved for host, must be 0.","For algorithms which need input in the first place (Group …","Deprecated unused member.","Deprecated unused member.","Deprecated unused member.","Void pointer usable by api to store object data.","User defined pointer.","Registered unique identifier (register it at Steinberg …","Plug-in version (e.g. 1100 for v1.1.0.0).","Process audio samples in replacing mode.","Process double-precision audio samples in replacing mode.","Reserved for future use (please zero).","Information about a channel. Only some hosts use this …","Channel name.","Flags found in <code>ChannelFlags</code>.","Type of speaker arrangement this channel is a part of.","Name of channel (recommended: 6 characters + delimiter).","Reserved for future use.","Tells the host how the channels are intended to be used …","User defined arrangement.","Empty arrangement.","Mono.","L R","Ls Rs","Lc Rc","Sl Sr","C Lfe","L R C","L R S","L R C Lfe","L R Lfe S","L R C S (LCRS)","L R Ls Rs (Quadro)","L R C Lfe S (LCRS + Lfe)","L R Lfe Ls Rs (Quadro + Lfe)","L R C Ls Rs","L R C Lfe Ls Rs","L R C Ls  Rs Cs","L R Ls Rs  Sl Sr","L R C Lfe Ls Rs Cs","L R Lfe Ls Rs Sl Sr","L R C Ls Rs Lc Rc","L R C Ls Rs Sl Sr","L R C Lfe Ls Rs Lc Rc","L R C Lfe Ls Rs Sl Sr","L R C Ls Rs Lc Rc Cs","L R C Ls Rs Cs Sl Sr","L R C Lfe Ls Rs Lc Rc Cs","L R C Lfe Ls Rs Cs Sl Sr","L R C Lfe Ls Rs Tfl Tfc Tfr Trl Trr Lfe2","Used to specify whether functionality is supported.","","","","","Denotes in which thread the host is in.","Unsupported by host.","GUI thread.","Audio process thread.","Sequence thread (MIDI, etc).","Offline processing thread (therefore GUI/user thread).","Language that the host is using.","","","","","","","The file operation to perform.","Load a file.","Save a file.","Load multiple files simultaneously.","Choose a directory.","Format to select files.","Regular file selector.","File type descriptor.","Display name of file type.","OS X file type.","Windows file type.","Unix file type.","MIME type.","Additional MIME type.","File selector descriptor used in …","The type of file selection to perform.","The file selector to open.","Unknown. 0 = no creator.","Number of file types.","List of file types to show.","File selector’s title.","Initial path.","Used when operation returns a single path.","Size of the path buffer in bytes.","Used when operation returns multiple paths.","Number of paths returned.","Reserved by host.","Reserved for future use.","A struct which contains events.","Number of events.","Reserved for future use. Should be 0.","Variable-length array of pointers to <code>api::Event</code> objects.","The type of event that has occured. See …","Value used for uninitialized placeholder events.","Midi event. See <code>api::MidiEvent</code>.","Deprecated.","Deprecated.","Deprecated.","Deprecated.","System exclusive event. See <code>api::SysExEvent</code>.","A VST event intended to be casted to a corresponding type.","The type of event. This lets you know which event this …","Size of this structure; <code>mem::sizeof::<Event>()</code>.","Number of samples into the current processing block that …","Generic flags, none defined in VST api yet.","The <code>Event</code> type is cast appropriately, so this acts as …","A midi event.","Should be <code>EventType::Midi</code>.","Size of this structure; <code>mem::sizeof::<MidiEvent>()</code>.","Number of samples into the current processing block that …","See <code>MidiEventFlags</code>.","Length in sample frames of entire note if available, …","Offset in samples into note from start if available, …","1 to 3 midi bytes. TODO: Doc","Reserved midi byte (0).","Detuning between -63 and +64 cents, for scales other than …","Note off velocity between 0 and 127.","Reserved for future use. Should be 0.","Reserved for future use. Should be 0.","A midi system exclusive event.","Should be <code>EventType::SysEx</code>.","Size of this structure; <code>mem::sizeof::<SysExEvent>()</code>.","Number of samples into the current processing block that …","Generic flags, none defined in VST api yet.","Size of payload in bytes.","Reserved for future use. Should be 0.","Pointer to payload.","Reserved for future use. Should be 0.","Describes the time at the start of the block currently …","current Position in audio samples (always valid)","current Sample Rate in Hertz (always valid)","System Time in nanoseconds (10^-9 second)","Musical Position, in Quarter Note (1.0 equals 1 Quarter …","current Tempo in BPM (Beats Per Minute)","last Bar Start Position, in Quarter Note","Cycle Start (left locator), in Quarter Note","Cycle End (right locator), in Quarter Note","Time Signature Numerator (e.g. 3 for 3/4)","Time Signature Denominator (e.g. 4 for 3/4)","SMPTE offset in SMPTE subframes (bits; 1/80 of a frame). …","See <code>SmpteFrameRate</code>","MIDI Clock Resolution (24 Per Quarter Note), can be …","See <code>TimeInfoFlags</code>","SMPTE Frame Rates.","24 fps","25 fps","29.97 fps","30 fps","29.97 drop","30 drop","Film 16mm","Film 35mm","HDTV: 23.976 fps","HDTV: 24.976 fps","HDTV: 59.94 fps","HDTV: 60 fps","Flags for VST channels.","Flags for VST plugins.","Cross platform modifier key flags.","MIDI event flags.","Used in the <code>flags</code> field of <code>TimeInfo</code>, and for querying the …","Buffers to safely work with audio samples.","<code>AudioBuffer</code> contains references to the audio buffers for …","Iterator over pairs of buffers of input channels and …","Wrapper type to access the buffers for the input channels …","Iterator over buffers for input channels of an <code>AudioBuffer</code>…","Wrapper type to access the buffers for the output …","Iterator over buffers for output channels of an …","This is used as a placeholder to pre-allocate space for a …","This trait is used by <code>SendEventBuffer::send_events</code> to …","writes an event into the given placeholder memory location","This buffer is used for sending midi events through the …","Meta data for dealing with input / output channels. Not …","Information about an input / output channel. This isn’t …","Target for Speaker arrangement type. Can be a cinema …","Music arrangement. Technically identical to Cinema.","Cinematic arrangement. Technically identical to Music.","An enum for all channels in a stereo configuration.","Left channel.","Right channel.","Possible stereo speaker configurations.","Regular.","Left surround, right surround.","Left center, right center.","Side left, side right.","Center, low frequency effects.","Possible surround speaker configurations.","3.0 surround sound. Cinema: L R C Music: L R S","3.1 surround sound. Cinema: L R C Lfe Music: L R Lfe S","4.0 surround sound. Cinema: L R C S (LCRS) Music: L R Ls …","4.1 surround sound. Cinema: L R C Lfe S (LCRS + Lfe) …","5.0 surround sound. Cinema and music: L R C Ls Rs","5.1 surround sound. Cinema and music: L R C Lfe Ls Rs","6.0 surround sound. Cinema: L R C Ls Rs Cs Music: L R Ls …","6.1 surround sound. Cinema: L R C Lfe Ls Rs Cs Music: L R …","7.0 surround sound. Cinema: L R C Ls Rs Lc Rc Music: L R …","7.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Music: …","8.0 surround sound. Cinema: L R C Ls Rs Lc Rc Cs Music: L …","8.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Cs …","10.2 surround sound. Cinema + Music: L R C Lfe Ls Rs Tfl …","Type representing how a channel is used. Only useful for …","Custom arrangement not specified to host.","Empty arrangement.","Mono channel.","Stereo channel. Contains type of stereo arrangement and …","Surround channel. Contains surround arrangement and …","All VST plugin editor related functionality.","Implemented by plugin editors.","Get the size of the editor window.","Get the coordinates of the editor window.","Editor idle call. Called by host.","Called when the editor window is closed.","Called when the editor window is opened.","Return whether the window is currently open.","Set the knob mode for this editor (if supported by host).","Receive key up event. Return <code>true</code> if the key was used.","Receive key down event. Return <code>true</code> if the key was used.","A platform independent key code. Includes modifier keys.","ASCII character for key pressed (if applicable).","Key pressed. See <code>enums::Key</code>.","Modifier key bitflags. See <code>enums::flags::modifier_key</code>.","Allows host to set how a parameter knob works.","","","","Platform independent key codes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Interfaces to VST events.","A VST event.","A midi event.","A system exclusive event.","A deprecated event.","A midi event.","The raw midi data associated with this event.","Number of samples into the current processing block that …","This midi event was created live as opposed to being …","The length of the midi note associated with this event, …","Offset in samples into note from note start, if available.","Detuning between -63 and +64 cents.","Note off velocity between 0 and 127.","A system exclusive event.","The SysEx payload.","Number of samples into the current processing block that …","Host specific structures.","Implemented by all VST hosts.","Automate a parameter; the value has been changed.","Get the plugin ID of the currently loading plugin.","An idle call.","Get vendor and product information.","Handle incoming events from the plugin.","Get time information.","Get block size.","Refresh UI after the plugin’s parameters changed.","All possible errors that can occur when loading a VST …","Could not load given path.","Given path is not a VST plugin.","Failed to create an instance of this plugin.","The API version which the plugin used is not supported by …","Wrapper for an externally loaded VST plugin.","An instance of an externally loaded VST plugin.","Used for constructing <code>AudioBuffer</code> instances on the host.","Plugin specific structures.","Plugin type. Generally either Effect or Synth.","Unknown / not implemented","Any effect","VST instrument","Scope, tuner, spectrum analyser, etc.","Dynamics, etc.","Panners, etc.","Delays and Reverbs","Dedicated surround processor.","Denoiser, etc.","Offline processing.","Contains other plugins.","Tone generator, etc.","A structure representing static plugin information.","Plugin Name.","Plugin Vendor.","Number of different presets.","Number of parameters.","Number of inputs.","Number of outputs.","Number of MIDI input channels (1-16), or 0 for the …","Number of MIDI output channels (1-16), or 0 for the …","Unique plugin ID. Can be registered with Steinberg to …","Plugin version (e.g. 0001 = <code>v0.0.0.1</code>, 1283 = <code>v1.2.8.3</code>).","Plugin category. Possible values are found in …","Latency of the plugin in samples.","Indicates that preset data is handled in formatless …","Indicates whether this plugin can process f64 based …","If this is true, the plugin will not produce sound when …","Features which are optionally supported by a plugin. …","","","","","","","","","","","","","Must be implemented by all VST plugins.","This method must return an <code>Info</code> struct.","Called during initialization to pass a <code>HostCallback</code> to …","Called when plugin is fully initialized.","Called when sample rate is changed by host.","Called when block size is changed by host.","Called to transition the plugin into the <em>resumed</em> state.","Called to transition the plugin into the <em>suspended</em> state.","Vendor specific handling.","Return whether plugin supports specified action.","Get the tail size of plugin when it is stopped. Used in …","Process an audio buffer containing <code>f32</code> values.","Process an audio buffer containing <code>f64</code> values.","Handle incoming events sent from the host.","Get a reference to the shared parameter object.","Get information about an input channel. Only used by some …","Get information about an output channel. Only used by …","Called one time before the start of process call.","Called after the stop of process call.","Return handle to plugin editor if supported. The method …","Parameter object shared between the UI and processing …","Set the current preset to the index specified by <code>preset</code>.","Get the current preset index.","Set the current preset name.","Get the name of the preset at the index specified by …","Get parameter label for parameter at <code>index</code> (e.g. “db”…","Get the parameter value for parameter at <code>index</code> (e.g. “…","Get the name of parameter at <code>index</code>.","Get the value of paramater at <code>index</code>. Should be value …","Set the value of parameter at <code>index</code>. <code>value</code> is between 0.0 …","Return whether parameter at <code>index</code> can be automated.","Use String as input for parameter value. Used by host to …","If <code>preset_chunks</code> is set to true in plugin info, this …","If <code>preset_chunks</code> is set to true in plugin info, this …","If <code>preset_chunks</code> is set to true in plugin info, this …","If <code>preset_chunks</code> is set to true in plugin info, this …","A reference to the host which allows the plugin to call …","Structures for easing the implementation of VST plugins.","Simple atomic floating point variable with relaxed …","A set of parameters that can be shared between threads.","An iterator over changed parameters. Returned by <code>iterate</code>.","Exports the necessary symbols for the plugin to be used …","Define some VST-specific meta-data for a VST plugin.","","","A struct used internally by the [<code>vst_init</code>] macro. …","","Create a new <code>VstPluginWrapper</code>. <em>Note</em> Normally, plugin’s …","","","","","","","","Defines an interface for communicating with the host or …","Return whether the output buffers are zero-initialized. …","Stop processing. For backends that do not support …","A marker trait that indicates that the backend can be …","This module has not been thoroughly tested, so expect …","","","","","","","Defines the behaviour of an envelope. An envelope allows …","The type of the iterator.","","Get the iterator.","","","Event handling","Queue events.","A queue for timed events.","Determines what should happen when two events are queued …","Insert the newly queued event before the previously …","Insert the newly queued event after the previously queued.","Ignore the newly queued event.","Remove the previously queued event.","Trait that describes how “event collision” (queing …","","Always queue the new newly queued event before the …","Always queue the new newly queued event after the …","Always ignore the newly queued event in case of collision …","Always remove the previously queued event in case of …","Create a new <code>EventQueue</code>.","Queue a new event. When the buffer is full, an element …","Remove all events before, but not on, this threshold.","Remove all events from the queue.","Shift time forward by <code>new_zero_time</code> frames.","","Get the first event from the <code>EventQueue</code> if there is one …","Go through the <code>EventQueue</code> and alternatingly handle events …","Create an iterator that drains all elements before but …","Create an iterator that drains all elements.","Draining iterator created by the [<code>EventQueue::drain</code>] …","The trait that plugins should implement in order to …","","An extension trait for [<code>EventHandler</code>] providing some …","Create a new event handler that first applies the given …","An [<code>EventHandler</code>] from the [<code>EventHandlerExt::map</code>] method.","The trait that plugins should implement in order to …","","A System Exclusive (“SysEx”) event.","Create a new <code>SysExEvent</code> with the given <code>data</code>.","Get the data from the <code>SysExEvent</code>","A raw midi event.","Create a new <code>RawMidiEvent</code> with the given raw data.","Try to create a new <code>RawMidiEvent</code> with the given raw data. …","Get the raw data from a <code>RawMidiEvent</code>, including “padding…","Get the raw data from a <code>RawMidiEvent</code>.","The error type when converting from <code>midly</code>’s …","Not a live event.","Cursor error (technical error).","<code>Timed<E></code> adds timing to an event.","The offset (in frames) of the event relative to the start …","The underlying event.","","<code>Indexed<E></code> adds an index to an event of type <code>E</code>. The index …","The index of the event.","The underlying event.","","","","","Stretch integer (<code>u64</code>) time stamps by a fractional factor …","Create a new <code>TimeStretcher</code>.","Stretch the input time by the factor <code>nominator/denominator</code>…","Mechanisms for defining the meta-data of a plugin or …","Define the meta-data for an application or plug-in.","The data-type that represents the meta-data.","Get the meta-data.","Define meta-data of an application or plugin as a whole.","The data-type of the general meta-data.","Get the general meta-data.","Implement this trait to indicate that a type can be used …","Get the name.","Write the name to the given buffer.","Define meta-data for input ports and output ports.","","","","A “marker” struct to be used as a type parameter for …","A “marker” struct to be used as a type parameter for …","Represents general-purpose meta-data of an audio …","The meta-data about the application or plugin as a whole.","Meta-data about the audio ports.","Meta-data about the midi ports.","Represents meta-data about a input and output ports.","Meta-data of the input ports.","Meta-data of the output ports.","Utilities for testing.","","A plugin useful for writing automated tests.","","","","Utility to facilitate genarating different sounds at the …","Some basic event dispatching.","A simple voice state","The voice is idle (in other words: doing nothing).","The voice has received a signal to stop, but is still …","The voice has not yet received a signal to stop and is …","A simple event dispatcher.","","","","","","","Used to dispatch polyphonic event to the correct voice, …","","","","","","","","","","Implement this trait to inform the polyphonic event …","","","","","","","","","","Dispatch an event to the voice or voices that should …","Re-exports from the <code>vecstorage</code> crate.","Re-usable memory for creating a vector of references.","Re-exports from the <code>rsor</code> crate.","Reusable slice of references.","Define the maximum number of audio inputs and the maximum …","The maximum number of audio inputs supported. This method …","The maximum number of audio outputs supported. This …","Define how sample-rate changes are handled.","Called when the sample-rate changes. The backend should …","Define the maximum number of midi inputs and the maximum …","The maximum number of midi inputs supported. This method …","The maximum number of midi outputs supported. This method …","Defines how audio is rendered.","This method is called repeatedly for subsequent audio …","Defines how audio is rendered, similar to the …","This method called repeatedly for subsequent buffers.","Provides common meta-data of the plugin or application to …","The name of the plugin or application.","The name of the plugin or application.","Provides some meta-data of the audio-ports used by the …","The name of the audio input with the given index. You can …","The name of the audio input with the given index. You can …","The name of the audio output with the given index. You …","The name of the audio output with the given index. You …","Provides some meta-data of the midi-ports used by the …","The name of the midi input with the given index. You can …","The name of the midi input with the given index. You can …","The name of the midi output with the given index. You can …","The name of the midi output with the given index. You can …","Create an audio chunk.","A wrapper around the <code>plugin_main!</code> macro from the <code>vst</code> …rrors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lossy convertion, loses top bit.","Lossy convertion, loses top bit.","Lossy convertion, loses top bit.","Lossy convertion, loses top bit.","Lossy convertion, loses top bit.","","Lossy convertion, loses top bitdds the set of flags.","Adds the set of flags.","Adds the set of flags.","","","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","","","","","","","","","","","","","","Deactivate and close the client.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Panics on call since the <code>Unowned</code> spec can’t be used to …","Panics on call since the <code>Unowned</code> spec can’t be used to …","Panics on call since the <code>Unowned</code> spec can’t be used to …","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","","Convert to the VST api equivalent of this structure.","","","","","","","","","","","","Convert to VST API arrangement type.","","","","","","","","","","","","","","Convert to integer ordinal for interop with VST api.","","","","","","","","","","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","","","","","","","","","","","","","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","","","","","","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","Send events to the host.","Request time information from Host.","Get block size.","Refresh UI after the plugin’s parameters changed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new sample if the given value is within range.","Constructs a new sample without checking for overflowing.","Return the internal value used to represent the sample …","Construct a new sample if the given value is within range.","Constructs a new sample without checking for overflowing.","Return the internal value used to represent the sample …","Construct a new sample if the given value is within range.","Constructs a new sample without checking for overflowing.","Return the internal value used to represent the sample …","Construct a new sample if the given value is within range.","Constructs a new sample without checking for overflowing.","Return the internal value used to represent the sample …","Construct a new sample if the given value is within range.","Constructs a new sample without checking for overflowing.","Return the internal value used to represent the sample …","Construct a new sample if the given value is within range.","Constructs a new sample without checking for overflowing.","Return the internal value used to represent the sample …","Construct a new sample if the given value is within range.","Constructs a new sample without checking for overflowing.","Return the internal value used to represent the sample …","Construct a new sample if the given value is within range.","Constructs a new sample without checking for overflowing.","Return the internal value used to represent the sample …","Creates a new Header object.","","Create a new cursor located at the start of the given …","Create a cursor from a buffer and the cursor within it.","Yield the underlying buffer and the cursor within it.","Get a reference to the whole underlying buffer.","Get a mutable reference to the whole underlying buffer.","Get the position of the cursor.","Get a reference to the written portion of the buffer.","Get a reference to the portion of the buffer that is not …","Split the buffer into the written and unwritten parts.","Get a mutable reference to the written portion of the …","Get a mutable reference to the portion of the buffer that …","Split the buffer into the written and unwritten parts.","Parse a complete MIDI message from its raw bytes.","Write a standalone message to the given output.","Write a message, skipping the status if it shares the …","Write a standalone message to the given <code>std::io::Write</code> …","Write a message, skipping the status if it shares the …","Convert this <code>LiveEvent</code> into a static <code>TrackEventKind</code>, …","Create a system realtime event from its id byte.","Get the id byte for this system realtime message.","Create a new clean midi stream with the default buffer …","Create a new clean midi stream using the given data …","Feeds a slice of bytes to the stream, calling the …","Indicates to the stream that this is an event boundary, …","","","The maximum value that this restricted integer can hold.","Creates a restricted int from its non-restricted …","Creates a restricted int from its non-restricted …","Returns <code>Some</code> if the raw integer is within range of the …","Get the inner integer out of the wrapper. The inner …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of restricted integers to the corresponding …","The maximum value that this restricted integer can hold.","Creates a restricted int from its non-restricted …","Creates a restricted int from its non-restricted …","Returns <code>Some</code> if the raw integer is within range of the …","Get the inner integer out of the wrapper. The inner …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of restricted integers to the corresponding …","The maximum value that this restricted integer can hold.","Creates a restricted int from its non-restricted …","Creates a restricted int from its non-restricted …","Returns <code>Some</code> if the raw integer is within range of the …","Get the inner integer out of the wrapper. The inner …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of restricted integers to the corresponding …","The maximum value that this restricted integer can hold.","Creates a restricted int from its non-restricted …","Creates a restricted int from its non-restricted …","Returns <code>Some</code> if the raw integer is within range of the …","Get the inner integer out of the wrapper. The inner …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of restricted integers to the corresponding …","The maximum value that this restricted integer can hold.","Creates a restricted int from its non-restricted …","Creates a restricted int from its non-restricted …","Returns <code>Some</code> if the raw integer is within range of the …","Get the inner integer out of the wrapper. The inner …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of restricted integers to the corresponding …","The maximum value that this restricted integer can hold.","Creates a restricted int from its non-restricted …","Creates a restricted int from its non-restricted …","Returns <code>Some</code> if the raw integer is within range of the …","Get the inner integer out of the wrapper. The inner …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of raw integers to a slice of restricted …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of mutable raw integers to a slice of …","Cast a slice of restricted integers to the corresponding …","Create a new empty arena.","Empty this arena, deallocating all added bytes.","Get the amount of allocations in the arena.","Add a set of bytes to the arena, returning a longer-lived …","Add a <code>Vec<u8></code> to the arena, returning a long-lived …","Add a set of databytes to the arena, returning a …","Add a <code>Vec<u7></code> to the arena, returning a long-lived …","Create a new empty <code>Smf</code> with zero tracks, using the given …","Parse a <code>.mid</code> Standard Midi File from its raw bytes. If …","Encodes and writes the file to the given generic writer.","Encodes and writes the file to the given <code>std::io::Write</code> …","Encodes and writes the file to the given path.","Create a new empty <code>SmfBytemap</code> with zero tracks, using the …","Parse a Standard Midi File from its raw bytes, keeping a …","Encodes and writes the <em>events</em> (not the bytemap) to the …","Encodes and writes the <em>events</em> (not the bytemap) to the …","Creates/overwrites the file at the given path and writes …","Create a new error with the given <code>ErrorKind</code>.","More information about the error itself.","The underlying cause for this error.","Get the informative message on what exact part of the …","The minimum value of <code>0x0000</code>, indicating full bend …","The middle value of <code>0x2000</code>, indicating no bend.","The maximum value of <code>0x3FFF</code>, indicating full bend upwards.","Create a <code>PitchBend</code> value from an int in the range …","Create a <code>PitchBend</code> value from a number in the range …","Create a <code>PitchBend</code> value from a number in the range …","Returns an int in the range <code>[-0x2000, 0x1FFF]</code>.","Returns an <code>f32</code> in the range <code>[-1.0, 1.0)</code>.","Returns an <code>f64</code> in the range <code>[-1.0, 1.0)</code>.","Lossy conversion from a track event to a live event.","Converts an integer representing the semantic fps to an …","Get the integral approximate fps out.","Get the actual <code>f32</code> fps out.","","","","","","","","","Create an event iterator from raw track bytes.","Get the remaining unparsed event bytes.","Get the current running status of the track.","Modify the current running status of the track.","Stop collecting bytemap information for any remaining …","Collects the remaining unparsed events into a …","Create an event iterator from raw track bytes.","Get the remaining unparsed event bytes.","Get the current running status of the track.","Modify the current running status of the track.","Make this event iterator keep track of the raw bytes that …","Collects the remaining unparsed events into a <code>Track</code>.","Create a new header from its raw parts.","Create an event iterator from raw SMF bytes, excluding …","Peek at the remaining unparsed bytes in the file.","Parse and collect the remaining unparsed tracks into a <code>Vec</code>…","Parse and collect the remaining unparsed tracks into a <code>Vec</code>…","Tell the JACK server that the program is ready to start …","Return the underlying <code>jack::Client</code>.","Tell the JACK server to remove this client from the …","Opens a JACK client with the given name and options. If …","Begin processing in real-time using the specified …","The sample rate of the JACK system, as set by the user …","The current CPU load estimated by JACK. It is on a scale …","Get the name of the current client. This may differ from …","The current maximum size that will every be passed to the …","Change the buffer size passed to the process callback.","Get a String representation of the <code>uuid</code> of this client.","Get the name of a client by its <code>&str</code> uuid.","Returns a vector of port names that match the specified …","Create a new port for the client. This is an object used …","Get a <code>Port</code> by its port id.","Get a <code>Port</code> by its port name.","The estimated time in frames that has passed since the …","The estimated current time in frames. This function is …","The estimated time in microseconds of the specified frame …","The estimated time in frames for the specified system …","Returns <code>true</code> if the port <code>port</code> belongs to this client.","Toggle input monitoring for the port with name <code>port_name</code>.","Establish a connection between two ports by their full …","Establish a connection between two ports.","Remove all connections to/from the port.","","Remove a connection between two ports.","Remove a connection between two ports.","The buffer size of a port type","Expose the underlying ffi pointer.","Create a <code>Client</code> from an ffi pointer.","Get a <code>Transport</code> object associated with this client.","Do not automatically start the JACK server when it is not …","Use the exact client name requested. Otherwise, JACK …","Open with optional <code>server_name</code> parameter.","Load internal client from optional <code>load_name</code>, otherwise …","Pass optional <code>load_init</code> to <code>jack_initialize()</code> entry point …","Pass a SessionID token. This allows the session manager …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Overall operation failed. File an issue if you can get it …","The operation contained an invalid or unsupported option.","The desired client name was not unique. With the …","The JACK server was started as a result of this …","Unable to connect to the JACK server.","Communication error with the JACK server.","Requested client does not exist.","Unable to load internal client","Unable to initialize client","Unable to access shared memory","Client’s protocol version does not match","No documentation found. TODO: dig deeper","No documentation found. TODO: dig deeper","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","","The number of frames in the current process cycle.","The precise time at the start of the current process …","The estimated time in frames that has passed since the …","Provides the internal cycle timing information as used by …","Expose the <code>client_ptr</code> for low level purposes.","Create a <code>ProcessScope</code> for the client with the given …","","","Return the next element without advancing the iterator.","Return the next element only if the message passes the …","Write an event into an event port buffer.","Get the number of events that could not be written to …","Get the size of the largest event that can be stored by …","Read the received audio data.","Get a slice to write audio data to.","Get an iterator over midi events.","Create a writer that can write midi events to the …","Returns the spec that was used to create this port.","Return a copy of port as an unowned port that can still …","Returns the full name of the port, including the “…","Returns the short name of the port, it excludes the “…","The flags for the port. These are set when the port is …","The port type. JACK’s built in types include …","Number of ports connected to/from <code>&self</code>.","Returns <code>true</code> if the port is directly connected to a port …","Get the alias names for <code>self</code>.","Returns <code>true</code> if monitoring has been requested for <code>self</code>.","Turn input monitoring for the port on or off.","If the <code>CAN_MONITOR</code> flag is set for the port, then input …","Set’s the short name of the port. If the full name is …","Sets <code>alias</code> as an alias for <code>self</code>.","Remove <code>alias</code> as an alias for port. May be called at any …","Create a Port from raw JACK pointers.","Obtain the client pointer that spawned this port.","Obtain the ffi port pointer.","Obtain the buffer that the Port is holding. For standard …","Set the minimum and maximum latencies defined by mode for …","Returns a tuple of the minimum and maximum latencies …","The port can receive data.","Data can be read from the port.","Port corresponds to some kind of physical I/O connector.","A call to <code>jack_port_request_monitor()</code> makes sense.","For an input port, the data received by the port will not …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Allocates a ringbuffer of a specified size.","Lock a ringbuffer data block into memory.","Resets the ring buffer, making an empty buffer.","Create a reader and writer, to use the ring buffer.","Re-create the ring buffer object from reader and writer. …","Fill a data structure with a description of the current …","Read data from the ringbuffer.  Returns: the number of …","Read data from the ringbuffer. Opposed to read_buffer() …","Advance the read pointer. use this after peek/peek_iter …","Return the number of bytes available for reading.","Iterator that goes over all the data available to read.","Write data into the ringbuffer.  Returns: The number of …","Advance the write pointer. use this after peek_iter or …","Return the number of bytes available for writing.","Return a pair of slices of the current writable space in …","Iterator that goes over all the data available to write.","Start the JACK transport rolling.","Stop the JACK transport.","Request a new transport position.","Reposition the transport to a new frame number.","Query the current transport state and position.","Query the current transport state.","Set bar, beat, tick","Set Beats Per Minute.","Set the time signature.","Set ticks per beat.","Set bar start tick.","Validate contents.","","Query to see if the BarBeatsTick data is valid.","Query to see if the frame offset of BarBeatsTick data is …","Get the frame number on the transport timeline.","Set the frame number on the transport timeline.","Get the current frame rate, in frames per second.","Get a microsecond timestamp.","Get the BarBeatsTick data if it is valid.","Set the BarBeatsTick data in this position.","Get the frame offset for the BBT fields.","Set the frame offset for the BBT fields.","Return handle to Plugin object. Only works for plugins …","Drop the Plugin object. Only works for plugins created …","Create a <code>Supported</code> value from an integer if possible.","Use this in your impl of process_events() to process the …","Indicates channel is active. Ignored by host.","Indicates channel is first of stereo pair.","Use channel’s specified speaker_arrangement instead of …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Plugin has an editor.","Plugin can process 32 bit audio. (Mandatory in VST 2.4).","Plugin preset data is handled in formatless chunks.","Plugin is a synth.","Plugin does not produce sound when all input is silence.","Supports 64 bit audio processing.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Shift key.","Alt key.","Control on mac.","Command on mac, ctrl on other.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","This event is played live (not in playback from a …","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Indicates that play, cycle or record state has changed.","Set if Host sequencer is currently playing.","Set if Host sequencer is in cycle mode.","Set if Host sequencer is in record mode.","Set if automation write mode active (record parameter …","Set if automation read mode active (play parameter …","Set if TimeInfo::nanoseconds is valid.","Set if TimeInfo::ppq_pos is valid.","Set if TimeInfo::tempo is valid.","Set if TimeInfo::bar_start_pos is valid.","Set if both TimeInfo::cycle_start_pos and …","Set if both TimeInfo::time_sig_numerator and …","Set if both TimeInfo::smpte_offset and …","Set if TimeInfo::samples_to_next_clock is valid.","Returns an empty set of flags","Returns the set containing all flags.","Returns the raw value of the flags currently stored.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the …","Create an <code>AudioBuffer</code> from raw pointers. Only really …","The number of input channels that this buffer was created …","The number of output channels that this buffer was …","The number of samples in this buffer (same for all …","Split this buffer into separate inputs and outputs.","Create an iterator over pairs of input buffers and output …","Number of channels","Returns true if the buffer is empty","Access channel at the given index","Split borrowing at the given index, like for slices","Number of channels","Returns true if the buffer is empty","Access channel at the given index","Mutably access channel at the given index","Split borrowing at the given index, like for slices","Creates a buffer for sending up to the given number of …","Sends events to the host. See the <code>fwd_midi</code> example.","Sends events from the host to a plugin.","Construct a new <code>ChannelInfo</code> object.","Determine whether this channel is part of a surround …","Determine whether this channel is the left speaker in a …","Load a plugin at the given path with the given host.","Try to create an instance of this VST plugin.","Create a <code>HostBuffer</code> for a given number of input and …","Create a <code>HostBuffer</code> for the number of input and output …","Bind sample arrays to the <code>HostBuffer</code> to create an …","Number of input channels supported by this <code>HostBuffer</code>.","Number of output channels supported by this <code>HostBuffer</code>.","Converts a string to a <code>CanDo</code> instance. Any given string …","Get the VST API version supported by the host e.g. …","Get the callback for calling host-specific extensions","Get the effect pointer for calling host-specific …","New atomic float with initial value <code>value</code>.","Get the current value of the atomic float.","Set the value of the atomic float to <code>value</code>.","Create a new parameter set with <code>parameter_count</code> …","Set the value of the parameter with index <code>index</code> to <code>value</code> …","Get the current value of the parameter with index <code>index</code>.","Iterate over all parameters marked as changed. If <code>acquire</code> …","Create a new [<code>VecStorage<T></code>] with the provided capacity.","Get the capacity of the [<code>VecStorage</code>].","Creates a new [<code>VecGuard</code>] using the memory allocated by …","Creates a new reusable slice with capacity <code>0</code>.","Creates a new reusable slice with the given capacity.","Returns a slice of references that has been filled by the …","Returns a slice of mutable references that has been …","Returns a slice of references that has been filled by …","Returns a slice of mutable references that has been …","Returns a slice of references given a list of things that …","Returns a mutable slice of references given a list of …","Returns the number of references that can be used without …"],"i":[0,0,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,5,5,0,6,0,0,0,7,8,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,0,0,13,13,0,0,10,0,11,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,0,0,15,15,15,15,15,0,0,0,14,14,14,14,14,14,0,0,0,15,15,15,15,15,0,16,0,0,17,0,0,0,0,0,18,18,18,18,18,0,19,19,0,0,0,20,20,0,21,0,22,0,0,23,24,24,23,23,0,25,25,25,25,25,25,0,26,26,26,26,26,26,26,26,0,27,27,27,27,27,27,27,0,0,0,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,0,30,30,0,0,0,31,31,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,33,34,34,33,35,35,33,36,36,33,37,37,33,38,33,39,33,40,0,41,0,42,42,0,43,44,44,43,43,43,0,45,45,45,0,46,46,46,46,0,0,47,47,0,0,0,0,0,48,48,0,0,49,49,0,50,50,50,50,0,51,51,51,51,0,0,52,0,53,53,0,54,54,0,0,55,0,56,0,57,0,58,58,0,0,0,0,0,0,0,0,59,0,60,60,60,60,0,61,61,61,61,61,61,61,61,61,61,61,0,62,62,0,0,0,63,63,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,65,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,0,67,67,0,0,0,0,0,0,0,0,0,0,0,68,68,68,68,68,68,68,68,0,69,69,69,69,69,69,69,0,0,70,70,70,0,71,71,0,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,74,74,74,74,74,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,76,76,76,76,0,77,77,77,77,77,0,78,78,78,78,78,78,0,79,79,79,79,0,80,0,81,81,81,81,81,81,0,82,82,82,82,82,82,82,82,82,82,82,82,82,0,83,83,83,0,84,84,84,84,84,84,84,0,85,85,85,85,85,0,86,86,86,86,86,86,86,86,86,86,86,86,0,87,87,87,87,87,87,87,87,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,89,89,89,89,89,89,89,89,89,89,89,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,0,0,0,0,91,91,0,92,92,0,93,93,93,93,93,0,94,94,94,94,94,94,94,94,94,94,94,94,94,0,95,95,95,95,95,0,0,96,96,96,96,96,96,96,96,96,0,97,97,97,0,98,98,98,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,0,100,100,100,0,101,101,101,101,101,101,101,0,102,102,0,0,103,103,103,103,103,103,103,103,0,104,104,104,104,0,0,0,0,0,105,105,105,105,105,105,105,105,105,105,105,105,0,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,0,107,107,107,107,107,107,107,107,107,107,107,107,0,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,0,0,0,0,0,0,110,110,0,111,111,111,111,111,111,111,111,111,0,112,112,0,0,0,0,0,0,113,113,0,114,114,114,114,114,0,0,0,0,115,115,115,115,0,116,0,0,0,0,117,117,117,117,117,117,117,117,117,117,0,0,118,0,119,0,0,120,0,121,121,0,122,122,122,122,0,123,123,0,124,124,124,0,125,125,125,0,126,126,0,127,127,0,0,128,128,0,129,129,0,130,130,0,131,131,131,0,0,0,132,132,132,0,133,133,0,0,0,134,134,0,0,0,0,135,135,135,0,136,0,137,137,137,137,0,138,0,139,139,0,0,140,140,140,0,141,0,142,142,142,142,0,143,0,144,0,0,0,0,0,145,145,0,146,0,147,147,0,148,0,149,0,150,150,0,151,151,151,151,0,152,152,152,152,0,0,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,153,153,153,153,153,153,153,153,153,153,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,154,154,154,154,154,154,154,154,154,154,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,9,9,9,9,9,9,9,9,9,155,155,155,155,155,155,155,155,155,155,155,156,156,156,156,156,156,156,156,156,156,156,157,157,157,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,162,162,162,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,163,163,163,163,163,163,163,163,163,163,163,164,164,164,164,164,164,164,164,164,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,165,165,165,165,165,165,165,165,165,165,165,166,166,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,174,174,174,174,174,174,174,174,174,174,174,174,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,41,41,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,42,42,43,43,43,43,43,43,43,43,43,43,43,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,175,175,175,175,175,175,175,175,175,175,175,47,47,47,47,47,47,47,47,47,47,47,176,176,176,176,176,176,176,176,176,176,176,176,177,177,177,177,177,177,177,177,177,177,177,177,48,48,48,48,48,48,48,48,48,48,48,178,178,178,178,178,178,178,178,178,178,178,178,49,49,49,49,49,49,49,49,49,49,53,53,53,53,53,53,53,53,53,54,54,54,54,54,54,54,54,54,54,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,179,179,179,179,179,179,179,179,179,180,180,180,180,180,180,180,180,180,181,181,181,181,181,181,181,181,181,181,181,182,182,182,182,182,182,182,182,182,182,182,59,59,59,59,59,59,59,59,59,60,60,60,60,60,60,60,60,60,60,60,183,183,183,183,183,183,183,183,183,184,184,184,184,184,184,184,184,184,63,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,185,185,185,185,185,185,185,185,185,185,185,186,186,186,186,186,186,186,186,186,186,186,187,187,187,187,187,187,187,187,187,187,187,188,188,188,188,188,188,188,188,188,188,188,188,189,189,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,192,192,192,67,67,67,67,67,67,67,67,67,67,67,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,195,195,195,195,195,195,195,195,195,196,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,68,68,68,68,68,68,68,68,68,68,68,69,69,69,69,69,69,69,69,69,69,69,69,200,200,200,200,200,200,200,200,200,70,70,70,70,70,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,74,74,74,74,74,74,74,74,74,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,84,85,85,85,85,85,85,85,85,85,85,85,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,87,87,88,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,89,201,201,201,201,201,201,201,201,201,201,201,202,202,202,202,202,202,202,202,202,202,202,203,203,203,203,203,203,203,203,203,203,203,204,204,204,204,204,204,204,204,204,204,204,205,205,205,205,205,205,205,205,205,205,205,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,208,208,208,208,208,208,208,208,208,208,208,209,209,209,209,209,209,209,209,209,209,210,210,210,210,210,210,210,210,210,211,211,211,211,211,211,211,211,211,211,212,212,212,212,212,212,212,212,212,213,213,213,213,213,213,213,213,213,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,95,95,95,95,95,95,95,95,95,97,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,102,104,104,104,104,104,104,104,104,104,104,214,214,214,214,214,214,214,214,214,215,215,215,215,215,215,215,215,215,216,216,216,216,216,216,216,216,216,105,105,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,217,217,217,217,217,217,217,217,217,217,217,218,218,218,218,218,218,218,218,218,219,219,219,219,219,219,219,219,219,220,220,220,220,220,220,220,220,220,220,111,111,111,111,111,111,111,111,111,221,221,221,221,221,221,221,221,221,221,222,222,222,222,222,222,222,222,222,113,113,113,113,113,113,113,113,113,113,113,117,117,117,117,117,117,117,117,117,115,115,115,115,115,115,115,115,115,223,223,223,223,223,223,223,223,223,224,224,224,224,224,224,224,224,224,225,225,225,225,225,225,225,225,225,226,226,226,226,226,226,226,226,226,227,227,227,227,227,227,227,227,227,227,228,228,228,228,228,228,228,228,228,121,121,121,121,121,121,121,121,121,121,121,122,122,122,122,122,122,122,122,122,122,122,123,123,123,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,124,124,124,125,125,125,125,125,125,125,125,125,125,125,126,126,126,126,126,126,126,126,126,126,126,127,127,127,127,127,127,127,127,127,229,229,229,229,229,229,229,229,229,230,230,230,230,230,230,230,230,230,132,132,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,133,231,231,231,231,231,231,231,231,231,134,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,135,135,135,136,136,136,136,136,136,136,136,136,137,137,137,137,137,137,137,137,137,138,138,138,138,138,138,138,138,138,138,138,232,232,232,232,232,232,232,232,232,140,140,140,140,140,140,140,140,140,140,140,233,233,233,233,233,233,233,233,233,234,234,234,234,234,234,234,234,234,233,233,158,158,157,158,162,158,161,158,162,161,158,161,162,157,157,161,162,161,161,161,157,161,157,157,157,158,162,161,157,162,162,161,162,158,157,162,158,158,157,158,157,158,161,162,157,162,162,157,158,162,161,161,157,161,156,155,162,160,159,158,159,160,157,162,155,161,158,156,157,162,158,159,161,155,160,156,160,159,158,155,157,162,156,161,155,157,156,158,160,161,159,162,160,161,159,158,157,155,156,162,156,162,160,155,157,159,161,158,158,155,159,162,156,157,160,161,158,159,160,157,155,156,161,162,157,156,158,159,160,162,155,161,156,156,157,156,161,158,158,157,162,158,162,158,158,157,160,157,155,161,156,156,159,157,157,158,158,161,157,158,159,161,160,155,158,158,156,162,158,160,162,155,162,156,162,162,162,159,159,158,158,157,157,160,160,161,161,155,155,156,156,159,158,155,157,157,159,156,155,160,162,158,161,162,158,155,159,161,157,156,160,155,156,160,162,158,161,157,159,159,155,156,160,162,158,161,157,162,160,156,158,159,161,155,157,161,158,162,160,159,156,157,155,14,15,14,15,14,14,15,15,15,15,14,15,15,14,14,15,14,22,22,164,164,163,163,164,164,164,21,21,163,163,22,22,22,166,166,166,171,168,172,169,167,174,170,26,46,168,168,171,171,47,47,27,27,175,175,25,25,32,32,45,172,172,29,29,167,167,170,170,23,23,43,43,48,48,41,41,169,169,30,30,42,42,33,33,172,41,23,27,170,167,46,43,175,25,26,171,168,42,30,33,45,166,47,32,29,169,48,168,167,171,170,172,169,168,174,31,170,169,171,172,167,176,177,178,178,169,21,22,166,172,167,165,170,173,168,171,174,173,171,20,27,30,163,172,176,26,32,168,174,21,46,42,23,43,178,166,47,175,167,33,22,29,170,48,31,169,45,41,165,177,25,170,171,172,169,168,167,174,33,171,175,27,167,31,178,170,172,41,26,165,30,173,23,166,21,20,45,168,43,48,42,47,169,176,164,25,46,177,29,163,32,22,192,181,182,182,192,181,182,181,192,191,182,181,192,182,192,181,182,191,181,192,182,192,181,69,64,197,180,198,196,179,192,182,181,68,67,64,192,60,188,181,65,193,71,179,69,182,183,186,63,200,190,180,189,187,70,191,185,187,187,187,186,186,186,193,193,193,189,189,189,185,185,185,181,182,192,182,181,192,192,181,182,181,192,182,198,198,59,197,181,182,192,68,68,182,182,192,192,60,60,181,181,63,70,67,67,191,69,64,64,188,188,188,188,188,63,189,185,68,193,186,67,200,187,192,181,182,67,69,192,187,70,188,191,182,64,65,68,60,186,185,63,189,181,182,192,181,192,181,182,192,182,181,191,192,181,182,184,195,194,195,194,184,203,204,201,202,205,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,201,203,205,202,204,99,213,107,98,105,99,98,105,98,105,99,99,105,95,99,98,98,98,105,105,98,99,98,105,105,99,99,76,99,98,105,98,99,105,205,202,204,203,201,205,203,204,201,202,203,201,202,205,204,201,202,203,204,205,104,215,204,203,202,205,201,102,101,100,97,203,204,205,202,89,84,104,99,107,98,105,106,201,204,203,205,202,201,205,203,202,201,204,203,201,204,205,202,205,201,203,202,204,208,210,99,99,99,99,95,98,213,105,105,98,105,105,98,105,98,98,98,99,105,99,105,105,100,98,99,105,98,99,99,98,98,99,105,202,202,203,203,204,204,205,205,201,201,76,76,210,208,203,205,201,204,202,209,207,211,220,217,217,217,217,217,217,217,217,95,88,89,219,217,106,218,212,205,202,201,204,203,202,85,87,100,88,84,204,101,75,97,105,217,102,99,203,89,205,98,106,208,201,201,203,205,204,202,204,201,202,205,203,205,204,203,202,201,205,201,202,203,204,202,201,203,204,205,234,234,5,5,5,8,8,8,16,16,16,55,55,55,5,9,9,9,17,17,17,56,6,58,53,53,72,72,217,222,222,222,223,224,225,226,53,72,72,228,231,134,231,132,132,132,132,132,232,136,136,136,134,134,134,134,122,124,125,122,124,125,16,123,227,153,154,6,49,57,221,227,227,1,4,113,121,122,123,124,125,126,138,140,135,232,136,4,4,113,113,121,121,122,122,124,124,125,125,126,126,138,138,140,140,135,135,117,1,2,3,4,7,54,113,121,122,123,124,125,126,138,140,7,54,123,117,117,122,7,54,123,155,155,155,156,156,156,157,157,157,158,158,158,159,159,159,160,160,160,161,161,161,162,162,162,14,163,164,164,164,164,164,164,164,164,164,164,164,164,23,23,23,23,23,23,27,27,165,165,165,165,166,166,167,167,167,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,29,29,29,29,29,30,30,30,30,30,174,174,174,31,41,41,41,41,41,41,41,41,41,43,46,46,46,175,175,175,175,175,175,175,175,176,176,176,176,176,176,177,177,177,177,177,177,48,178,178,178,178,179,179,179,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,59,183,183,183,183,183,183,63,65,188,188,190,190,190,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,196,196,196,196,196,197,197,197,197,197,197,198,198,198,198,198,199,199,199,199,199,199,68,68,68,68,68,68,68,200,200,200,200,200,200,200,200,200,200,73,73,76,83,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,206,206,206,206,206,206,208,208,208,208,210,210,210,210,210,212,212,212,213,95,95,214,214,216,216,216,216,216,107,217,217,217,218,218,218,219,219,219,219,233,233,233,234,234,234,234,234,234,234,234,234],"f":[null,null,[[["usize",15]]],[[],["usize",15]],[[],["usize",15]],[[]],[[["vec",3]],["audiobufferin",3]],[[["slice",3]],["audiobufferin",3]],[[["usize",15]],["option",4]],[[["usize",15]]],null,[[["usize",15]]],[[],["usize",15]],[[],["usize",15]],[[]],[[["usize",15]]],[[["vec",3]],["audiobufferout",3]],[[["slice",3]],["audiobufferout",3]],[[["usize",15]],["option",4]],[[["usize",15]]],[[]],[[],["audiobufferoutchanneliteratormut",3]],[[["vec",3]],["audiobufferin",3]],null,null,[[["usize",15]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]],["option",4]],[[["usize",15]]],[[["usize",15]],["option",4]],[[["usize",15]]],[[["vec",3],["vec",3]],["audiobufferinout",3]],[[["slice",3],["slice",3]],["audiobufferinout",3]],[[]],[[],["audiobufferin",3]],[[],["audiobufferout",3]],[[["slice",3]]],[[["vecstorage",3]]],null,null,[[["usize",15]]],[[["usize",15]]],[[["vec",3],["vec",3]]],[[["usize",15]]],[[],["interlacedsampleiterator",3]],[[["usize",15]]],[[],["vec",3]],[[],["usize",15]],[[]],[[],[["vec",3],["vec",3]]],[[],["vec",3]],[[],["vec",3]],[[["usize",15]],["vec",3]],[[["usize",15]],["vec",3]],[[["usize",15]],["vec",3]],null,null,null,null,[[["u32",15],["usize",15]]],[[]],null,[[]],null,null,null,null,[[["wavreader",3]],[["result",4],["houndaudioerror",4]]],null,[[["wavwriter",3]],[["result",4],["houndaudioerror",4]]],null,null,null,null,[[["i8",15]],["i16",15]],[[["i8",15]],["i24",3]],[[["i8",15]],["i32",15]],[[["i8",15]],["i48",3]],[[["i8",15]],["i64",15]],[[["i8",15]],["u8",15]],[[["i8",15]],["u16",15]],[[["i8",15]],["u24",3]],[[["i8",15]],["u32",15]],[[["i8",15]],["u48",3]],[[["i8",15]],["u64",15]],[[["i8",15]],["f32",15]],[[["i8",15]],["f64",15]],null,[[["i16",15]],["i8",15]],[[["i16",15]],["i24",3]],[[["i16",15]],["i32",15]],[[["i16",15]],["i48",3]],[[["i16",15]],["i64",15]],[[["i16",15]],["u8",15]],[[["i16",15]],["u16",15]],[[["i16",15]],["u24",3]],[[["i16",15]],["u32",15]],[[["i16",15]],["u48",3]],[[["i16",15]],["u64",15]],[[["i16",15]],["f32",15]],[[["i16",15]],["f64",15]],null,[[["i24",3]],["i8",15]],[[["i24",3]],["i16",15]],[[["i24",3]],["i32",15]],[[["i24",3]],["i48",3]],[[["i24",3]],["i64",15]],[[["i24",3]],["u8",15]],[[["i24",3]],["u16",15]],[[["i24",3]],["u24",3]],[[["i24",3]],["u32",15]],[[["i24",3]],["u48",3]],[[["i24",3]],["u64",15]],[[["i24",3]],["f32",15]],[[["i24",3]],["f64",15]],null,[[["i32",15]],["i8",15]],[[["i32",15]],["i16",15]],[[["i32",15]],["i24",3]],[[["i32",15]],["i48",3]],[[["i32",15]],["i64",15]],[[["i32",15]],["u8",15]],[[["i32",15]],["u16",15]],[[["i32",15]],["u24",3]],[[["i32",15]],["u32",15]],[[["i32",15]],["u48",3]],[[["i32",15]],["u64",15]],[[["i32",15]],["f32",15]],[[["i32",15]],["f64",15]],null,[[["i48",3]],["i8",15]],[[["i48",3]],["i16",15]],[[["i48",3]],["i24",3]],[[["i48",3]],["i32",15]],[[["i48",3]],["i64",15]],[[["i48",3]],["u8",15]],[[["i48",3]],["u16",15]],[[["i48",3]],["u24",3]],[[["i48",3]],["u32",15]],[[["i48",3]],["u48",3]],[[["i48",3]],["u64",15]],[[["i48",3]],["f32",15]],[[["i48",3]],["f64",15]],null,[[["i64",15]],["i8",15]],[[["i64",15]],["i16",15]],[[["i64",15]],["i24",3]],[[["i64",15]],["i32",15]],[[["i64",15]],["i48",3]],[[["i64",15]],["u8",15]],[[["i64",15]],["u16",15]],[[["i64",15]],["u24",3]],[[["i64",15]],["u32",15]],[[["i64",15]],["u48",3]],[[["i64",15]],["u64",15]],[[["i64",15]],["f32",15]],[[["i64",15]],["f64",15]],null,[[["u8",15]],["i8",15]],[[["u8",15]],["i16",15]],[[["u8",15]],["i24",3]],[[["u8",15]],["i32",15]],[[["u8",15]],["i48",3]],[[["u8",15]],["i64",15]],[[["u8",15]],["u16",15]],[[["u8",15]],["u24",3]],[[["u8",15]],["u32",15]],[[["u8",15]],["u48",3]],[[["u8",15]],["u64",15]],[[["u8",15]],["f32",15]],[[["u8",15]],["f64",15]],null,[[["u16",15]],["i8",15]],[[["u16",15]],["i16",15]],[[["u16",15]],["i24",3]],[[["u16",15]],["i32",15]],[[["u16",15]],["i48",3]],[[["u16",15]],["i64",15]],[[["u16",15]],["u8",15]],[[["u16",15]],["u24",3]],[[["u16",15]],["u32",15]],[[["u16",15]],["u48",3]],[[["u16",15]],["u64",15]],[[["u16",15]],["f32",15]],[[["u16",15]],["f64",15]],null,[[["u24",3]],["i8",15]],[[["u24",3]],["i16",15]],[[["u24",3]],["i24",3]],[[["u24",3]],["i32",15]],[[["u24",3]],["i48",3]],[[["u24",3]],["i64",15]],[[["u24",3]],["u8",15]],[[["u24",3]],["u16",15]],[[["u24",3]],["u32",15]],[[["u24",3]],["u48",3]],[[["u24",3]],["u64",15]],[[["u24",3]],["f32",15]],[[["u24",3]],["f64",15]],null,[[["u32",15]],["i8",15]],[[["u32",15]],["i16",15]],[[["u32",15]],["i24",3]],[[["u32",15]],["i32",15]],[[["u32",15]],["i48",3]],[[["u32",15]],["i64",15]],[[["u32",15]],["u8",15]],[[["u32",15]],["u16",15]],[[["u32",15]],["u24",3]],[[["u32",15]],["u48",3]],[[["u32",15]],["u64",15]],[[["u32",15]],["f32",15]],[[["u32",15]],["f64",15]],null,[[["u48",3]],["i8",15]],[[["u48",3]],["i16",15]],[[["u48",3]],["i24",3]],[[["u48",3]],["i32",15]],[[["u48",3]],["i48",3]],[[["u48",3]],["i64",15]],[[["u48",3]],["u8",15]],[[["u48",3]],["u16",15]],[[["u48",3]],["u24",3]],[[["u48",3]],["u32",15]],[[["u48",3]],["u64",15]],[[["u48",3]],["f32",15]],[[["u48",3]],["f64",15]],null,[[["u64",15]],["i8",15]],[[["u64",15]],["i16",15]],[[["u64",15]],["i24",3]],[[["u64",15]],["i32",15]],[[["u64",15]],["i48",3]],[[["u64",15]],["i64",15]],[[["u64",15]],["u8",15]],[[["u64",15]],["u16",15]],[[["u64",15]],["u24",3]],[[["u64",15]],["u32",15]],[[["u64",15]],["u48",3]],[[["u64",15]],["f32",15]],[[["u64",15]],["f64",15]],null,[[["f32",15]],["i8",15]],[[["f32",15]],["i16",15]],[[["f32",15]],["i24",3]],[[["f32",15]],["i32",15]],[[["f32",15]],["i48",3]],[[["f32",15]],["i64",15]],[[["f32",15]],["u8",15]],[[["f32",15]],["u16",15]],[[["f32",15]],["u24",3]],[[["f32",15]],["u32",15]],[[["f32",15]],["u48",3]],[[["f32",15]],["u64",15]],[[["f32",15]],["f64",15]],null,[[["f64",15]],["i8",15]],[[["f64",15]],["i16",15]],[[["f64",15]],["i24",3]],[[["f64",15]],["i32",15]],[[["f64",15]],["i48",3]],[[["f64",15]],["i64",15]],[[["f64",15]],["u8",15]],[[["f64",15]],["u16",15]],[[["f64",15]],["u24",3]],[[["f64",15]],["u32",15]],[[["f64",15]],["u48",3]],[[["f64",15]],["u64",15]],[[["f64",15]],["f32",15]],null,[[]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],null,null,[[]],null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",4],["error",3]]],[[["bitdepth",4],["header",3]],[["error",3],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u64",15]]],null,null,[[["audiochunk",3]]],null,null,null,null,null,null,null,[[],["result",4]],[[["str",15]]],[[],["option",4]],null,[[],[["result",4],["u64",15]]],[[["u64",15]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[["header",3]],[["error",3],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",4],["error",3]]],[[["header",3]],["result",4]],null,null,null,null,null,null,null,[[["smf",3]],["result",4]],[[["smf",3]],["result",4]],null,null,[[],["usize",15]],[[],["u64",15]],[[["audiobufferout",3]],[["usize",15],["result",4]]],null,null,[[["audiobufferin",3]],["result",4]],[[],["bool",15]],[[],["usize",15]],null,null,[[["rawmidievent",3],["deltaevent",3]]],null,[[["f64",15]]],[[["u64",15]]],null,null,null,[[["usize",15]],[["combinederror",4],["result",4]]],null,[[["audiobufferreader",6],["usize",15],["vec",3]]],null,[[["audiochunk",3],["vec",3]]],null,[[["vec",3],["deltaevent",3]]],null,[[["vec",3],["deltaevent",3]]],[[]],null,null,[[],["u64",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[["client",3]]],[[["clientstatus",3],["str",15]]],[[["bool",15],["client",3]]],[[["u32",15],["client",3]],["control",4]],[[["bool",15],["client",3],["str",15]]],[[["u32",15],["bool",15],["client",3]]],[[["u32",15],["client",3],["str",15]],["control",4]],[[["u32",15],["bool",15],["client",3]]],[[["client",3]],["control",4]],[[["client",3]],["control",4]],[[["client",3],["latencytype",4]]],null,[[["client",3],["processscope",3]],["control",4]],[[["u32",15],["client",3]],["control",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["portflags",3]],[[],["u64",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["client",3]],[[],[["result",4],["error",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["sysexevent",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["knobmode",4]],["bool",15]],[[["keycode",3]],["bool",15]],[[["keycode",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["f32",15],["i32",15]]],[[],["i32",15]],[[]],[[]],[[["events",3]]],[[["i32",15]],[["option",4],["timeinfo",3]]],[[],["isize",15]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["info",3]],[[["hostcallback",3]]],[[]],[[["f32",15]]],[[["i64",15]]],[[]],[[]],[[["isize",15],["f32",15],["i32",15]],["isize",15]],[[["cando",4]],["supported",4]],[[],["isize",15]],[[["audiobuffer",3]]],[[["audiobuffer",3]]],[[["events",3]]],[[],[["arc",3],["pluginparameters",8]]],[[["i32",15]],["channelinfo",3]],[[["i32",15]],["channelinfo",3]],[[]],[[]],[[],[["box",3],["option",4]]],null,[[["i32",15]]],[[],["i32",15]],[[["string",3]]],[[["i32",15]],["string",3]],[[["i32",15]],["string",3]],[[["i32",15]],["string",3]],[[["i32",15]],["string",3]],[[["i32",15]],["f32",15]],[[["f32",15],["i32",15]]],[[["i32",15]],["bool",15]],[[["string",3],["i32",15]],["bool",15]],[[],[["vec",3],["global",3],["u8",15]]],[[],[["vec",3],["global",3],["u8",15]]],[[]],[[]],null,null,null,null,null,null,null,[[],["i32",15]],[[],["category",4]],null,[[],["info",3]],[[["hostcallback",3]]],[[],["hostcallback",3]],[[["audiobuffer",3]]],[[["audiobuffer",3]]],[[["i32",15]],["channelinfo",3]],[[["i32",15]],["channelinfo",3]],[[["events",3]]],[[["f64",15]]],null,[[],["bool",15]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,[[],["eventcollisionhandling",4]],null,null,null,null,[[["usize",15]]],[[["timed",3]],[["timed",3],["option",4]]],[[["u32",15]]],[[]],[[["u32",15]]],[[["u32",15]],[["timed",3],["option",4]]],[[],[["timed",3],["option",4]]],[[["audiobufferinout",3],["vecstorage",3],["vecstorage",3]]],[[["u32",15]],["drainingiter",3]],[[],["drainingiter",3]],null,null,[[]],null,[[],["map",3]],null,null,[[]],null,[[]],[[]],null,[[]],[[],["option",4]],[[]],[[]],null,null,null,null,null,null,[[["u32",15]]],null,null,null,[[["usize",15]]],null,null,null,null,[[["nonzerou64",3],["u64",15]]],[[["option",4],["u64",15]],["u64",15]],null,null,null,[[]],null,null,[[]],null,[[],["str",15]],[[],[["result",4],["error",3]]],null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3],["audiochunk",3],["vec",3],["vec",3]]],[[]],null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,[[],["eventdispatchclass",4]],null,null,null,null,null,null,[[]],null,null,[[],["voiceassignment",4]],[[],[["usize",15],["option",4]]],[[],["usize",15]],null,[[]],null,[[]],null,null,null,null,null,[[],["usize",15]],[[],["usize",15]],null,[[["f64",15]]],null,[[],["usize",15]],[[],["usize",15]],null,[[["audiobufferinout",3]]],null,[[["audiobufferinout",3]]],null,[[],["str",15]],[[],[["result",4],["error",3]]],null,[[["usize",15]],["string",3]],[[["usize",15]],[["result",4],["error",3]]],[[["usize",15]],["string",3]],[[["usize",15]],[["result",4],["error",3]]],null,[[["usize",15]],["string",3]],[[["usize",15]],[["result",4],["error",3]]],[[["usize",15]],["string",3]],[[["usize",15]],[["result",4],["error",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[["i8",15]],["i48",3]],[[["u32",15]],["i48",3]],[[["u32",15]],["i24",3]],[[["u48",3]],["i48",3]],[[["i32",15]],["u48",3]],[[["u24",3]],["i48",3]],[[["f32",15]],["u24",3]],[[["i32",15]],["i48",3]],[[["f64",15]],["u48",3]],[[["u48",3]],["u24",3]],[[["i24",3]],["i48",3]],[[["i32",15]],["u24",3]],[[["i64",15]],["u48",3]],[[["i64",15]],["i24",3]],[[["u8",15]],["i24",3]],[[["u64",15]],["u24",3]],[[["u24",3]],["u48",3]],[[["u8",15]],["u24",3]],[[["i24",3]],["u24",3]],[[["f64",15]],["u24",3]],[[["u48",3]],["i24",3]],[[["i64",15]],["u24",3]],[[["i8",15]],["i24",3]],[[["u24",3]],["i24",3]],[[["f64",15]],["i24",3]],[[["f64",15]],["i48",3]],[[["u32",15]],["u48",3]],[[["i16",15]],["u24",3]],[[["f32",15]],["i24",3]],[[["i16",15]],["u48",3]],[[["u64",15]],["u48",3]],[[["u16",15]],["u24",3]],[[["i48",3]],["u48",3]],[[["i16",15]],["i48",3]],[[["i32",15]],["i24",3]],[[["u16",15]],["u48",3]],[[["u64",15]],["i48",3]],[[["f32",15]],["i48",3]],[[["i48",3]],["i24",3]],[[["u16",15]],["i48",3]],[[["u64",15]],["i24",3]],[[["u8",15]],["i48",3]],[[["i8",15]],["u24",3]],[[["i8",15]],["u48",3]],[[["i16",15]],["i24",3]],[[["u8",15]],["u48",3]],[[["f32",15]],["u48",3]],[[["u16",15]],["i24",3]],[[["i64",15]],["i48",3]],[[["i24",3]],["u48",3]],[[["i48",3]],["u24",3]],[[["u32",15]],["u24",3]],[[["i24",3]],["i24",3]],[[["u24",3]],["u24",3]],[[["i20",3]],["i20",3]],[[["i11",3]],["i11",3]],[[["u48",3]],["u48",3]],[[["u20",3]],["u20",3]],[[["u11",3]],["u11",3]],[[["i48",3]],["i48",3]],[[["u11",3]],["ordering",4]],[[["u20",3]],["ordering",4]],[[["i24",3]],["ordering",4]],[[["u48",3]],["ordering",4]],[[["i11",3]],["ordering",4]],[[["u24",3]],["ordering",4]],[[["i48",3]],["ordering",4]],[[["i20",3]],["ordering",4]],[[["i24",3]],["i24",3]],[[["u48",3]],["u48",3]],[[["i48",3]],["i48",3]],[[["u11",3]],["u11",3]],[[["u24",3]],["u24",3]],[[["i11",3]],["i11",3]],[[["u20",3]],["u20",3]],[[["i20",3]],["i20",3]],[[["u20",3]],["u20",3]],[[["u11",3]],["u11",3]],[[["i48",3]],["i48",3]],[[["i11",3]],["i11",3]],[[["i24",3]],["i24",3]],[[["u48",3]],["u48",3]],[[["i20",3]],["i20",3]],[[["u24",3]],["u24",3]],[[["i11",3]],["i11",3]],[[["i24",3]],["i24",3]],[[["i20",3]],["i20",3]],[[["i48",3]],["i48",3]],[[["u20",3]],["u20",3]],[[["u24",3]],["u24",3]],[[["u11",3]],["u11",3]],[[["u48",3]],["u48",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["i20",3]],[[],["u48",3]],[[],["u20",3]],[[],["i11",3]],[[],["i24",3]],[[],["u11",3]],[[],["u24",3]],[[],["i48",3]],[[["i48",3]],["i48",3]],[[["i11",3]],["i11",3]],[[["u11",3]],["u11",3]],[[["u48",3]],["u48",3]],[[["i20",3]],["i20",3]],[[["i24",3]],["i24",3]],[[["u20",3]],["u20",3]],[[["u24",3]],["u24",3]],[[["i48",3]],["i48",3]],[[["u11",3]],["u11",3]],[[["u20",3]],["u20",3]],[[["i24",3]],["i24",3]],[[["i11",3]],["i11",3]],[[["i20",3]],["i20",3]],[[["u24",3]],["u24",3]],[[["u48",3]],["u48",3]],[[["i24",3]],["i24",3]],[[["i20",3]],["i20",3]],[[["i48",3]],["i48",3]],[[["u11",3]],["u11",3]],[[["u20",3]],["u20",3]],[[["u48",3]],["u48",3]],[[["i11",3]],["i11",3]],[[["u24",3]],["u24",3]],[[["i11",3]],["i20",3]],[[["u11",3]],["i20",3]],[[["i16",15]],["i24",3]],[[["i8",15]],["i20",3]],[[["u8",15]],["u24",3]],[[["i32",15]],["i48",3]],[[["u24",3]],["i48",3]],[[["i8",15]],["i24",3]],[[["u8",15]],["u48",3]],[[["u20",3]],["i48",3]],[[["u20",3]],["u48",3]],[[["u32",15]],["i48",3]],[[["i64",15]],["i48",3]],[[["i32",15]],["i24",3]],[[["u8",15]],["u20",3]],[[["i20",3]],["i24",3]],[[["i16",15]],["i11",3]],[[["i32",15]],["u24",3]],[[["u16",15]],["i20",3]],[[["i16",15]],["i20",3]],[[["i16",15]],["u11",3]],[[["u20",3]],["i24",3]],[[["u16",15]],["i24",3]],[[["i8",15]],["i48",3]],[[["u8",15]],["i48",3]],[[["u20",3]],["u24",3]],[[["u8",15]],["i24",3]],[[["i16",15]],["i48",3]],[[["u8",15]],["u11",3]],[[["u16",15]],["u24",3]],[[["i32",15]],["u20",3]],[[["i8",15]],["i11",3]],[[["u16",15]],["i48",3]],[[["i20",3]],["i48",3]],[[["u8",15]],["i20",3]],[[["u16",15]],["u48",3]],[[["i24",3]],["i48",3]],[[["u16",15]],["u20",3]],[[["u24",3]],["u48",3]],[[["u8",15]],["i11",3]],[[["u32",15]],["u48",3]],[[["i32",15]],["i20",3]],[[["i64",15]],["u48",3]],[[["u48",3]],["bool",15]],[[["u48",3]],["bool",15]],[[["u11",3]],["bool",15]],[[["u11",3]],["bool",15]],[[["i48",3]],["bool",15]],[[["i48",3]],["bool",15]],[[["i24",3]],["bool",15]],[[["i24",3]],["bool",15]],[[["u20",3]],["bool",15]],[[["u20",3]],["bool",15]],[[["u24",3]],["bool",15]],[[["u24",3]],["bool",15]],[[["i11",3]],["bool",15]],[[["i11",3]],["bool",15]],[[["i20",3]],["bool",15]],[[["i20",3]],["bool",15]],[[],["u11",3]],[[],["i48",3]],[[],["i11",3]],[[],["i24",3]],[[],["i24",3]],[[],["u11",3]],[[],["i20",3]],[[],["i11",3]],[[],["u20",3]],[[],["u48",3]],[[],["i48",3]],[[],["u24",3]],[[],["u48",3]],[[],["i48",3]],[[],["i11",3]],[[],["u11",3]],[[],["u24",3]],[[],["i24",3]],[[],["i20",3]],[[],["u20",3]],[[["i11",3]],["i11",3]],[[["i20",3]],["i20",3]],[[["u20",3]],["u20",3]],[[["u48",3]],["u48",3]],[[["i48",3]],["i48",3]],[[["u24",3]],["u24",3]],[[["i24",3]],["i24",3]],[[["u11",3]],["u11",3]],[[["u11",3]],["u11",3]],[[["i11",3]],["i11",3]],[[["i20",3]],["i20",3]],[[["u20",3]],["u20",3]],[[["u48",3]],["u48",3]],[[["i48",3]],["i48",3]],[[["u24",3]],["u24",3]],[[["i24",3]],["i24",3]],[[["u48",3]],["u48",3]],[[["u20",3]],["u20",3]],[[["i20",3]],["i20",3]],[[["i48",3]],["i48",3]],[[["u11",3]],["u11",3]],[[["u24",3]],["u24",3]],[[["i11",3]],["i11",3]],[[["i24",3]],["i24",3]],[[["u24",3]],[["ordering",4],["option",4]]],[[["i48",3]],[["ordering",4],["option",4]]],[[["u48",3]],[["ordering",4],["option",4]]],[[["u20",3]],[["ordering",4],["option",4]]],[[["u11",3]],[["ordering",4],["option",4]]],[[["i20",3]],[["ordering",4],["option",4]]],[[["i24",3]],[["ordering",4],["option",4]]],[[["i11",3]],[["ordering",4],["option",4]]],[[],["header",3]],[[],["bitdepth",4]],[[],["header",3]],[[],["bitdepth",4]],[[],[["result",4],["header",3]]],[[]],[[["vec",3],["global",3],["u8",15]],["bitdepth",4]],[[["i16",15],["global",3],["vec",3]],["bitdepth",4]],[[["i32",15],["global",3],["vec",3]],["bitdepth",4]],[[["vec",3],["global",3],["f32",15]],["bitdepth",4]],[[],["header",3]],[[["bitdepth",4]],["bool",15]],[[["bitdepth",4]],["bool",15]],[[["header",3]],["bool",15]],[[["header",3]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],[["result",4],["error",3],["u64",15]]],[[["u64",15]],[["error",3],["result",4]]],[[],[["result",4],["u64",15]]],[[["u64",15]],["result",4]],[[],[["result",4],["u64",15]]],[[["u64",15]],["result",4]],[[],["result",4]],[[["str",15]],["cursorerror",4]],[[],[["cursor",3],["option",4]]],[[],[["error",3],["result",4]]],[[["str",15]],["error",3]],[[],["result",4]],[[["str",15]]],[[],[["error",3],["result",4]]],[[["str",15]],["error",3]],[[],[["option",4],["seekablewrap",3]]],[[],["result",4]],[[]],[[]],[[["u8",15]],["u4",3]],[[["u16",15]],["u15",3]],[[["u8",15]],["u7",3]],[[["u32",15]],["u24",3]],[[["u16",15]],["u14",3]],[[["errorkind",4]],["error",3]],[[["u32",15]],["u28",3]],[[["mtcquarterframemessage",4]],["bool",15]],[[["fps",4]],["bool",15]],[[["u15",3]],["bool",15]],[[["u15",3]],["bool",15]],[[["u4",3]],["bool",15]],[[["u4",3]],["bool",15]],[[["timing",4]],["bool",15]],[[["timing",4]],["bool",15]],[[["systemrealtime",4]],["bool",15]],[[["systemrealtime",4]],["bool",15]],[[["smptetime",3]],["bool",15]],[[["smptetime",3]],["bool",15]],[[["systemcommon",4]],["bool",15]],[[["systemcommon",4]],["bool",15]],[[["metamessage",4]],["bool",15]],[[["metamessage",4]],["bool",15]],[[["format",4]],["bool",15]],[[["u7",3]],["bool",15]],[[["u7",3]],["bool",15]],[[["smf",3]],["bool",15]],[[["smf",3]],["bool",15]],[[["u14",3]],["bool",15]],[[["u14",3]],["bool",15]],[[["u28",3]],["bool",15]],[[["u28",3]],["bool",15]],[[["liveevent",4]],["bool",15]],[[["liveevent",4]],["bool",15]],[[["trackeventkind",4]],["bool",15]],[[["trackeventkind",4]],["bool",15]],[[["header",3]],["bool",15]],[[["header",3]],["bool",15]],[[["pitchbend",3]],["bool",15]],[[["pitchbend",3]],["bool",15]],[[["u24",3]],["bool",15]],[[["u24",3]],["bool",15]],[[["smfbytemap",3]],["bool",15]],[[["smfbytemap",3]],["bool",15]],[[["trackevent",3]],["bool",15]],[[["trackevent",3]],["bool",15]],[[["midimessage",4]],["bool",15]],[[["midimessage",4]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u15",3]],["ordering",4]],[[["u14",3]],["ordering",4]],[[["u4",3]],["ordering",4]],[[["u28",3]],["ordering",4]],[[["u7",3]],["ordering",4]],[[["u24",3]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["option",4]],[[],["option",4]],[[]],[[],[["option",4],["result",4]]],[[],["u24",3]],[[],["iowrap",3]],[[],["seekablewrap",3]],[[],["defaultbuffer",3]],[[],["u7",3]],[[],["u14",3]],[[],["midistream",3]],[[],["u28",3]],[[],["arena",3]],[[],["u15",3]],[[],["u4",3]],[[],[["error",8],["option",4]]],[[]],[[],["u4",3]],[[],["cursorerror",4]],[[],["systemrealtime",4]],[[],["smfbytemap",3]],[[],["notseekable",3]],[[],["u7",3]],[[],["eventbytemapiter",3]],[[],["mtcquarterframemessage",4]],[[],["metamessage",4]],[[],["u15",3]],[[],["error",3]],[[],["iowrap",3]],[[],["fps",4]],[[],["trackevent",3]],[[],["liveevent",4]],[[],["trackeventkind",4]],[[],["trackiter",3]],[[],["defaultbuffer",3]],[[],["timing",4]],[[],["smptetime",3]],[[],["u14",3]],[[],["midimessage",4]],[[],["seekablewrap",3]],[[],["smf",3]],[[],["u28",3]],[[],["header",3]],[[],["errorkind",4]],[[],["u24",3]],[[],["format",4]],[[],["pitchbend",3]],[[],["midistream",3]],[[],["eventiter",3]],[[],["systemcommon",4]],[[["u28",3]],[["ordering",4],["option",4]]],[[["u4",3]],[["ordering",4],["option",4]]],[[["u7",3]],[["ordering",4],["option",4]]],[[["u24",3]],[["ordering",4],["option",4]]],[[["u15",3]],[["ordering",4],["option",4]]],[[["u14",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["portflags",3]],[[],["clientoptions",3]],[[],["clientstatus",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["clientstatus",3]]],[[["clientoptions",3]]],[[["portflags",3]]],[[]],[[]],[[]],[[]],[[["clientstatus",3]],["clientstatus",3]],[[["portflags",3]],["portflags",3]],[[["clientoptions",3]],["clientoptions",3]],[[["clientstatus",3]],["ordering",4]],[[["port",3]],["ordering",4]],[[["clientoptions",3]],["ordering",4]],[[["portflags",3]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[["portflags",3]]],[[["clientstatus",3]]],[[["clientoptions",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["str",15]],[[],["portflags",3]],[[],["u64",15]],[[],["str",15]],[[],["portflags",3]],[[],["u64",15]],[[],["str",15]],[[],["portflags",3]],[[],["u64",15]],[[],["str",15]],[[],["portflags",3]],[[],["u64",15]],[[],["str",15]],[[],["portflags",3]],[[],["u64",15]],[[],["clientoptions",3]],[[],["clientstatus",3]],[[],["portflags",3]],[[["clientstatus",3]],["clientstatus",3]],[[["clientoptions",3]],["clientoptions",3]],[[["portflags",3]],["portflags",3]],[[]],[[]],[[]],[[["clientoptions",3]]],[[["portflags",3]]],[[["clientstatus",3]]],[[],[["usize",15],["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[["client",3],["processscope",3]],["control",4]],[[],[["usize",15],["error",3],["result",4]]],[[["clientoptions",3]]],[[["clientstatus",3]]],[[["portflags",3]]],[[["transportbbt",3]],["bool",15]],[[["transportbbt",3]],["bool",15]],[[["clientstatus",3]],["bool",15]],[[["clientstatus",3]],["bool",15]],[[["portflags",3]],["bool",15]],[[["portflags",3]],["bool",15]],[[["cycletimes",3]],["bool",15]],[[["cycletimes",3]],["bool",15]],[[["clientoptions",3]],["bool",15]],[[["clientoptions",3]],["bool",15]],[[["control",4]],["bool",15]],[[["transportstate",4]],["bool",15]],[[["rawmidi",3]],["bool",15]],[[["rawmidi",3]],["bool",15]],[[["port",3]],["bool",15]],[[["transportbbtvalidationerror",4]],["bool",15]],[[["error",4]],["bool",15]],[[["error",4]],["bool",15]],[[],["option",4]],[[]],[[],["usize",15]],[[],["option",4]],[[["usize",15]],["option",4]],[[],["control",4]],[[],["midiout",3]],[[],["audioin",3]],[[],["transportbbt",3]],[[],["unowned",3]],[[],["audioout",3]],[[],["rawmidi",3]],[[],["transportposition",3]],[[],["midiin",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["rawmidi",3]],[[],["transportbbtvalidationerror",4]],[[],["portflags",3]],[[],["midiin",3]],[[],["transportstate",4]],[[],["midiiter",3]],[[],[["port",3],["unowned",3]]],[[],["clientstatus",3]],[[],["error",4]],[[],["latencytype",4]],[[],["transportbbt",3]],[[],["cycletimes",3]],[[],["audioout",3]],[[],["audioin",3]],[[],["control",4]],[[],["midiout",3]],[[],["clientoptions",3]],[[["clientstatus",3]],["clientstatus",3]],[[["portflags",3]],["portflags",3]],[[["clientoptions",3]],["clientoptions",3]],[[["portflags",3]],["portflags",3]],[[["clientoptions",3]],["clientoptions",3]],[[["clientstatus",3]],["clientstatus",3]],[[["portflags",3]],[["ordering",4],["option",4]]],[[["clientstatus",3]],[["ordering",4],["option",4]]],[[["clientoptions",3]],[["ordering",4],["option",4]]],[[["port",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["client_name_size",3]]],[[["port_type_size",3]]],[[["port_name_size",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["info",3]],[[]],[[["f32",15]]],[[["i64",15]]],[[]],[[]],[[["isize",15],["f32",15],["i32",15]],["isize",15]],[[["cando",4]],["supported",4]],[[],["isize",15]],[[["audiobuffer",3]]],[[["audiobuffer",3]]],[[["events",3]]],[[["i32",15]],["channelinfo",3]],[[["i32",15]],["channelinfo",3]],[[],[["arc",3],["pluginparameters",8]]],[[],[["box",3],["option",4]]],[[["channelflags",3]]],[[["modifierkey",3]]],[[["timeinfoflags",3]]],[[["pluginflags",3]]],[[["midieventflags",3]]],[[],["u32",15]],[[],["channelproperties",3]],[[],["string",3]],[[],["u64",15]],[[],["i16",15]],[[],["i8",15]],[[],["i32",15]],[[],["usize",15]],[[],["u16",15]],[[],["i64",15]],[[],["i16",15]],[[],["u64",15]],[[],["u64",15]],[[],["speakerarrangementtype",4]],[[],["u16",15]],[[],["u32",15]],[[],["i16",15]],[[],["usize",15]],[[],["i8",15]],[[],["i32",15]],[[],["u8",15]],[[],["usize",15]],[[],["i8",15]],[[],["isize",15]],[[],["u8",15]],[[],["i64",15]],[[],["u8",15]],[[],["isize",15]],[[],["i32",15]],[[],["i64",15]],[[],["u32",15]],[[],["isize",15]],[[],["isize",15]],[[],["u16",15]],[[]],[[]],[[]],[[]],[[]],[[["timeinfoflags",3]],["timeinfoflags",3]],[[["modifierkey",3]],["modifierkey",3]],[[["midieventflags",3]],["midieventflags",3]],[[["channelflags",3]],["channelflags",3]],[[["pluginflags",3]],["pluginflags",3]],[[["modifierkey",3]],["ordering",4]],[[["channelflags",3]],["ordering",4]],[[["pluginflags",3]],["ordering",4]],[[["timeinfoflags",3]],["ordering",4]],[[["midieventflags",3]],["ordering",4]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[["midieventflags",3]]],[[["modifierkey",3]]],[[["pluginflags",3]]],[[["timeinfoflags",3]]],[[["channelflags",3]]],[[["sysexevent",3]]],[[["sysexevent",3]]],[[["sysexevent",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["midieventflags",3]],[[],["modifierkey",3]],[[],["timeinfoflags",3]],[[],["pluginflags",3]],[[],["channelflags",3]],[[["timeinfoflags",3]],["timeinfoflags",3]],[[["modifierkey",3]],["modifierkey",3]],[[["pluginflags",3]],["pluginflags",3]],[[["channelflags",3]],["channelflags",3]],[[["midieventflags",3]],["midieventflags",3]],[[]],[[]],[[]],[[]],[[]],[[["timeinfoflags",3]]],[[["channelflags",3]]],[[["modifierkey",3]]],[[["pluginflags",3]]],[[["midieventflags",3]]],[[]],[[["usize",15]]],[[["i32",15]],["key",4]],[[["u16",15]],["key",4]],[[["u8",15]],["key",4]],[[["u64",15]],["key",4]],[[["channelproperties",3]],["speakerarrangementtype",4]],[[["u64",15]],["knobmode",4]],[[["channelproperties",3]],["channelinfo",3]],[[["isize",15]],["category",4]],[[["u8",15]],["category",4]],[[["u8",15]],["knobmode",4]],[[["i8",15]],["category",4]],[[["u64",15]],["category",4]],[[["i16",15]],["knobmode",4]],[[["i16",15]],["category",4]],[[["u16",15]],["knobmode",4]],[[["i64",15]],["knobmode",4]],[[["usize",15]],["knobmode",4]],[[["i16",15]],["key",4]],[[["usize",15]],["category",4]],[[["i8",15]],["key",4]],[[["i32",15]],["category",4]],[[["u32",15]],["category",4]],[[["event",3]],["event",4]],[[["i32",15]],["knobmode",4]],[[["i64",15]],["key",4]],[[["u16",15]],["category",4]],[[["i8",15]],["knobmode",4]],[[["usize",15]],["key",4]],[[["u32",15]],["key",4]],[[["u32",15]],["knobmode",4]],[[["isize",15]],["knobmode",4]],[[["isize",15]],["key",4]],[[["i64",15]],["category",4]],[[["pluginflags",3]],["bool",15]],[[["pluginflags",3]],["bool",15]],[[["modifierkey",3]],["bool",15]],[[["modifierkey",3]],["bool",15]],[[["midieventflags",3]],["bool",15]],[[["midieventflags",3]],["bool",15]],[[["timeinfoflags",3]],["bool",15]],[[["timeinfoflags",3]],["bool",15]],[[["channelflags",3]],["bool",15]],[[["channelflags",3]],["bool",15]],[[["supported",4]],["bool",15]],[[["supported",4]],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[["modifierkey",3]]],[[["timeinfoflags",3]]],[[["channelflags",3]]],[[["midieventflags",3]]],[[["pluginflags",3]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["f32",15],["i32",15]]],[[],["i32",15]],[[]],[[]],[[["events",3]]],[[["i32",15]],[["option",4],["timeinfo",3]]],[[],["isize",15]],[[]],[[],["speakerarrangementtype",4]],[[],["timeinfo",3]],[[],["smpteframerate",4]],[[],["parametertransfer",3]],[[],["hostcallback",3]],[[],["info",3]],[[],["atomicfloat",3]],[[],["sendeventbuffer",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["pluginflags",3]],[[],["event",3]],[[],["sysexevent",3]],[[],["event",4]],[[],["timeinfo",3]],[[],["eventtype",4]],[[],["midieventflags",3]],[[],["midievent",3]],[[],["speakerarrangementtype",4]],[[],["keycode",3]],[[],["category",4]],[[],["hostcallback",3]],[[],["sysexevent",3]],[[],["key",4]],[[],["modifierkey",3]],[[],["smpteframerate",4]],[[],["timeinfoflags",3]],[[],["knobmode",4]],[[],["info",3]],[[],["inputs",3]],[[],["channelflags",3]],[[["channelflags",3]],["channelflags",3]],[[["modifierkey",3]],["modifierkey",3]],[[["timeinfoflags",3]],["timeinfoflags",3]],[[["midieventflags",3]],["midieventflags",3]],[[["pluginflags",3]],["pluginflags",3]],[[["midieventflags",3]],["midieventflags",3]],[[["channelflags",3]],["channelflags",3]],[[["pluginflags",3]],["pluginflags",3]],[[["timeinfoflags",3]],["timeinfoflags",3]],[[["modifierkey",3]],["modifierkey",3]],[[["timeinfoflags",3]],[["ordering",4],["option",4]]],[[["midieventflags",3]],[["ordering",4],["option",4]]],[[["modifierkey",3]],[["ordering",4],["option",4]]],[[["pluginflags",3]],[["ordering",4],["option",4]]],[[["channelflags",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["pluginflags",3]],[[],["channelflags",3]],[[],["modifierkey",3]],[[],["midieventflags",3]],[[],["timeinfoflags",3]],[[],["slice",3]],[[]],[[],["usize",15]],[[],["u64",15]],[[["audiobufferout",3]],[["usize",15],["result",4]]],[[],["usize",15]],[[],["u64",15]],[[["audiobufferout",3]],[["usize",15],["result",4]]],[[],["usize",15]],[[],["u64",15]],[[["audiobufferout",3]],[["usize",15],["result",4]]],[[],["usize",15]],[[],["u64",15]],[[["audiobufferout",3]],[["usize",15],["result",4]]],[[["audiobufferin",3]],["result",4]],[[["audiobufferin",3]],["result",4]],[[],["bool",15]],[[],["usize",15]],[[["audiobufferin",3]],["result",4]],[[],["bool",15]],[[],["usize",15]],[[["audiobufferin",3]],["result",4]],[[["rawmidievent",3],["deltaevent",3]]],[[["rawmidievent",3],["deltaevent",3]]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[],["bool",15]],[[]],[[["timed",3]]],[[["u32",15]]],[[],["eventcollisionhandling",4]],[[],["eventcollisionhandling",4]],[[],["eventcollisionhandling",4]],[[],["eventcollisionhandling",4]],[[["rawmidievent",3],["timed",3]]],[[["indexed",3],["timed",3]]],[[["indexed",3],["timed",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["eventdispatchclass",4]],[[],["eventdispatchclass",4]],[[],[["usize",15],["option",4]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["f64",15]]],[[["audiobufferinout",3]]],[[],["rawmidievent",3]],[[]],[[]],[[],["rawmidievent",3]],[[]],[[]],[[]],[[["cursorerror",4]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["option",4],["deltaevent",3]]],[[],["option",4]],[[],["option",4]],[[]],[[],["audiobufferin",3]],[[],["audiochunk",3]],[[],["envelopeiteratoritem",3]],[[],["sysexevent",3]],[[],["rawmidievent",3]],[[],["midlyconversionerror",4]],[[]],[[]],[[],["deltaevent",3]],[[],["toneidentifier",3]],[[],["voiceassignment",4]],[[],["simplevoicestate",4]],[[],["rawmidieventtoneidentifierdispatchclassifier",3]],[[]],[[["audiochunk",3]],["bool",15]],[[["audiochunk",3]],["bool",15]],[[["envelopeiteratoritem",3]],["bool",15]],[[["envelopeiteratoritem",3]],["bool",15]],[[["sysexevent",3]],["bool",15]],[[["sysexevent",3]],["bool",15]],[[["rawmidievent",3]],["bool",15]],[[["rawmidievent",3]],["bool",15]],[[["timed",3]],["bool",15]],[[["timed",3]],["bool",15]],[[["indexed",3]],["bool",15]],[[["indexed",3]],["bool",15]],[[["deltaevent",3]],["bool",15]],[[["deltaevent",3]],["bool",15]],[[["toneidentifier",3]],["bool",15]],[[["toneidentifier",3]],["bool",15]],[[["voiceassignment",4]],["bool",15]],[[["voiceassignment",4]],["bool",15]],[[["simplevoicestate",4]],["bool",15]],[[["simplevoicestate",4]],["bool",15]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["usize",15]]],[[["usize",15]]],[[["trackeventkind",4]],["result",4]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[],[["option",4],["error",8]]],[[["i16",15]],[["i11",3],["option",4]]],[[["i16",15]],["i11",3]],[[],["i16",15]],[[["i32",15]],[["option",4],["i20",3]]],[[["i32",15]],["i20",3]],[[],["i32",15]],[[["i32",15]],[["option",4],["i24",3]]],[[["i32",15]],["i24",3]],[[],["i32",15]],[[["i64",15]],[["i48",3],["option",4]]],[[["i64",15]],["i48",3]],[[],["i64",15]],[[["i16",15]],[["option",4],["u11",3]]],[[["i16",15]],["u11",3]],[[],["i16",15]],[[["i32",15]],[["u20",3],["option",4]]],[[["i32",15]],["u20",3]],[[],["i32",15]],[[["i32",15]],[["u24",3],["option",4]]],[[["i32",15]],["u24",3]],[[],["i32",15]],[[["i64",15]],[["u48",3],["option",4]]],[[["i64",15]],["u48",3]],[[],["i64",15]],[[["u32",15],["u16",15]],["header",3]],[[]],[[],["cursor",3]],[[["usize",15]],["cursor",3]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["liveevent",4],["result",4],["error",3]]],[[],["result",4]],[[["option",4]],["result",4]],[[],[["error",3],["result",4]]],[[["option",4]],[["error",3],["result",4]]],[[["arena",3]],["trackeventkind",4]],[[["u8",15]],["systemrealtime",4]],[[],["u8",15]],[[],[["defaultbuffer",3],["midistream",3]]],[[],["midistream",3]],[[]],[[]],[[],["usize",15]],[[],["defaultbuffer",3]],[[],["u14",3]],[[["u16",15]],["u14",3]],[[["u16",15]],["u14",3]],[[["u16",15]],[["option",4],["u14",3]]],[[],["u16",15]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["u15",3]],[[["u16",15]],["u15",3]],[[["u16",15]],["u15",3]],[[["u16",15]],[["u15",3],["option",4]]],[[],["u16",15]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["u24",3]],[[["u32",15]],["u24",3]],[[["u32",15]],["u24",3]],[[["u32",15]],[["u24",3],["option",4]]],[[],["u32",15]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["u28",3]],[[["u32",15]],["u28",3]],[[["u32",15]],["u28",3]],[[["u32",15]],[["u28",3],["option",4]]],[[],["u32",15]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["u4",3]],[[["u8",15]],["u4",3]],[[["u8",15]],["u4",3]],[[["u8",15]],[["option",4],["u4",3]]],[[],["u8",15]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["u7",3]],[[["u8",15]],["u7",3]],[[["u8",15]],["u7",3]],[[["u8",15]],[["u7",3],["option",4]]],[[],["u8",15]],[[],["option",4]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["arena",3]],[[]],[[],["usize",15]],[[]],[[["vec",3],["global",3],["u8",15]]],[[]],[[["u7",3],["vec",3],["global",3]]],[[["header",3]],["smf",3]],[[],[["smf",3],["error",3],["result",4]]],[[],["result",4]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[["header",3]],["smfbytemap",3]],[[],[["smfbytemap",3],["error",3],["result",4]]],[[],["result",4]],[[],[["error",3],["result",4]]],[[],[["error",3],["result",4]]],[[["errorkind",4]],["error",3]],[[],["errorkind",4]],[[],[["option",4],["error",3]]],[[],["str",15]],[[],["pitchbend",3]],[[],["pitchbend",3]],[[],["pitchbend",3]],[[["i16",15]],["pitchbend",3]],[[["f32",15]],["pitchbend",3]],[[["f64",15]],["pitchbend",3]],[[],["i16",15]],[[],["f32",15]],[[],["f64",15]],[[],[["liveevent",4],["option",4]]],[[["u8",15]],[["option",4],["fps",4]]],[[],["u8",15]],[[],["f32",15]],[[["fps",4],["u8",15]],[["smptetime",3],["option",4]]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["fps",4]],[[],["f32",15]],[[],["eventbytemapiter",3]],[[]],[[],[["option",4],["u8",15]]],[[],["option",4]],[[],["eventiter",3]],[[],[["result",4],["vec",3],["error",3]]],[[],["eventiter",3]],[[]],[[],[["option",4],["u8",15]]],[[],["option",4]],[[],["eventbytemapiter",3]],[[],[["result",4],["vec",3],["error",3]]],[[["format",4],["timing",4]],["header",3]],[[],["trackiter",3]],[[]],[[],[["vec",3],["result",4],["error",3]]],[[],[["vec",3],["error",3],["result",4]]],[[["client",3]],[["asyncclient",3],["result",4],["error",4]]],[[],["client",3]],[[],[["error",4],["result",4]]],[[["clientoptions",3],["str",15]],[["result",4],["error",4]]],[[],[["asyncclient",3],["result",4],["error",4]]],[[],["usize",15]],[[],["f32",15]],[[],["str",15]],[[],["u32",15]],[[["u32",15]],[["result",4],["error",4]]],[[],["string",3]],[[["str",15]],[["option",4],["string",3]]],[[["portflags",3],["option",4],["str",15]],[["vec",3],["string",3],["global",3]]],[[["str",15]],[["port",3],["result",4],["error",4]]],[[["u32",15]],[["port",3],["option",4]]],[[["str",15]],[["port",3],["option",4]]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]],["u64",15]],[[["u64",15]],["u32",15]],[[["port",3]],["bool",15]],[[["bool",15],["str",15]],[["result",4],["error",4]]],[[["str",15]],[["result",4],["error",4]]],[[["port",3],["port",3]],[["result",4],["error",4]]],[[["port",3]],[["result",4],["error",4]]],[[["port",3]],[["result",4],["error",4]]],[[["port",3],["port",3]],[["result",4],["error",4]]],[[["str",15]],[["result",4],["error",4]]],[[["str",15]],["usize",15]],[[]],[[],["client",3]],[[],["transport",3]],null,null,null,null,null,null,[[],["clientoptions",3]],[[],["clientoptions",3]],[[],["u32",15]],[[["u32",15]],[["option",4],["clientoptions",3]]],[[["u32",15]],["clientoptions",3]],[[["u32",15]],["clientoptions",3]],[[],["bool",15]],[[],["bool",15]],[[["clientoptions",3]],["bool",15]],[[["clientoptions",3]],["bool",15]],[[["clientoptions",3]]],[[["clientoptions",3]]],[[["clientoptions",3]]],[[["bool",15],["clientoptions",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["clientstatus",3]],[[],["clientstatus",3]],[[],["u32",15]],[[["u32",15]],[["clientstatus",3],["option",4]]],[[["u32",15]],["clientstatus",3]],[[["u32",15]],["clientstatus",3]],[[],["bool",15]],[[],["bool",15]],[[["clientstatus",3]],["bool",15]],[[["clientstatus",3]],["bool",15]],[[["clientstatus",3]]],[[["clientstatus",3]]],[[["clientstatus",3]]],[[["bool",15],["clientstatus",3]]],[[],["closureprocesshandler",3]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],[["result",4],["error",4],["cycletimes",3]]],[[]],[[["u32",15]],["processscope",3]],[[],["i32",15]],[[],["u32",15]],[[],[["option",4],["rawmidi",3]]],[[],[["option",4],["rawmidi",3]]],[[["rawmidi",3]],[["result",4],["error",4]]],[[],["usize",15]],[[],["usize",15]],[[["processscope",3]]],[[["processscope",3]]],[[["processscope",3]],["midiiter",3]],[[["processscope",3]],["midiwriter",3]],[[]],[[],[["port",3],["unowned",3]]],[[],[["result",4],["string",3],["error",4]]],[[],[["result",4],["string",3],["error",4]]],[[],["portflags",3]],[[],[["result",4],["string",3],["error",4]]],[[],[["usize",15],["result",4],["error",4]]],[[["str",15]],[["bool",15],["result",4],["error",4]]],[[],[["result",4],["vec",3],["error",4]]],[[],[["bool",15],["result",4],["error",4]]],[[["bool",15]],[["result",4],["error",4]]],[[["bool",15]],[["result",4],["error",4]]],[[["str",15]],[["result",4],["error",4]]],[[["str",15]],[["result",4],["error",4]]],[[["str",15]],[["result",4],["error",4]]],[[["weak",3]],["port",3]],[[]],[[]],[[["u32",15]]],[[["latencytype",4]]],[[["latencytype",4]]],null,null,null,null,null,[[],["portflags",3]],[[],["portflags",3]],[[],["u32",15]],[[["u32",15]],[["portflags",3],["option",4]]],[[["u32",15]],["portflags",3]],[[["u32",15]],["portflags",3]],[[],["bool",15]],[[],["bool",15]],[[["portflags",3]],["bool",15]],[[["portflags",3]],["bool",15]],[[["portflags",3]]],[[["portflags",3]]],[[["portflags",3]]],[[["portflags",3],["bool",15]]],[[["usize",15]],[["result",4],["error",4],["ringbuffer",3]]],[[]],[[]],[[]],[[["ringbufferwriter",3],["ringbufferreader",3]],["ringbuffer",3]],[[]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[],["usize",15]],[[],[["iter",3],["chain",3]]],[[],["usize",15]],[[["usize",15]]],[[],["usize",15]],[[]],[[],[["chain",3],["itermut",3]]],[[],[["result",4],["error",4]]],[[],[["result",4],["error",4]]],[[["transportposition",3]],[["result",4],["error",4]]],[[["u32",15]],[["result",4],["error",4]]],[[],[["result",4],["transportstateposition",3],["error",4]]],[[],[["result",4],["transportstate",4],["error",4]]],[[["usize",15]],["transportbbt",3]],[[["f64",15]],["transportbbt",3]],[[["f32",15]],["transportbbt",3]],[[["f64",15]],["transportbbt",3]],[[["f64",15]],["transportbbt",3]],[[],[["result",4],["transportbbt",3],["transportbbtvalidationerror",4]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[["u32",15]]],[[],[["option",4],["u32",15]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["transportbbt",3]]],[[["option",4],["transportbbt",3]],[["result",4],["transportbbtvalidationerror",4]]],[[],[["option",4],["u32",15]]],[[["option",4],["u32",15]],[["u32",15],["result",4]]],[[],["box",3]],[[]],[[["isize",15]],[["option",4],["supported",4]]],[[]],null,null,null,[[],["channelflags",3]],[[],["channelflags",3]],[[],["i32",15]],[[["i32",15]],[["option",4],["channelflags",3]]],[[["i32",15]],["channelflags",3]],[[["i32",15]],["channelflags",3]],[[],["bool",15]],[[],["bool",15]],[[["channelflags",3]],["bool",15]],[[["channelflags",3]],["bool",15]],[[["channelflags",3]]],[[["channelflags",3]]],[[["channelflags",3]]],[[["bool",15],["channelflags",3]]],null,null,null,null,null,null,[[],["pluginflags",3]],[[],["pluginflags",3]],[[],["i32",15]],[[["i32",15]],[["option",4],["pluginflags",3]]],[[["i32",15]],["pluginflags",3]],[[["i32",15]],["pluginflags",3]],[[],["bool",15]],[[],["bool",15]],[[["pluginflags",3]],["bool",15]],[[["pluginflags",3]],["bool",15]],[[["pluginflags",3]]],[[["pluginflags",3]]],[[["pluginflags",3]]],[[["pluginflags",3],["bool",15]]],null,null,null,null,[[],["modifierkey",3]],[[],["modifierkey",3]],[[],["u8",15]],[[["u8",15]],[["option",4],["modifierkey",3]]],[[["u8",15]],["modifierkey",3]],[[["u8",15]],["modifierkey",3]],[[],["bool",15]],[[],["bool",15]],[[["modifierkey",3]],["bool",15]],[[["modifierkey",3]],["bool",15]],[[["modifierkey",3]]],[[["modifierkey",3]]],[[["modifierkey",3]]],[[["bool",15],["modifierkey",3]]],null,[[],["midieventflags",3]],[[],["midieventflags",3]],[[],["i32",15]],[[["i32",15]],[["option",4],["midieventflags",3]]],[[["i32",15]],["midieventflags",3]],[[["i32",15]],["midieventflags",3]],[[],["bool",15]],[[],["bool",15]],[[["midieventflags",3]],["bool",15]],[[["midieventflags",3]],["bool",15]],[[["midieventflags",3]]],[[["midieventflags",3]]],[[["midieventflags",3]]],[[["bool",15],["midieventflags",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["timeinfoflags",3]],[[],["timeinfoflags",3]],[[],["i32",15]],[[["i32",15]],[["timeinfoflags",3],["option",4]]],[[["i32",15]],["timeinfoflags",3]],[[["i32",15]],["timeinfoflags",3]],[[],["bool",15]],[[],["bool",15]],[[["timeinfoflags",3]],["bool",15]],[[["timeinfoflags",3]],["bool",15]],[[["timeinfoflags",3]]],[[["timeinfoflags",3]]],[[["timeinfoflags",3]]],[[["timeinfoflags",3],["bool",15]]],[[["usize",15]],["audiobuffer",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[],["audiobufferiterator",3]],[[],["usize",15]],[[],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[],["usize",15]],[[],["bool",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],["sendeventbuffer",3]],[[["host",8]]],[[["plugin",8]]],[[["option",4],["string",3],["bool",15],["option",4],["speakerarrangementtype",4]],["channelinfo",3]],[[],["bool",15]],[[],["bool",15]],[[["arc",3],["path",3],["mutex",3]],[["pluginloaderror",4],["pluginloader",3],["result",4]]],[[],[["pluginloaderror",4],["result",4],["plugininstance",3]]],[[["usize",15]],["hostbuffer",3]],[[["info",3]],["hostbuffer",3]],[[],["audiobuffer",3]],[[],["usize",15]],[[],["usize",15]],[[["str",15]],["cando",4]],[[],["i32",15]],[[],["option",4]],[[]],[[["f32",15]],["atomicfloat",3]],[[],["f32",15]],[[["f32",15]]],[[["usize",15]],["parametertransfer",3]],[[["usize",15],["f32",15]]],[[["usize",15]],["f32",15]],[[["bool",15]],["parametertransferiterator",3]],[[["usize",15]],["vecstorage",3]],[[],["usize",15]],[[],["vecguard",3]],[[],["slice",3]],[[["usize",15]],["slice",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]]],"p":[[3,"AudioBufferIn"],[3,"AudioBufferOut"],[3,"AudioBufferInOut"],[3,"AudioChunk"],[3,"AudioDummy"],[3,"MidiDummy"],[4,"HoundAudioError"],[3,"HoundAudioReader"],[3,"HoundAudioWriter"],[8,"FromSample"],[8,"ToSample"],[8,"Sample"],[8,"FloatSample"],[3,"Header"],[4,"BitDepth"],[3,"AudioChunkReader"],[3,"AudioBufferWriter"],[8,"Write"],[8,"Seek"],[4,"CursorError"],[3,"IoWrap"],[3,"SeekableWrap"],[4,"LiveEvent"],[13,"Midi"],[4,"SystemCommon"],[4,"MtcQuarterFrameMessage"],[4,"SystemRealtime"],[8,"Buffer"],[3,"Smf"],[3,"SmfBytemap"],[4,"ErrorKind"],[4,"MetaMessage"],[4,"MidiMessage"],[13,"NoteOff"],[13,"NoteOn"],[13,"Aftertouch"],[13,"Controller"],[13,"ProgramChange"],[13,"ChannelAftertouch"],[13,"PitchBend"],[3,"PitchBend"],[3,"TrackEvent"],[4,"TrackEventKind"],[13,"Midi"],[4,"Format"],[4,"Fps"],[4,"Timing"],[3,"Header"],[3,"MidlyMidiReader"],[8,"AudioReader"],[8,"AudioWriter"],[8,"MidiWriter"],[3,"MidiWriterWrapper"],[4,"CombinedError"],[3,"TestAudioReader"],[3,"TestAudioWriter"],[3,"TestMidiReader"],[3,"TestMidiWriter"],[3,"ClosureProcessHandler"],[3,"CycleTimes"],[8,"NotificationHandler"],[8,"ProcessHandler"],[4,"Control"],[4,"Error"],[4,"LatencyType"],[8,"PortSpec"],[3,"RawMidi"],[3,"TransportBBT"],[4,"TransportBBTValidationError"],[4,"TransportState"],[3,"TransportStatePosition"],[3,"JackHost"],[3,"AEffect"],[3,"ChannelProperties"],[4,"SpeakerArrangementType"],[4,"Supported"],[4,"ProcessLevel"],[4,"HostLanguage"],[4,"FileSelectCommand"],[4,"FileSelectType"],[3,"FileType"],[3,"FileSelect"],[3,"Events"],[4,"EventType"],[3,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[3,"TimeInfo"],[4,"SmpteFrameRate"],[8,"WriteIntoPlaceholder"],[4,"ArrangementTarget"],[4,"StereoChannel"],[4,"StereoConfig"],[4,"SurroundConfig"],[4,"SpeakerArrangementType"],[8,"Editor"],[3,"KeyCode"],[4,"KnobMode"],[4,"Key"],[4,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[8,"Host"],[4,"PluginLoadError"],[4,"Category"],[3,"Info"],[4,"CanDo"],[8,"Plugin"],[8,"PluginParameters"],[8,"VstPluginMeta"],[3,"VstPluginWrapper"],[8,"HostInterface"],[3,"EnvelopeIteratorItem"],[8,"Envelope"],[4,"EventCollisionHandling"],[8,"HandleEventCollision"],[3,"EventQueue"],[8,"EventHandler"],[8,"EventHandlerExt"],[8,"ContextualEventHandler"],[3,"SysExEvent"],[3,"RawMidiEvent"],[4,"MidlyConversionError"],[3,"Timed"],[3,"Indexed"],[3,"DeltaEvent"],[3,"TimeStretcher"],[8,"Meta"],[8,"General"],[8,"Name"],[8,"Port"],[3,"MetaData"],[3,"InOut"],[3,"TestPlugin"],[4,"SimpleVoiceState"],[3,"SimpleEventDispatcher"],[4,"EventDispatchClass"],[3,"ToneIdentifier"],[8,"EventDispatchClassifier"],[4,"VoiceAssignment"],[8,"Voice"],[8,"VoiceAssigner"],[8,"EventDispatcher"],[8,"ContextualEventDispatcher"],[8,"AudioHandlerMeta"],[8,"AudioHandler"],[8,"MidiHandlerMeta"],[8,"AudioRenderer"],[8,"ContextualAudioRenderer"],[8,"CommonPluginMeta"],[8,"CommonAudioPortMeta"],[8,"CommonMidiPortMeta"],[3,"AudioBufferOutChannelIteratorMut"],[3,"InterlacedSampleIterator"],[3,"I11"],[3,"I20"],[3,"I24"],[3,"I48"],[3,"U11"],[3,"U20"],[3,"U24"],[3,"U48"],[3,"NotSeekable"],[3,"Cursor"],[3,"MidiStream"],[3,"DefaultBuffer"],[3,"u14"],[3,"u15"],[3,"u24"],[3,"u28"],[3,"u4"],[3,"u7"],[3,"Arena"],[3,"Error"],[3,"SmpteTime"],[3,"EventBytemapIter"],[3,"EventIter"],[3,"TrackIter"],[3,"AsyncClient"],[3,"Client"],[3,"ClientOptions"],[3,"ClientStatus"],[3,"ProcessScope"],[3,"CLIENT_NAME_SIZE"],[3,"AudioIn"],[3,"AudioOut"],[3,"MidiIn"],[3,"MidiIter"],[3,"MidiOut"],[3,"MidiWriter"],[3,"Port"],[3,"PortFlags"],[3,"Unowned"],[3,"PORT_NAME_SIZE"],[3,"PORT_TYPE_SIZE"],[3,"RingBuffer"],[3,"RingBufferReader"],[3,"RingBufferWriter"],[3,"Transport"],[3,"TransportPosition"],[3,"ChannelFlags"],[3,"PluginFlags"],[3,"ModifierKey"],[3,"MidiEventFlags"],[3,"TimeInfoFlags"],[3,"AudioBuffer"],[3,"AudioBufferIterator"],[3,"Inputs"],[3,"InputIterator"],[3,"Outputs"],[3,"OutputIterator"],[3,"SendEventBuffer"],[3,"ChannelInfo"],[3,"PluginLoader"],[3,"PluginInstance"],[3,"HostBuffer"],[3,"HostCallback"],[3,"AtomicFloat"],[3,"ParameterTransfer"],[3,"ParameterTransferIterator"],[3,"StairCaseEnvelopeIterator"],[3,"StairCaseEnvelope"],[3,"AlwaysInsertNewBeforeOld"],[3,"AlwaysInsertNewAfterOld"],[3,"AlwaysIgnoreNew"],[3,"AlwaysRemoveOld"],[3,"DrainingIter"],[3,"Map"],[3,"AudioPort"],[3,"MidiPort"],[3,"DummyEventHandler"],[3,"RawMidiEventToneIdentifierDispatchClassifier"],[3,"VecStorage"],[3,"Slice"]]}\
}');
initSearch(searchIndex);