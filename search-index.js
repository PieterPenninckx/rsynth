var searchIndex = JSON.parse('{\
"rsynth":{"doc":"Rsynth An API abstraction for API\'s for audio plugins and…","i":[[0,"buffer","rsynth","Audio buffers.",null,null],[3,"AudioBufferIn","rsynth::buffer","Audio input buffer.",null,null],[3,"AudioBufferOut","","An audio output buffer.",null,null],[3,"AudioBufferOutChannelIteratorMut","","An iterator over the channels of an [`AudioBufferOut`].",null,null],[3,"AudioBufferInOut","","A buffer holding both input and output audio.",null,null],[3,"AudioChunk","","A buffer representing a fixed amount of samples for a…",null,null],[3,"InterlacedSampleIterator","","An iterator over the samples of an `AudioChunk`, operating…",null,null],[5,"buffers_as_slice","","",null,[[],["vec",3]]],[5,"buffers_as_mut_slice","","",null,[[],["vec",3]]],[11,"new","","Create a new audio input buffer.",0,[[]]],[11,"number_of_channels","","Get the number of channels.",0,[[]]],[11,"number_of_frames","","Get the number of frames.",0,[[]]],[11,"channels","","Get the channels as slices.",0,[[]]],[11,"index_frames","","Get an `AudioBufferIn` with all channels and the given…",0,[[["vec",3]],["audiobufferin",3]]],[11,"get_channel","","Get the channel with the given index.",0,[[],["option",4]]],[11,"index_channel","","Get the channel with the given index.",0,[[]]],[11,"new","","Create a new audio output buffer.",1,[[]]],[11,"number_of_channels","","Get the number of channels.",1,[[]]],[11,"number_of_frames","","Get the number of frames.",1,[[]]],[11,"channels","","Get the channels as slices.",1,[[]]],[11,"split_channels_at","","Split into two `AudioBufferOut`s. The first will contain…",1,[[]]],[11,"index_frames","","Get an `AdioBufferOut` with all channels and the given…",1,[[["vec",3]],["audiobufferout",3]]],[11,"get_channel","","Get the channel with the given index.",1,[[],["option",4]]],[11,"index_channel","","Get the channel with the given index.",1,[[]]],[11,"set","","Set all samples to the given value.",1,[[]]],[11,"channel_iter_mut","","Get an iterator over the channels.",1,[[],["audiobufferoutchanneliteratormut",3]]],[11,"as_audio_buffer_in","","Convert to an [`AudioBufferIn`].",1,[[["vec",3]],["audiobufferin",3]]],[11,"new","","Create a new `AudioBufferInOut`.",2,[[]]],[11,"number_of_frames","","Get the number of frames.",2,[[]]],[11,"number_of_input_channels","","Get the number of input channels.",2,[[]]],[11,"number_of_output_channels","","Get the number of output channels.",2,[[]]],[11,"split_output_channels_at","","Create two new `AUdioBufferInOut`s: one with all the input…",2,[[]]],[11,"get_input_channel","","Get the input channel with the given index.",2,[[],["option",4]]],[11,"index_input_channel","","Get the output channel with the given index.",2,[[]]],[11,"get_output_channel","","Get the output channel with the given index.",2,[[],["option",4]]],[11,"index_output_channel","","Get the output channel with the given index.",2,[[]]],[11,"index_frames","","Get an `AudioBufferInOut` with all channels and with the…",2,[[["vec",3],["vec",3]],["audiobufferinout",3]]],[11,"separate","","Separate the input channels from the output channels.",2,[[]]],[11,"inputs","","Get the input channels as an [`AudioBufferIn`].",2,[[],["audiobufferin",3]]],[11,"outputs","","Get the output channels as an [`AudioBufferOut`].",2,[[],["audiobufferout",3]]],[11,"new","","Create a new `AudioChunk`. # Panics Panics if…",3,[[]]],[11,"zero","","Note: cannot be used in a real-time context This method…",3,[[]]],[11,"from_channels","","",3,[[["vec",3],["vec",3]]]],[11,"from_interlaced_iterator","","Panics Panics if `number_of_channels == 0`. Panics if the…",3,[[]]],[11,"interlaced","","Create an interlaced iterator from an `AudioChunk` #…",3,[[],["interlacedsampleiterator",3]]],[11,"with_capacity","","Create a new `AudioChunk` in which each channel has the…",3,[[]]],[11,"channels","","",3,[[],["vec",3]]],[11,"number_of_channels","","Return the number of channels.",3,[[]]],[11,"append_sliced_chunk","","Note about using in a real-time context This method will…",3,[[]]],[11,"inner","","",3,[[],[["vec",3],["vec",3]]]],[11,"as_slices","","Note: cannot be used in a real-time context This method…",3,[[],["vec",3]]],[11,"as_mut_slices","","Note: cannot be used in a real-time context This method…",3,[[],["vec",3]]],[11,"split","","Note: cannot be used in a real-time context This method…",3,[[],["vec",3]]],[0,"backend","rsynth","Backends.",null,null],[0,"combined","rsynth::backend","Combine different back-ends for audio input, audio output…",null,null],[3,"MidiWriterWrapper","rsynth::backend::combined","A wrapper around a midi writer that implements…",null,null],[3,"TestAudioReader","","An audio reader, useful for testing.",null,null],[3,"TestAudioWriter","","An audio writer, useful for testing.",null,null],[3,"TestMidiReader","","A midi reader, useful for testing.",null,null],[3,"TestMidiWriter","","A midi writer, useful for testing.",null,null],[4,"CombinedError","","The error type that represents the errors you can get from…",null,null],[13,"AudioInError","","An error occurred when reading the audio.",4,null],[13,"AudioOutError","","An error occurred when writing the audio.",4,null],[5,"run","","Run an audio renderer with the given audio input, audio…",null,[[],[["result",4],["combinederror",4]]]],[0,"dummy","","Dummy backend that does nothing, useful for testing.",null,null],[3,"AudioDummy","rsynth::backend::combined::dummy","Dummy backend that does nothing, useful for testing and…",null,null],[3,"MidiDummy","","",null,null],[11,"with_sample_rate_and_length","","Create a new `AudioDummy` with the given sample rate, in…",5,[[]]],[11,"new","","Create a new `AudioDummy` with the \\\"default\\\" sample rate…",5,[[]]],[11,"new","","",6,[[]]],[0,"hound","rsynth::backend::combined","Backend for reading and writing `.wav` files, based on the…",null,null],[3,"HoundAudioReader","rsynth::backend::combined::hound","",null,null],[3,"HoundAudioWriter","","",null,null],[4,"HoundAudioError","","",null,null],[13,"UnsupportedAudioFormat","","",7,null],[11,"new","","",8,[[["wavreader",3]],[["result",4],["houndaudioerror",4]]]],[11,"new","","",9,[[["wavwriter",3]],[["result",4],["houndaudioerror",4]]]],[0,"memory","rsynth::backend::combined","In-memory backend, useful for testing.",null,null],[3,"AudioChunkReader","rsynth::backend::combined::memory","An [`AudioReader`] that reads from a given [`AudioChunk`].…",null,null],[3,"AudioBufferWriter","","An [`AudioWriter`] that appends to a given [`AudioChunk`].…",null,null],[6,"AudioBufferReader","","An [`AudioReader`] that reads from a given [`AudioChunk`].…",null,null],[11,"new","","Construct a new `AudioChunkReader` with the given…",10,[[]]],[11,"new","","",11,[[["audiochunk",3]]]],[0,"midly","rsynth::backend::combined","Read midi files.",null,null],[3,"MidlyMidiReader","rsynth::backend::combined::midly","Read from midi events as parsed by the `midly` crate.",null,null],[0,"midly","","Re-exports from the `midly` crate.",null,null],[0,"io","rsynth::backend::combined::midly::midly","Provides abstractions over writers, even in `no_std`…",null,null],[6,"WriteResult","rsynth::backend::combined::midly::midly::io","Either `Ok(())` or the error specific to the `W` writer.",null,null],[8,"Write","","A `Write` trait available even in `no_std` environments,…",null,null],[16,"Error","","The error type specific to the writer.",12,null],[16,"Seekable","","`Self` when the type is seekable, and `NotSeekable<Self>`…",12,null],[10,"write","","Write a slice of data to the writer.",12,[[],["result",4]]],[10,"invalid_input","","Create an \\\"invalid input\\\"-style error from a string literal.",12,[[]]],[11,"make_seekable","","Make this writer seekable, if possible.",12,[[],["option",4]]],[8,"Seek","","A `Seek` trait available even in `no_std` environments.",null,null],[10,"tell","","Where is the writer currently at.",13,[[],["result",4]]],[10,"write_at","","Write a slice of data at the given absolute position, and…",13,[[],["result",4]]],[3,"NotSeekable","","The type used for the `Seekable` associated type on…",null,null],[3,"Cursor","","A seekable writer over an in-memory buffer.",null,null],[4,"CursorError","","The errors that can arise when writing to an in-memory…",null,null],[13,"OutOfSpace","","The in-memory buffer was too small.",14,null],[13,"InvalidInput","","The input SMF was invalid.",14,null],[3,"IoWrap","","Bridge between a `midly::io::Write` type and a…",null,null],[12,"0","","",15,null],[3,"SeekableWrap","","Bridge between a `midly::io::{Write, Seek}` type and a…",null,null],[12,"0","","",16,null],[0,"live","rsynth::backend::combined::midly::midly","Provides utilities to read and write \\\"live\\\" MIDI messages…",null,null],[4,"LiveEvent","rsynth::backend::combined::midly::midly::live","A live event produced by an OS API or generated…",null,null],[13,"Midi","","A MIDI message associated with a channel, carrying musical…",17,null],[12,"channel","rsynth::backend::combined::midly::midly::live::LiveEvent","",18,null],[12,"message","","",18,null],[13,"Common","rsynth::backend::combined::midly::midly::live","A System Common message, as defined by the MIDI spec,…",17,null],[13,"Realtime","","A one-byte System Realtime message.",17,null],[4,"SystemCommon","","A \\\"system common event\\\", as defined by the MIDI spec.",null,null],[13,"SysEx","","A system-exclusive event.",19,null],[13,"MidiTimeCodeQuarterFrame","","A MIDI Time Code Quarter Frame message, carrying a tag…",19,null],[13,"SongPosition","","The number of MIDI beats (6 x MIDI clocks) that have…",19,null],[13,"SongSelect","","Select a given song index.",19,null],[13,"TuneRequest","","",19,null],[13,"Undefined","","An undefined System Common message, with arbitrary data…",19,null],[4,"MtcQuarterFrameMessage","","The different kinds of info a Midi Time Code Quarter Frame…",null,null],[13,"FramesLow","","The low nibble of the frame count.",20,null],[13,"FramesHigh","","The high nibble of the frame count.",20,null],[13,"SecondsLow","","The low nibble of the second count.",20,null],[13,"SecondsHigh","","The high nibble of the second count.",20,null],[13,"MinutesLow","","The low nibble of the minute count.",20,null],[13,"MinutesHigh","","The high nibble of the minute count.",20,null],[13,"HoursLow","","The low nibble of the hour count.",20,null],[13,"HoursHigh","","The high nibble of the hour count.",20,null],[4,"SystemRealtime","","System Realtime messages are one-byte messages that only…",null,null],[13,"TimingClock","","If sent, they should be sent 24 times per quarter note.",21,null],[13,"Start","","",21,null],[13,"Continue","","",21,null],[13,"Stop","","",21,null],[13,"ActiveSensing","","Once one of these messages is transmitted, a message…",21,null],[13,"Reset","","",21,null],[13,"Undefined","","An unknown system realtime message, with the given id byte.",21,null],[0,"stream","rsynth::backend::combined::midly::midly","Provides support for the niche use case of reading MIDI…",null,null],[3,"MidiStream","rsynth::backend::combined::midly::midly::stream","A streaming raw MIDI parser. This parser takes raw MIDI,…",null,null],[8,"Buffer","","Describes types that can be used as data buffers for the…",null,null],[10,"push","","",22,[[],["result",4]]],[10,"clear","","",22,[[]]],[10,"as_slice","","",22,[[]]],[3,"DefaultBuffer","","The default buffer type used for `MidiStream`. By default…",null,null],[0,"num","rsynth::backend::combined::midly::midly","Exotically-sized integers used by the MIDI standard.",null,null],[3,"u14","rsynth::backend::combined::midly::midly::num","",null,null],[3,"u15","","",null,null],[3,"u24","","",null,null],[3,"u28","","Referred to in the MIDI spec as \\\"variable length int\\\".",null,null],[3,"u4","","",null,null],[3,"u7","","",null,null],[14,"stack_buffer","rsynth::backend::combined::midly::midly","Define a stack buffer type, suitable for use with…",null,null],[5,"write_std","","Similar to `write`, but writes to a `std::io::Write`…",null,[[["header",3]],[["result",4],["error",3]]]],[3,"Arena","","Helps overcome limitations of the lifetime system when…",null,null],[6,"BytemappedTrack","","A track, represented as a `Vec` of events along with their…",null,null],[3,"Smf","","Represents a single `.mid` Standard Midi File. If you\'re…",null,null],[12,"header","","The header of this MIDI file, indicating tempo information…",23,null],[12,"tracks","","A list of tracks within this MIDI file.",23,null],[3,"SmfBytemap","","A `.mid` Standard Midi File, but keeps a mapping to the…",null,null],[12,"header","","The header of this file.",24,null],[12,"tracks","","A list of tracks, along with the bytemap of their events.",24,null],[6,"Track","","A single track: simply a list of track events.",null,null],[3,"Error","","Represents an error while parsing an SMF file or MIDI…",null,null],[4,"ErrorKind","","The type of error that occurred while parsing.",null,null],[13,"Invalid","","Fatal errors while reading the file. It is likely that the…",25,null],[13,"Malformed","","Non-fatal error, but the file is clearly corrupted.",25,null],[6,"Result","","The result type used by the MIDI parser.",null,null],[4,"MetaMessage","","A \\\"meta message\\\", as defined by the SMF spec. These events…",null,null],[13,"TrackNumber","","For `Format::Sequential` MIDI file types, `TrackNumber`…",26,null],[13,"Text","","",26,null],[13,"Copyright","","",26,null],[13,"TrackName","","",26,null],[13,"InstrumentName","","",26,null],[13,"Lyric","","",26,null],[13,"Marker","","",26,null],[13,"CuePoint","","",26,null],[13,"ProgramName","","",26,null],[13,"DeviceName","","",26,null],[13,"MidiChannel","","",26,null],[13,"MidiPort","","",26,null],[13,"EndOfTrack","","Obligatory at track end.",26,null],[13,"Tempo","","Amount of microseconds per beat (quarter note).",26,null],[13,"SmpteOffset","","",26,null],[13,"TimeSignature","","In order of the MIDI specification, numerator,…",26,null],[13,"KeySignature","","As in the MIDI specification, negative numbers indicate…",26,null],[13,"SequencerSpecific","","",26,null],[13,"Unknown","","An unknown or malformed meta-message.",26,null],[4,"MidiMessage","","Represents a MIDI message, usually associated to a MIDI…",null,null],[13,"NoteOff","","Stop playing a note.",27,null],[12,"key","rsynth::backend::combined::midly::midly::MidiMessage","The MIDI key to stop playing.",28,null],[12,"vel","","The velocity with which to stop playing it.",28,null],[13,"NoteOn","rsynth::backend::combined::midly::midly","Start playing a note.",27,null],[12,"key","rsynth::backend::combined::midly::midly::MidiMessage","The key to start playing.",29,null],[12,"vel","","The velocity (strength) with which to press it.",29,null],[13,"Aftertouch","rsynth::backend::combined::midly::midly","Modify the velocity of a note after it has been played.",27,null],[12,"key","rsynth::backend::combined::midly::midly::MidiMessage","The key for which to modify its velocity.",30,null],[12,"vel","","The new velocity for the key.",30,null],[13,"Controller","rsynth::backend::combined::midly::midly","Modify the value of a MIDI controller.",27,null],[12,"controller","rsynth::backend::combined::midly::midly::MidiMessage","The controller to modify.",31,null],[12,"value","","The value to set it to.",31,null],[13,"ProgramChange","rsynth::backend::combined::midly::midly","Change the program (also known as instrument) for a channel.",27,null],[12,"program","rsynth::backend::combined::midly::midly::MidiMessage","The new program (instrument) to use for the channel.",32,null],[13,"ChannelAftertouch","rsynth::backend::combined::midly::midly","Change the note velocity of a whole channel at once,…",27,null],[12,"vel","rsynth::backend::combined::midly::midly::MidiMessage","The new velocity for all notes currently playing in the…",33,null],[13,"PitchBend","rsynth::backend::combined::midly::midly","Set the pitch bend value for the entire channel.",27,null],[12,"bend","rsynth::backend::combined::midly::midly::MidiMessage","The new pitch-bend value.",34,null],[3,"PitchBend","rsynth::backend::combined::midly::midly","The value of a pitch bend, represented as 14 bits.",null,null],[12,"0","","",35,null],[3,"TrackEvent","","Represents a parsed SMF track event.",null,null],[12,"delta","","How many MIDI ticks after the previous event should this…",36,null],[12,"kind","","The type of event along with event-specific data.",36,null],[4,"TrackEventKind","","Represents the different kinds of SMF events and their…",null,null],[13,"Midi","","A message associated to a MIDI channel carrying musical…",37,null],[12,"channel","rsynth::backend::combined::midly::midly::TrackEventKind","",38,null],[12,"message","","",38,null],[13,"SysEx","rsynth::backend::combined::midly::midly","A System Exclusive message, carrying arbitrary data.",37,null],[13,"Escape","","An escape sequence, intended to send arbitrary data to the…",37,null],[13,"Meta","","A meta-message, giving extra information for correct…",37,null],[4,"Format","","The order in which tracks should be laid out when playing…",null,null],[13,"SingleTrack","","This file should have a single track only.",39,null],[13,"Parallel","","This file has several tracks that should be played…",39,null],[13,"Sequential","","This file has several tracks, each one a separate song.",39,null],[4,"Fps","","One of the four FPS values available for SMPTE times, as…",null,null],[13,"Fps24","","24 frames per second.",40,null],[13,"Fps25","","25 frames per second.",40,null],[13,"Fps29","","Actually `29.97 = 30 / 1.001` frames per second.",40,null],[13,"Fps30","","30 frames per second.",40,null],[3,"SmpteTime","","Encodes an SMPTE time of the day.",null,null],[4,"Timing","","The timing for an SMF file. This can be in ticks/beat or…",null,null],[13,"Metrical","","Specifies ticks/beat as a 15-bit integer.",41,null],[13,"Timecode","","Specifies ticks/second by dividing a second into frames…",41,null],[5,"parse","","Parse a raw MIDI file lazily, yielding its header and a…",null,[[],[["result",4],["error",3]]]],[5,"write","","Encode and write a generic MIDI file into the given…",null,[[["header",3]],["result",4]]],[3,"EventBytemapIter","","An iterator over the events of a single track that keeps…",null,null],[3,"EventIter","","An iterator over the events of a single track. Yielded by…",null,null],[3,"Header","","A MIDI file header, indicating metadata about the file.",null,null],[12,"format","","Information about how should the tracks be laid out when…",42,null],[12,"timing","","Tempo information about the file.",42,null],[3,"TrackIter","","An iterator over all tracks in a Standard Midi File.…",null,null],[11,"new","rsynth::backend::combined::midly","Create a new `MidlyMidiReader`.",43,[[["header",3]]]],[17,"MICROSECONDS_PER_SECOND","rsynth::backend::combined","",null,null],[8,"AudioReader","","Define how audio is read.",null,null],[16,"Err","","The type of the error that occurs when reading data.",44,null],[10,"number_of_channels","","The number of audio channels that can be read.",44,[[]]],[10,"frames_per_second","","The sampling frequency in frames per second.",44,[[]]],[10,"fill_buffer","","Fill the buffers. Return the number of frames that have…",44,[[["audiobufferout",3]],["result",4]]],[8,"AudioWriter","","Define how audio is written.",null,null],[16,"Err","","The type of the error that occurs when reading data.",45,null],[10,"write_buffer","","Write to the specified audio buffer.",45,[[["audiobufferin",3]],["result",4]]],[11,"specifies_number_of_channels","","Return `true` if this `AudioWriter` is responsible for…",45,[[]]],[11,"number_of_channels","","Return the number of channels. This method is only called…",45,[[]]],[8,"MidiWriter","","Define how midi is written. Note: there is no…",null,null],[10,"write_event","","",46,[[["deltaevent",3],["rawmidievent",3]]]],[11,"new","","",47,[[]]],[11,"step_frames","","",47,[[]]],[11,"new","","Create a new `TestAudioReader`. The newly created…",48,[[["audiobufferreader",6],["vec",3]]]],[11,"new","","Create a new `TestAudioWriter`. The newly created will…",49,[[["audiochunk",3],["vec",3]]]],[11,"new","","Create a new `TestMidiReader` that will return the…",50,[[["deltaevent",3],["vec",3]]]],[11,"new","","Create a new `TestMidiWriter` that will panic when the…",51,[[["deltaevent",3],["vec",3]]]],[11,"check_last","","",51,[[]]],[0,"jack_backend","rsynth::backend","Wrapper for the [JACK] backend (behind the `backend-jack`…",null,null],[3,"JackHost","rsynth::backend::jack_backend","Used to communicate with `Jack`.",null,null],[5,"run","","Run the plugin until the user presses a key on the…",null,[[],[["error",4],["result",4]]]],[0,"jack","","Re-exports of the `jack` crate. Use this so that your code…",null,null],[5,"get_time","rsynth::backend::jack_backend::jack","Return JACK\'s current system time in microseconds, using…",null,[[]]],[3,"AsyncClient","","A JACK client that is processing data asynchronously, in…",null,null],[3,"Client","","A client to interact with a JACK server.",null,null],[3,"ClientOptions","","Option flags for opening a JACK client.",null,null],[3,"ClientStatus","","Status flags for JACK clients.",null,null],[3,"ClosureProcessHandler","","Wrap a closure that can handle the `process` callback.…",null,null],[12,"process_fn","","",52,null],[3,"CycleTimes","","Internal cycle timing information.",null,null],[12,"current_frames","","",53,null],[12,"current_usecs","","",53,null],[12,"next_usecs","","",53,null],[12,"period_usecs","","",53,null],[8,"NotificationHandler","","Specifies callbacks for JACK.",null,null],[11,"thread_init","","Called just once after the creation of the thread in which…",54,[[["client",3]]]],[11,"shutdown","","Called when the JACK server shuts down the client thread.…",54,[[["clientstatus",3]]]],[11,"freewheel","","Called whenever \\\"freewheel\\\" mode is entered or leaving.",54,[[["client",3]]]],[11,"buffer_size","","Called whenever the size of the buffer that will be passed…",54,[[["client",3]],["control",4]]],[11,"sample_rate","","Called whenever the system sample rate changes.",54,[[["client",3]],["control",4]]],[11,"client_registration","","Called whenever a client is registered or unregistered",54,[[["client",3]]]],[11,"port_registration","","Called whenever a port is registered or unregistered",54,[[["client",3]]]],[11,"port_rename","","Called whenever a port is renamed.",54,[[["client",3]],["control",4]]],[11,"ports_connected","","Called whenever ports are connected/disconnected to/from…",54,[[["client",3]]]],[11,"graph_reorder","","Called whenever the processing graph is reordered.",54,[[["client",3]],["control",4]]],[11,"xrun","","Called whenever an xrun occurs.",54,[[["client",3]],["control",4]]],[11,"latency","","Called whenever it is necessary to recompute the latencies…",54,[[["latencytype",4],["client",3]]]],[8,"ProcessHandler","","Specifies real-time processing.",null,null],[10,"process","","Called whenever there is work to be done.",55,[[["processscope",3],["client",3]],["control",4]]],[3,"ProcessScope","","`ProcessScope` provides information on the client and…",null,null],[3,"CLIENT_NAME_SIZE","","The maximum string length for port names.",null,null],[4,"Control","","Specify an option, either to continue processing, or to…",null,null],[13,"Continue","","Continue processing.",56,null],[13,"Quit","","Stop processing.",56,null],[4,"Error","","An error that can occur in JACK.",null,null],[13,"CallbackDeregistrationError","","",57,null],[13,"CallbackRegistrationError","","",57,null],[13,"ClientActivationError","","",57,null],[13,"ClientDeactivationError","","",57,null],[13,"ClientError","","",57,null],[13,"FreewheelError","","",57,null],[13,"InvalidDeactivation","","",57,null],[13,"NotEnoughSpace","","",57,null],[13,"PortAliasError","","",57,null],[13,"PortAlreadyConnected","","",57,null],[13,"PortConnectionError","","",57,null],[13,"PortDisconnectionError","","",57,null],[13,"PortMonitorError","","",57,null],[13,"PortNamingError","","",57,null],[13,"PortRegistrationError","","",57,null],[13,"SetBufferSizeError","","",57,null],[13,"TimeError","","",57,null],[13,"WeakFunctionNotFound","","",57,null],[13,"ClientIsNoLongerAlive","","",57,null],[13,"UnknownError","","",57,null],[4,"LatencyType","","Used by `NotificationHandler::latency()`.",null,null],[13,"Capture","","",58,null],[13,"Playback","","",58,null],[5,"error_callback","","Get the error callback that was set using…",null,[[],["option",4]]],[5,"info_callback","","Resets the JACK info callback to use stdio. Get the info…",null,[[],["option",4]]],[5,"reset_error_callback","","Restores the JACK info callback to the JACK default, which…",null,[[]]],[5,"reset_info_callback","","Restores the JACK info callback to the JACK default, which…",null,[[]]],[5,"set_error_callback","","Set the global JACK info callback. It is recommended to…",null,[[]]],[5,"set_info_callback","","Set the global JACK info callback. It is recommended to…",null,[[]]],[3,"AudioIn","","`AudioIn` implements the `PortSpec` trait which, defines…",null,null],[3,"AudioOut","","`AudioOut` implements the `PortSpec` trait, which defines…",null,null],[3,"MidiIn","","`MidiIn` implements the `PortSpec` trait, which defines an…",null,null],[3,"MidiIter","","Iterate through Midi Messages within a `Port<MidiIn>`.",null,null],[3,"MidiOut","","`MidiOut` implements the `PortSpec` trait, which defines…",null,null],[3,"MidiWriter","","Write midi events to an output midi port.",null,null],[3,"Port","","An endpoint to interact with JACK data streams, for audio,…",null,null],[3,"PortFlags","","Flags for specifying port options.",null,null],[8,"PortSpec","","Defines the configuration for a certain port to JACK, ie…",null,null],[10,"jack_port_type","","String used by JACK upon port creation to identify the…",59,[[]]],[10,"jack_flags","","Flags used by jack upon port creation.",59,[[],["portflags",3]]],[10,"jack_buffer_size","","Size used by jack upon port creation.",59,[[]]],[3,"RawMidi","","Contains 8bit raw midi information along with a timestamp…",null,null],[12,"time","","The amount of time passed, in frames, relative to the…",60,null],[12,"bytes","","Midi data",60,null],[3,"Unowned","","`PortSpec` for a port that holds has no readable or…",null,null],[3,"PORT_NAME_SIZE","","The maximum string length for port names.",null,null],[3,"PORT_TYPE_SIZE","","The maximum string length for jack type names.",null,null],[6,"Frames","","Type used to represent sample frame counts.",null,null],[6,"PortId","","Ports have unique ids. A port registration callback is the…",null,null],[6,"Time","","Type used to represent the value of free running monotonic…",null,null],[3,"RingBuffer","","A lock-free ringbuffer. The key attribute of a ringbuffer…",null,null],[3,"RingBufferReader","","Read end of the ring buffer. Can only be used from one…",null,null],[3,"RingBufferWriter","","Write end of the ring buffer. Can only be used from one…",null,null],[11,"client","rsynth::backend::jack_backend","Get access to the underlying [`Client`] so that you can…",61,[[],["client",3]]],[0,"vst_backend","rsynth::backend","Wrapper for the VST backend (behind the `backend-vst`…",null,null],[3,"VstPluginWrapper","rsynth::backend::vst_backend","A struct used internally by the [`vst_init`] macro.…",null,null],[0,"vst","","Re-exports from the `vst-rs` crate. Use this in libraries…",null,null],[0,"api","rsynth::backend::vst_backend::vst","Structures and types for interfacing with the VST 2.4 API.",null,null],[0,"consts","rsynth::backend::vst_backend::vst::api","Constant values",null,null],[17,"MAX_PRESET_NAME_LEN","rsynth::backend::vst_backend::vst::api::consts","",null,null],[17,"MAX_PARAM_STR_LEN","","",null,null],[17,"MAX_LABEL","","",null,null],[17,"MAX_SHORT_LABEL","","",null,null],[17,"MAX_PRODUCT_STR_LEN","","",null,null],[17,"MAX_VENDOR_STR_LEN","","",null,null],[17,"VST_MAGIC","","VST plugins are identified by a magic number. This…",null,null],[6,"PluginMain","rsynth::backend::vst_backend::vst::api","`VSTPluginMain` function signature.",null,null],[6,"HostCallbackProc","","Host callback function passed to plugin. Can be used to…",null,null],[6,"DispatcherProc","","Dispatcher function used to process opcodes. Called by host.",null,null],[6,"ProcessProc","","Process function used to process 32 bit floating point…",null,null],[6,"ProcessProcF64","","Process function used to process 64 bit floating point…",null,null],[6,"SetParameterProc","","Callback function used to set parameter values. Called by…",null,null],[6,"GetParameterProc","","Callback function used to get parameter values. Called by…",null,null],[3,"AEffect","","Used with the VST API to pass around plugin information.",null,null],[12,"magic","","Magic number. Must be `[\'V\', \'S\', \'T\', \'P\']`.",62,null],[12,"dispatcher","","Host to plug-in dispatcher.",62,null],[12,"_process","","Accumulating process mode is deprecated in VST 2.4! Use…",62,null],[12,"setParameter","","Set value of automatable parameter.",62,null],[12,"getParameter","","Get value of automatable parameter.",62,null],[12,"numPrograms","","Number of programs (Presets).",62,null],[12,"numParams","","Number of parameters. All programs are assumed to have…",62,null],[12,"numInputs","","Number of audio inputs.",62,null],[12,"numOutputs","","Number of audio outputs.",62,null],[12,"flags","","Bitmask made of values from `api::PluginFlags`.",62,null],[12,"reserved1","","Reserved for host, must be 0.",62,null],[12,"reserved2","","Reserved for host, must be 0.",62,null],[12,"initialDelay","","For algorithms which need input in the first place (Group…",62,null],[12,"_realQualities","","Deprecated unused member.",62,null],[12,"_offQualities","","Deprecated unused member.",62,null],[12,"_ioRatio","","Deprecated unused member.",62,null],[12,"object","","Void pointer usable by api to store object data.",62,null],[12,"user","","User defined pointer.",62,null],[12,"uniqueId","","Registered unique identifier (register it at Steinberg 3rd…",62,null],[12,"version","","Plug-in version (e.g. 1100 for v1.1.0.0).",62,null],[12,"processReplacing","","Process audio samples in replacing mode.",62,null],[12,"processReplacingF64","","Process double-precision audio samples in replacing mode.",62,null],[12,"future","","Reserved for future use (please zero).",62,null],[3,"ChannelProperties","","Information about a channel. Only some hosts use this…",null,null],[12,"name","","Channel name.",63,null],[12,"flags","","Flags found in `ChannelFlags`.",63,null],[12,"arrangement_type","","Type of speaker arrangement this channel is a part of.",63,null],[12,"short_name","","Name of channel (recommended: 6 characters + delimiter).",63,null],[12,"future","","Reserved for future use.",63,null],[4,"SpeakerArrangementType","","Tells the host how the channels are intended to be used in…",null,null],[13,"Custom","","User defined arrangement.",64,null],[13,"Empty","","Empty arrangement.",64,null],[13,"Mono","","Mono.",64,null],[13,"Stereo","","L R",64,null],[13,"StereoSurround","","Ls Rs",64,null],[13,"StereoCenter","","Lc Rc",64,null],[13,"StereoSide","","Sl Sr",64,null],[13,"StereoCLfe","","C Lfe",64,null],[13,"Cinema30","","L R C",64,null],[13,"Music30","","L R S",64,null],[13,"Cinema31","","L R C Lfe",64,null],[13,"Music31","","L R Lfe S",64,null],[13,"Cinema40","","L R C S (LCRS)",64,null],[13,"Music40","","L R Ls Rs (Quadro)",64,null],[13,"Cinema41","","L R C Lfe S (LCRS + Lfe)",64,null],[13,"Music41","","L R Lfe Ls Rs (Quadro + Lfe)",64,null],[13,"Surround50","","L R C Ls Rs",64,null],[13,"Surround51","","L R C Lfe Ls Rs",64,null],[13,"Cinema60","","L R C Ls  Rs Cs",64,null],[13,"Music60","","L R Ls Rs  Sl Sr",64,null],[13,"Cinema61","","L R C Lfe Ls Rs Cs",64,null],[13,"Music61","","L R Lfe Ls Rs Sl Sr",64,null],[13,"Cinema70","","L R C Ls Rs Lc Rc",64,null],[13,"Music70","","L R C Ls Rs Sl Sr",64,null],[13,"Cinema71","","L R C Lfe Ls Rs Lc Rc",64,null],[13,"Music71","","L R C Lfe Ls Rs Sl Sr",64,null],[13,"Cinema80","","L R C Ls Rs Lc Rc Cs",64,null],[13,"Music80","","L R C Ls Rs Cs Sl Sr",64,null],[13,"Cinema81","","L R C Lfe Ls Rs Lc Rc Cs",64,null],[13,"Music81","","L R C Lfe Ls Rs Cs Sl Sr",64,null],[13,"Surround102","","L R C Lfe Ls Rs Tfl Tfc Tfr Trl Trr Lfe2",64,null],[4,"Supported","","Used to specify whether functionality is supported.",null,null],[13,"Yes","","",65,null],[13,"Maybe","","",65,null],[13,"No","","",65,null],[4,"ProcessLevel","","Denotes in which thread the host is in.",null,null],[13,"Unknown","","Unsupported by host.",66,null],[13,"User","","GUI thread.",66,null],[13,"Realtime","","Audio process thread.",66,null],[13,"Prefetch","","Sequence thread (MIDI, etc).",66,null],[13,"Offline","","Offline processing thread (therefore GUI/user thread).",66,null],[4,"HostLanguage","","Language that the host is using.",null,null],[13,"English","","",67,null],[13,"German","","",67,null],[13,"French","","",67,null],[13,"Italian","","",67,null],[13,"Spanish","","",67,null],[13,"Japanese","","",67,null],[4,"FileSelectCommand","","The file operation to perform.",null,null],[13,"Load","","Load a file.",68,null],[13,"Save","","Save a file.",68,null],[13,"LoadMultipleFiles","","Load multiple files simultaneously.",68,null],[13,"SelectDirectory","","Choose a directory.",68,null],[4,"FileSelectType","","Format to select files.",null,null],[13,"Regular","","Regular file selector.",69,null],[3,"FileType","","File type descriptor.",null,null],[12,"name","","Display name of file type.",70,null],[12,"osx_type","","OS X file type.",70,null],[12,"win_type","","Windows file type.",70,null],[12,"nix_type","","Unix file type.",70,null],[12,"mime_type_1","","MIME type.",70,null],[12,"mime_type_2","","Additional MIME type.",70,null],[3,"FileSelect","","File selector descriptor used in…",null,null],[12,"command","","The type of file selection to perform.",71,null],[12,"select_type","","The file selector to open.",71,null],[12,"mac_creator","","Unknown. 0 = no creator.",71,null],[12,"num_types","","Number of file types.",71,null],[12,"file_types","","List of file types to show.",71,null],[12,"title","","File selector\'s title.",71,null],[12,"initial_path","","Initial path.",71,null],[12,"return_path","","Used when operation returns a single path.",71,null],[12,"size_return_path","","Size of the path buffer in bytes.",71,null],[12,"return_multiple_paths","","Used when operation returns multiple paths.",71,null],[12,"num_paths","","Number of paths returned.",71,null],[12,"reserved","","Reserved by host.",71,null],[12,"future","","Reserved for future use.",71,null],[3,"Events","","A struct which contains events.",null,null],[12,"num_events","","Number of events.",72,null],[12,"_reserved","","Reserved for future use. Should be 0.",72,null],[12,"events","","Variable-length array of pointers to `api::Event` objects.",72,null],[4,"EventType","","The type of event that has occured. See…",null,null],[13,"Midi","","Midi event. See `api::MidiEvent`.",73,null],[13,"_Audio","","Deprecated.",73,null],[13,"_Video","","Deprecated.",73,null],[13,"_Parameter","","Deprecated.",73,null],[13,"_Trigger","","Deprecated.",73,null],[13,"SysEx","","System exclusive event. See `api::SysExEvent`.",73,null],[3,"Event","","A VST event intended to be casted to a corresponding type.",null,null],[12,"event_type","","The type of event. This lets you know which event this…",74,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<Event>()`.",74,null],[12,"delta_frames","","Number of samples into the current processing block that…",74,null],[12,"_flags","","Generic flags, none defined in VST api yet.",74,null],[12,"_reserved","","The `Event` type is cast appropriately, so this acts as…",74,null],[3,"MidiEvent","","A midi event.",null,null],[12,"event_type","","Should be `EventType::Midi`.",75,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<MidiEvent>()`.",75,null],[12,"delta_frames","","Number of samples into the current processing block that…",75,null],[12,"flags","","See `MidiEventFlags`.",75,null],[12,"note_length","","Length in sample frames of entire note if available,…",75,null],[12,"note_offset","","Offset in samples into note from start if available,…",75,null],[12,"midi_data","","1 to 3 midi bytes. TODO: Doc",75,null],[12,"_midi_reserved","","Reserved midi byte (0).",75,null],[12,"detune","","Detuning between -63 and +64 cents, for scales other than…",75,null],[12,"note_off_velocity","","Note off velocity between 0 and 127.",75,null],[12,"_reserved1","","Reserved for future use. Should be 0.",75,null],[12,"_reserved2","","Reserved for future use. Should be 0.",75,null],[3,"SysExEvent","","A midi system exclusive event.",null,null],[12,"event_type","","Should be `EventType::SysEx`.",76,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<SysExEvent>()`.",76,null],[12,"delta_frames","","Number of samples into the current processing block that…",76,null],[12,"_flags","","Generic flags, none defined in VST api yet.",76,null],[12,"data_size","","Size of payload in bytes.",76,null],[12,"_reserved1","","Reserved for future use. Should be 0.",76,null],[12,"system_data","","Pointer to payload.",76,null],[12,"_reserved2","","Reserved for future use. Should be 0.",76,null],[3,"TimeInfo","","Describes the time at the start of the block currently…",null,null],[12,"sample_pos","","current Position in audio samples (always valid)",77,null],[12,"sample_rate","","current Sample Rate in Hertz (always valid)",77,null],[12,"nanoseconds","","System Time in nanoseconds (10^-9 second)",77,null],[12,"ppq_pos","","Musical Position, in Quarter Note (1.0 equals 1 Quarter…",77,null],[12,"tempo","","current Tempo in BPM (Beats Per Minute)",77,null],[12,"bar_start_pos","","last Bar Start Position, in Quarter Note",77,null],[12,"cycle_start_pos","","Cycle Start (left locator), in Quarter Note",77,null],[12,"cycle_end_pos","","Cycle End (right locator), in Quarter Note",77,null],[12,"time_sig_numerator","","Time Signature Numerator (e.g. 3 for 3/4)",77,null],[12,"time_sig_denominator","","Time Signature Denominator (e.g. 4 for 3/4)",77,null],[12,"smpte_offset","","SMPTE offset in SMPTE subframes (bits; 1/80 of a frame).…",77,null],[12,"smpte_frame_rate","","See `SmpteFrameRate`",77,null],[12,"samples_to_next_clock","","MIDI Clock Resolution (24 Per Quarter Note), can be…",77,null],[12,"flags","","See `TimeInfoFlags`",77,null],[4,"SmpteFrameRate","","SMPTE Frame Rates.",null,null],[13,"Smpte24fps","","24 fps",78,null],[13,"Smpte25fps","","25 fps",78,null],[13,"Smpte2997fps","","29.97 fps",78,null],[13,"Smpte30fps","","30 fps",78,null],[13,"Smpte2997dfps","","29.97 drop",78,null],[13,"Smpte30dfps","","30 drop",78,null],[13,"SmpteFilm16mm","","Film 16mm",78,null],[13,"SmpteFilm35mm","","Film 35mm",78,null],[13,"Smpte239fps","","HDTV: 23.976 fps",78,null],[13,"Smpte249fps","","HDTV: 24.976 fps",78,null],[13,"Smpte599fps","","HDTV: 59.94 fps",78,null],[13,"Smpte60fps","","HDTV: 60 fps",78,null],[3,"ChannelFlags","","Flags for VST channels.",null,null],[3,"PluginFlags","","Flags for VST plugins.",null,null],[3,"ModifierKey","","Cross platform modifier key flags.",null,null],[3,"MidiEventFlags","","MIDI event flags.",null,null],[3,"TimeInfoFlags","","Used in the `flags` field of `TimeInfo`, and for querying…",null,null],[0,"buffer","rsynth::backend::vst_backend::vst","Buffers to safely work with audio samples.",null,null],[3,"AudioBuffer","rsynth::backend::vst_backend::vst::buffer","`AudioBuffer` contains references to the audio buffers for…",null,null],[3,"AudioBufferIterator","","Iterator over pairs of buffers of input channels and…",null,null],[3,"Inputs","","Wrapper type to access the buffers for the input channels…",null,null],[3,"InputIterator","","Iterator over buffers for input channels of an…",null,null],[3,"Outputs","","Wrapper type to access the buffers for the output channels…",null,null],[3,"OutputIterator","","Iterator over buffers for output channels of an…",null,null],[6,"PlaceholderEvent","","This is used as a placeholder to pre-allocate space for a…",null,null],[8,"WriteIntoPlaceholder","","This trait is used by `SendEventBuffer::send_events` to…",null,null],[10,"write_into","","writes an event into the given placeholder memory location",79,[[["sysexevent",3]]]],[3,"SendEventBuffer","","This buffer is used for sending midi events through the…",null,null],[0,"channels","rsynth::backend::vst_backend::vst","Meta data for dealing with input / output channels. Not…",null,null],[3,"ChannelInfo","rsynth::backend::vst_backend::vst::channels","Information about an input / output channel. This isn\'t…",null,null],[4,"ArrangementTarget","","Target for Speaker arrangement type. Can be a cinema…",null,null],[13,"Music","","Music arrangement. Technically identical to Cinema.",80,null],[13,"Cinema","","Cinematic arrangement. Technically identical to Music.",80,null],[4,"StereoChannel","","An enum for all channels in a stereo configuration.",null,null],[13,"Left","","Left channel.",81,null],[13,"Right","","Right channel.",81,null],[4,"StereoConfig","","Possible stereo speaker configurations.",null,null],[13,"L_R","","Regular.",82,null],[13,"Ls_Rs","","Left surround, right surround.",82,null],[13,"Lc_Rc","","Left center, right center.",82,null],[13,"Sl_Sr","","Side left, side right.",82,null],[13,"C_Lfe","","Center, low frequency effects.",82,null],[4,"SurroundConfig","","Possible surround speaker configurations.",null,null],[13,"S3_0","","3.0 surround sound. Cinema: L R C Music: L R S",83,null],[13,"S3_1","","3.1 surround sound. Cinema: L R C Lfe Music: L R Lfe S",83,null],[13,"S4_0","","4.0 surround sound. Cinema: L R C S (LCRS) Music: L R Ls…",83,null],[13,"S4_1","","4.1 surround sound. Cinema: L R C Lfe S (LCRS + Lfe)…",83,null],[13,"S5_0","","5.0 surround sound. Cinema and music: L R C Ls Rs",83,null],[13,"S5_1","","5.1 surround sound. Cinema and music: L R C Lfe Ls Rs",83,null],[13,"S6_0","","6.0 surround sound. Cinema: L R C Ls Rs Cs Music: L R Ls…",83,null],[13,"S6_1","","6.1 surround sound. Cinema: L R C Lfe Ls Rs Cs Music: L R…",83,null],[13,"S7_0","","7.0 surround sound. Cinema: L R C Ls Rs Lc Rc Music: L R C…",83,null],[13,"S7_1","","7.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Music: L…",83,null],[13,"S8_0","","8.0 surround sound. Cinema: L R C Ls Rs Lc Rc Cs Music: L…",83,null],[13,"S8_1","","8.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Cs…",83,null],[13,"S10_2","","10.2 surround sound. Cinema + Music: L R C Lfe Ls Rs Tfl…",83,null],[4,"SpeakerArrangementType","","Type representing how a channel is used. Only useful for…",null,null],[13,"Custom","","Custom arrangement not specified to host.",84,null],[13,"Empty","","Empty arrangement.",84,null],[13,"Mono","","Mono channel.",84,null],[13,"Stereo","","Stereo channel. Contains type of stereo arrangement and…",84,null],[13,"Surround","","Surround channel. Contains surround arrangement and target…",84,null],[0,"editor","rsynth::backend::vst_backend::vst","All VST plugin editor related functionality.",null,null],[8,"Editor","rsynth::backend::vst_backend::vst::editor","Implemented by plugin editors.",null,null],[10,"size","","Get the size of the editor window.",85,[[]]],[10,"position","","Get the coordinates of the editor window.",85,[[]]],[11,"idle","","Editor idle call. Called by host.",85,[[]]],[11,"close","","Called when the editor window is closed.",85,[[]]],[10,"open","","Called when the editor window is opened.",85,[[]]],[10,"is_open","","Return whether the window is currently open.",85,[[]]],[11,"set_knob_mode","","Set the knob mode for this editor (if supported by host).",85,[[["knobmode",4]]]],[11,"key_up","","Receive key up event. Return `true` if the key was used.",85,[[["keycode",3]]]],[11,"key_down","","Receive key down event. Return `true` if the key was used.",85,[[["keycode",3]]]],[3,"KeyCode","","A platform independent key code. Includes modifier keys.",null,null],[12,"character","","ASCII character for key pressed (if applicable).",86,null],[12,"key","","Key pressed. See `enums::Key`.",86,null],[12,"modifier","","Modifier key bitflags. See `enums::flags::modifier_key`.",86,null],[4,"KnobMode","","Allows host to set how a parameter knob works.",null,null],[13,"Circular","","",87,null],[13,"CircularRelative","","",87,null],[13,"Linear","","",87,null],[4,"Key","","Platform independent key codes.",null,null],[13,"Back","","",88,null],[13,"Tab","","",88,null],[13,"Clear","","",88,null],[13,"Return","","",88,null],[13,"Pause","","",88,null],[13,"Escape","","",88,null],[13,"Space","","",88,null],[13,"Next","","",88,null],[13,"End","","",88,null],[13,"Home","","",88,null],[13,"Left","","",88,null],[13,"Up","","",88,null],[13,"Right","","",88,null],[13,"Down","","",88,null],[13,"PageUp","","",88,null],[13,"PageDown","","",88,null],[13,"Select","","",88,null],[13,"Print","","",88,null],[13,"Enter","","",88,null],[13,"Snapshot","","",88,null],[13,"Insert","","",88,null],[13,"Delete","","",88,null],[13,"Help","","",88,null],[13,"Numpad0","","",88,null],[13,"Numpad1","","",88,null],[13,"Numpad2","","",88,null],[13,"Numpad3","","",88,null],[13,"Numpad4","","",88,null],[13,"Numpad5","","",88,null],[13,"Numpad6","","",88,null],[13,"Numpad7","","",88,null],[13,"Numpad8","","",88,null],[13,"Numpad9","","",88,null],[13,"Multiply","","",88,null],[13,"Add","","",88,null],[13,"Separator","","",88,null],[13,"Subtract","","",88,null],[13,"Decimal","","",88,null],[13,"Divide","","",88,null],[13,"F1","","",88,null],[13,"F2","","",88,null],[13,"F3","","",88,null],[13,"F4","","",88,null],[13,"F5","","",88,null],[13,"F6","","",88,null],[13,"F7","","",88,null],[13,"F8","","",88,null],[13,"F9","","",88,null],[13,"F10","","",88,null],[13,"F11","","",88,null],[13,"F12","","",88,null],[13,"Numlock","","",88,null],[13,"Scroll","","",88,null],[13,"Shift","","",88,null],[13,"Control","","",88,null],[13,"Alt","","",88,null],[13,"Equals","","",88,null],[0,"event","rsynth::backend::vst_backend::vst","Interfaces to VST events.",null,null],[4,"Event","rsynth::backend::vst_backend::vst::event","A VST event.",null,null],[13,"Midi","","A midi event.",89,null],[13,"SysEx","","A system exclusive event.",89,null],[13,"Deprecated","","A deprecated event.",89,null],[3,"MidiEvent","","A midi event.",null,null],[12,"data","","The raw midi data associated with this event.",90,null],[12,"delta_frames","","Number of samples into the current processing block that…",90,null],[12,"live","","This midi event was created live as opposed to being…",90,null],[12,"note_length","","The length of the midi note associated with this event, if…",90,null],[12,"note_offset","","Offset in samples into note from note start, if available.",90,null],[12,"detune","","Detuning between -63 and +64 cents.",90,null],[12,"note_off_velocity","","Note off velocity between 0 and 127.",90,null],[3,"SysExEvent","","A system exclusive event.",null,null],[12,"payload","","The SysEx payload.",91,null],[12,"delta_frames","","Number of samples into the current processing block that…",91,null],[0,"host","rsynth::backend::vst_backend::vst","Host specific structures.",null,null],[8,"Host","rsynth::backend::vst_backend::vst::host","Implemented by all VST hosts.",null,null],[11,"automate","","Automate a parameter; the value has been changed.",92,[[]]],[11,"get_plugin_id","","Get the plugin ID of the currently loading plugin.",92,[[]]],[11,"idle","","An idle call.",92,[[]]],[11,"get_info","","Get vendor and product information.",92,[[]]],[11,"process_events","","Handle incoming events from the plugin.",92,[[["events",3]]]],[11,"get_time_info","","Get time information.",92,[[],[["option",4],["timeinfo",3]]]],[11,"get_block_size","","Get block size.",92,[[]]],[4,"PluginLoadError","","All possible errors that can occur when loading a VST…",null,null],[13,"InvalidPath","","Could not load given path.",93,null],[13,"NotAPlugin","","Given path is not a VST plugin.",93,null],[13,"InstanceFailed","","Failed to create an instance of this plugin.",93,null],[13,"InvalidApiVersion","","The API version which the plugin used is not supported by…",93,null],[3,"PluginLoader","","Wrapper for an externally loaded VST plugin.",null,null],[3,"PluginInstance","","An instance of an externally loaded VST plugin.",null,null],[3,"HostBuffer","","Used for constructing `AudioBuffer` instances on the host.",null,null],[0,"plugin","rsynth::backend::vst_backend::vst","Plugin specific structures.",null,null],[4,"Category","rsynth::backend::vst_backend::vst::plugin","Plugin type. Generally either Effect or Synth.",null,null],[13,"Unknown","","Unknown / not implemented",94,null],[13,"Effect","","Any effect",94,null],[13,"Synth","","VST instrument",94,null],[13,"Analysis","","Scope, tuner, spectrum analyser, etc.",94,null],[13,"Mastering","","Dynamics, etc.",94,null],[13,"Spacializer","","Panners, etc.",94,null],[13,"RoomFx","","Delays and Reverbs",94,null],[13,"SurroundFx","","Dedicated surround processor.",94,null],[13,"Restoration","","Denoiser, etc.",94,null],[13,"OfflineProcess","","Offline processing.",94,null],[13,"Shell","","Contains other plugins.",94,null],[13,"Generator","","Tone generator, etc.",94,null],[3,"Info","","A structure representing static plugin information.",null,null],[12,"name","","Plugin Name.",95,null],[12,"vendor","","Plugin Vendor.",95,null],[12,"presets","","Number of different presets.",95,null],[12,"parameters","","Number of parameters.",95,null],[12,"inputs","","Number of inputs.",95,null],[12,"outputs","","Number of outputs.",95,null],[12,"midi_inputs","","Number of MIDI input channels (1-16), or 0 for the default…",95,null],[12,"midi_outputs","","Number of MIDI output channels (1-16), or 0 for the…",95,null],[12,"unique_id","","Unique plugin ID. Can be registered with Steinberg to…",95,null],[12,"version","","Plugin version (e.g. 0001 = `v0.0.0.1`, 1283 = `v1.2.8.3`).",95,null],[12,"category","","Plugin category. Possible values are found in…",95,null],[12,"initial_delay","","Latency of the plugin in samples.",95,null],[12,"preset_chunks","","Indicates that preset data is handled in formatless chunks.",95,null],[12,"f64_precision","","Indicates whether this plugin can process f64 based…",95,null],[12,"silent_when_stopped","","If this is true, the plugin will not produce sound when…",95,null],[4,"CanDo","","Features which are optionally supported by a plugin. These…",null,null],[13,"SendEvents","","",96,null],[13,"SendMidiEvent","","",96,null],[13,"ReceiveEvents","","",96,null],[13,"ReceiveMidiEvent","","",96,null],[13,"ReceiveTimeInfo","","",96,null],[13,"Offline","","",96,null],[13,"MidiProgramNames","","",96,null],[13,"Bypass","","",96,null],[13,"ReceiveSysExEvent","","",96,null],[13,"MidiSingleNoteTuningChange","","",96,null],[13,"MidiKeyBasedInstrumentControl","","",96,null],[13,"Other","","",96,null],[8,"Plugin","","Must be implemented by all VST plugins.",null,null],[10,"get_info","","This method must return an `Info` struct.",97,[[],["info",3]]],[11,"new","","Called during initialization to pass a `HostCallback` to…",97,[[["hostcallback",3]]]],[11,"init","","Called when plugin is fully initialized.",97,[[]]],[11,"set_sample_rate","","Called when sample rate is changed by host.",97,[[]]],[11,"set_block_size","","Called when block size is changed by host.",97,[[]]],[11,"resume","","Called to transition the plugin into the resumed state.",97,[[]]],[11,"suspend","","Called to transition the plugin into the suspended state.",97,[[]]],[11,"vendor_specific","","Vendor specific handling.",97,[[]]],[11,"can_do","","Return whether plugin supports specified action.",97,[[["cando",4]],["supported",4]]],[11,"get_tail_size","","Get the tail size of plugin when it is stopped. Used in…",97,[[]]],[11,"process","","Process an audio buffer containing `f32` values.",97,[[["audiobuffer",3]]]],[11,"process_f64","","Process an audio buffer containing `f64` values.",97,[[["audiobuffer",3]]]],[11,"process_events","","Handle incoming events sent from the host.",97,[[["events",3]]]],[11,"get_parameter_object","","Get a reference to the shared parameter object.",97,[[],[["pluginparameters",8],["arc",3]]]],[11,"get_input_info","","Get information about an input channel. Only used by some…",97,[[],["channelinfo",3]]],[11,"get_output_info","","Get information about an output channel. Only used by some…",97,[[],["channelinfo",3]]],[11,"start_process","","Called one time before the start of process call.",97,[[]]],[11,"stop_process","","Called after the stop of process call.",97,[[]]],[11,"get_editor","","Return handle to plugin editor if supported. The method…",97,[[],[["option",4],["box",3]]]],[8,"PluginParameters","","Parameter object shared between the UI and processing…",null,null],[11,"change_preset","","Set the current preset to the index specified by `preset`.",98,[[]]],[11,"get_preset_num","","Get the current preset index.",98,[[]]],[11,"set_preset_name","","Set the current preset name.",98,[[["string",3]]]],[11,"get_preset_name","","Get the name of the preset at the index specified by…",98,[[],["string",3]]],[11,"get_parameter_label","","Get parameter label for parameter at `index` (e.g. \\\"db\\\",…",98,[[],["string",3]]],[11,"get_parameter_text","","Get the parameter value for parameter at `index` (e.g.…",98,[[],["string",3]]],[11,"get_parameter_name","","Get the name of parameter at `index`.",98,[[],["string",3]]],[11,"get_parameter","","Get the value of paramater at `index`. Should be value…",98,[[]]],[11,"set_parameter","","Set the value of parameter at `index`. `value` is between…",98,[[]]],[11,"can_be_automated","","Return whether parameter at `index` can be automated.",98,[[]]],[11,"string_to_parameter","","Use String as input for parameter value. Used by host to…",98,[[["string",3]]]],[11,"get_preset_data","","If `preset_chunks` is set to true in plugin info, this…",98,[[],["vec",3]]],[11,"get_bank_data","","If `preset_chunks` is set to true in plugin info, this…",98,[[],["vec",3]]],[11,"load_preset_data","","If `preset_chunks` is set to true in plugin info, this…",98,[[]]],[11,"load_bank_data","","If `preset_chunks` is set to true in plugin info, this…",98,[[]]],[3,"HostCallback","","A reference to the host which allows the plugin to call…",null,null],[0,"util","rsynth::backend::vst_backend::vst","Structures for easing the implementation of VST plugins.",null,null],[3,"AtomicFloat","rsynth::backend::vst_backend::vst::util","Simple atomic floating point variable with relaxed ordering.",null,null],[3,"ParameterTransfer","","A set of parameters that can be shared between threads.",null,null],[3,"ParameterTransferIterator","","An iterator over changed parameters. Returned by `iterate`.",null,null],[14,"plugin_main","rsynth::backend::vst_backend::vst","Exports the necessary symbols for the plugin to be used by…",null,null],[8,"VstPluginMeta","rsynth::backend::vst_backend","Define some VST-specific meta-data for a VST plugin.",null,null],[10,"plugin_id","","",99,[[]]],[10,"category","","",99,[[],["category",4]]],[11,"get_info","","",100,[[],["info",3]]],[11,"new","","Create a new `VstPluginWrapper`. Note Normally, plugin\'s…",100,[[["hostcallback",3]]]],[11,"host","","",100,[[],["hostcallback",3]]],[11,"process","","",100,[[["audiobuffer",3]]]],[11,"process_f64","","",100,[[["audiobuffer",3]]]],[11,"get_input_info","","",100,[[],["channelinfo",3]]],[11,"get_output_info","","",100,[[],["channelinfo",3]]],[11,"process_events","","",100,[[["events",3]]]],[11,"set_sample_rate","","",100,[[]]],[8,"HostInterface","rsynth::backend","Defines an interface for communicating with the host or…",null,null],[10,"output_initialized","","Return whether the output buffers are zero-initialized.…",101,[[]]],[11,"stop","","Stop processing. For backends that do not support…",101,[[]]],[8,"Stop","","A marker trait that indicates that the backend can be…",null,null],[0,"envelope","rsynth","This module has not been thoroughly tested, so expect some…",null,null],[3,"EnvelopeIteratorItem","rsynth::envelope","",null,null],[12,"item","","",102,null],[12,"has_updated","","",102,null],[0,"staircase_envelope","","",null,null],[3,"StairCaseEnvelopeIterator","rsynth::envelope::staircase_envelope","",null,null],[3,"StairCaseEnvelope","","",null,null],[8,"Envelope","rsynth::envelope","Defines the behaviour of an envelope. An envelope allows…",null,null],[16,"Iter","","The type of the iterator.",103,null],[16,"EventType","","",103,null],[10,"iter","","Get the iterator.",103,[[]]],[10,"insert_event","","",103,[[]]],[10,"forget_past","","",103,[[]]],[0,"event","rsynth","Event handling",null,null],[3,"SysExEvent","rsynth::event","A System Exclusive (\\\"SysEx\\\") event.",null,null],[3,"RawMidiEvent","","A raw midi event.",null,null],[3,"Timed","","`Timed<E>` adds timing to an event.",null,null],[12,"time_in_frames","","The offset (in frames) of the event relative to the start…",104,null],[12,"event","","The underlying event.",104,null],[3,"Indexed","","`Indexed<E>` adds an index to an event.",null,null],[12,"index","","The index of the event",105,null],[12,"event","","The underlying event.",105,null],[3,"DeltaEvent","","",null,null],[12,"microseconds_since_previous_event","","",106,null],[12,"event","","",106,null],[4,"MidlyConversionError","","The error type when converting from `midly`\'s…",null,null],[13,"NotALiveEvent","","Not a live event.",107,null],[13,"CursorError","","Cursor error (technical error).",107,null],[0,"event_queue","","Queue events.",null,null],[3,"EventQueue","rsynth::event::event_queue","A queue for timed events.",null,null],[3,"AlwaysInsertNewBeforeOld","","Always queue the new newly queued event before the…",null,null],[3,"AlwaysInsertNewAfterOld","","Always queue the new newly queued event after the…",null,null],[3,"AlwaysIgnoreNew","","Always ignore the newly queued event in case of collision…",null,null],[3,"AlwaysRemoveOld","","Always remove the previously queued event in case of…",null,null],[4,"EventCollisionHandling","","Determines what should happen when two events are queued…",null,null],[13,"InsertNewBeforeOld","","Insert the newly queued event before the previously queued.",108,null],[13,"InsertNewAfterOld","","Insert the newly queued event after the previously queued.",108,null],[13,"IgnoreNew","","Ignore the newly queued event.",108,null],[13,"RemoveOld","","Remove the previously queued event.",108,null],[8,"HandleEventCollision","","Trait that describes how \\\"event collision\\\" (queing two…",null,null],[10,"decide_on_collision","","",109,[[],["eventcollisionhandling",4]]],[11,"new","","Create a new `EventQueue`. # Panics Panics if `capacity ==…",110,[[]]],[11,"queue_event","","Queue a new event. When the buffer is full, an element may…",110,[[["timed",3]],[["option",4],["timed",3]]]],[11,"forget_before","","Remove all events before, but not on, this threshold.",110,[[]]],[11,"clear","","Remove all events from the queue.",110,[[]]],[11,"shift_time","","Shift time forward by `new_zero_time` frames.",110,[[]]],[11,"get_last_before","","",110,[[],[["timed",3],["option",4]]]],[11,"first","","Get the first event from the `EventQueue` if there is one…",110,[[],[["timed",3],["option",4]]]],[11,"split","","Go through the `EventQueue` and alternatingly handle…",110,[[["vecstorage",3],["audiobufferinout",3],["vecstorage",3]]]],[8,"EventHandler","rsynth::event","The trait that plugins should implement in order to handle…",null,null],[10,"handle_event","","",111,[[]]],[8,"ContextualEventHandler","","The trait that plugins should implement in order to handle…",null,null],[10,"handle_event","","",112,[[]]],[11,"new","","Create a new `SysExEvent` with the given `data`.",113,[[]]],[11,"data","","Get the data from the `SysExEvent`",113,[[]]],[11,"new","","Create a new `RawMidiEvent` with the given raw data.",114,[[]]],[11,"try_new","","Try to create a new `RawMidiEvent` with the given raw…",114,[[],["option",4]]],[11,"data","","Get the raw data from a `RawMidiEvent`, including \\\"padding\\\".",114,[[]]],[11,"bytes","","Get the raw data from a `RawMidiEvent`.",114,[[]]],[11,"new","","",104,[[]]],[11,"new","","",105,[[]]],[0,"meta","rsynth","Mechanisms for defining the meta-data of a plugin or…",null,null],[3,"AudioPort","rsynth::meta","A \\\"marker\\\" struct to be used as a type parameter for the…",null,null],[3,"MidiPort","","A \\\"marker\\\" struct to be used as a type parameter for the…",null,null],[3,"MetaData","","Represents general-purpose meta-data of an audio…",null,null],[12,"general_meta","","The meta-data about the application or plugin as a whole.",115,null],[12,"audio_port_meta","","Meta-data about the audio ports.",115,null],[12,"midi_port_meta","","Meta-data about the midi ports.",115,null],[3,"InOut","","Represents meta-data about a input and output ports.",null,null],[12,"inputs","","Meta-data of the input ports.",116,null],[12,"outputs","","Meta-data of the output ports.",116,null],[8,"Meta","","Define the meta-data for an application or plug-in.",null,null],[16,"MetaData","","The data-type that represents the meta-data.",117,null],[10,"meta","","Get the meta-data.",117,[[]]],[8,"General","","Define meta-data of an application or plugin as a whole.",null,null],[16,"GeneralData","","The data-type of the general meta-data.",118,null],[10,"general","","Get the general meta-data.",118,[[]]],[8,"Name","","Implement this trait to indicate that a type can be used…",null,null],[10,"name","","Get the name.",119,[[]]],[8,"Port","","Define meta-data for input ports and output ports.",null,null],[16,"PortData","","",120,null],[10,"in_ports","","",120,[[]]],[10,"out_ports","","",120,[[]]],[0,"test_utilities","rsynth","Utilities for testing.",null,null],[3,"DummyEventHandler","rsynth::test_utilities","",null,null],[3,"TestPlugin","","A plugin useful for writing automated tests.",null,null],[11,"new","","",121,[[["audiochunk",3],["vec",3],["vec",3],["vec",3]]]],[11,"check_last","","",121,[[]]],[0,"utilities","rsynth","",null,null],[0,"polyphony","rsynth::utilities","Utility to facilitate genarating different sounds at the…",null,null],[3,"ToneIdentifier","rsynth::utilities::polyphony","Used to dispatch polyphonic event to the correct voice,…",null,null],[12,"0","","",122,null],[3,"RawMidiEventToneIdentifierDispatchClassifier","","",null,null],[4,"EventDispatchClass","","",null,null],[13,"Broadcast","","",123,null],[13,"AssignNewVoice","","",123,null],[13,"VoiceSpecific","","",123,null],[13,"ReleaseVoice","","",123,null],[4,"VoiceAssignment","","",null,null],[13,"None","","",124,null],[13,"All","","",124,null],[13,"Some","","",124,null],[0,"simple_event_dispatching","","Some basic event dispatching.",null,null],[3,"SimpleEventDispatcher","rsynth::utilities::polyphony::simple_event_dispatching","A simple event dispatcher.",null,null],[4,"SimpleVoiceState","","A simple voice state",null,null],[13,"Idle","","The voice is idle (in other words: doing nothing).",125,null],[13,"Releasing","","The voice has received a signal to stop, but is still…",125,null],[13,"Active","","The voice has not yet received a signal to stop and is…",125,null],[11,"new","","",126,[[]]],[8,"EventDispatchClassifier","rsynth::utilities::polyphony","",null,null],[16,"VoiceIdentifier","","",127,null],[10,"classify","","",127,[[],["eventdispatchclass",4]]],[8,"Voice","","Implement this trait to inform the polyphonic event…",null,null],[10,"state","","",128,[[]]],[8,"VoiceAssigner","","",null,null],[16,"Voice","","",129,null],[11,"assign_event","","",129,[[],["voiceassignment",4]]],[10,"find_active_voice","","",129,[[],["option",4]]],[10,"find_idle_voice","","",129,[[]]],[8,"EventDispatcher","","",null,null],[11,"dispatch_event","","",130,[[]]],[8,"ContextualEventDispatcher","","",null,null],[11,"dispatch_contextual_event","","Dispatch an event to the voice or voices that should…",131,[[]]],[0,"vecstorage","rsynth","Re-exports from the `vecstorage` crate.",null,null],[3,"VecStorage","rsynth::vecstorage","Re-usable memory for creating a vector of references.",null,null],[8,"AudioHandlerMeta","rsynth","Define the maximum number of audio inputs and the maximum…",null,null],[10,"max_number_of_audio_inputs","","The maximum number of audio inputs supported. This method…",132,[[]]],[10,"max_number_of_audio_outputs","","The maximum number of audio outputs supported. This method…",132,[[]]],[8,"AudioHandler","","Define how sample-rate changes are handled.",null,null],[10,"set_sample_rate","","Called when the sample-rate changes. The backend should…",133,[[]]],[8,"MidiHandlerMeta","","Define the maximum number of midi inputs and the maximum…",null,null],[10,"max_number_of_midi_inputs","","The maximum number of midi inputs supported. This method…",134,[[]]],[10,"max_number_of_midi_outputs","","The maximum number of midi outputs supported. This method…",134,[[]]],[8,"AudioRenderer","","Defines how audio is rendered.",null,null],[10,"render_buffer","","This method is called repeatedly for subsequent audio…",135,[[["audiobufferinout",3]]]],[8,"ContextualAudioRenderer","","Defines how audio is rendered, similar to the…",null,null],[10,"render_buffer","","This method called repeatedly for subsequent buffers.",136,[[["audiobufferinout",3]]]],[8,"CommonPluginMeta","","Provides common meta-data of the plugin or application to…",null,null],[10,"name","","The name of the plugin or application.",137,[[]]],[8,"CommonAudioPortMeta","","Provides some meta-data of the audio-ports used by the…",null,null],[11,"audio_input_name","","The name of the audio input with the given index. You can…",138,[[],["string",3]]],[11,"input_name","","The name of the audio input with the given index. You can…",138,[[],[["error",3],["result",4]]]],[11,"audio_output_name","","The name of the audio output with the given index. You can…",138,[[],["string",3]]],[11,"output_name","","The name of the audio output with the given index. You can…",138,[[],[["error",3],["result",4]]]],[8,"CommonMidiPortMeta","","Provides some meta-data of the midi-ports used by the…",null,null],[11,"midi_input_name","","The name of the midi input with the given index. You can…",139,[[],["string",3]]],[11,"input_name","","The name of the midi input with the given index. You can…",139,[[],[["error",3],["result",4]]]],[11,"midi_output_name","","The name of the midi output with the given index. You can…",139,[[],["string",3]]],[11,"output_name","","The name of the midi output with the given index. You can…",139,[[],[["error",3],["result",4]]]],[14,"audio_chunk","","Create an audio chunk. ## Example `// Create an audio…",null,null],[14,"vst_init","","A wrapper around the `plugin_main!` macro from the `vst`…",null,null],[11,"from","rsynth::buffer","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from_sample_","","",0,[[]]],[11,"to_sample_","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from_sample_","","",1,[[]]],[11,"to_sample_","","",1,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"into_iter","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from_sample_","","",140,[[]]],[11,"to_sample_","","",140,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from_sample_","","",2,[[]]],[11,"to_sample_","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from_sample_","","",3,[[]]],[11,"to_sample_","","",3,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"into_iter","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from_sample_","","",141,[[]]],[11,"to_sample_","","",141,[[]]],[11,"from","rsynth::backend::combined","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from_sample_","","",47,[[]]],[11,"to_sample_","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from_sample_","","",48,[[]]],[11,"to_sample_","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from_sample_","","",49,[[]]],[11,"to_sample_","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"into_iter","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from_sample_","","",50,[[]]],[11,"to_sample_","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from_sample_","","",51,[[]]],[11,"to_sample_","","",51,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from_sample_","","",4,[[]]],[11,"to_sample_","","",4,[[]]],[11,"from","rsynth::backend::combined::dummy","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from_sample_","","",5,[[]]],[11,"to_sample_","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from_sample_","","",6,[[]]],[11,"to_sample_","","",6,[[]]],[11,"from","rsynth::backend::combined::hound","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from_sample_","","",8,[[]]],[11,"to_sample_","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from_sample_","","",9,[[]]],[11,"to_sample_","","",9,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from_sample_","","",7,[[]]],[11,"to_sample_","","",7,[[]]],[11,"from","rsynth::backend::combined::memory","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from_sample_","","",10,[[]]],[11,"to_sample_","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from_sample_","","",11,[[]]],[11,"to_sample_","","",11,[[]]],[11,"from","rsynth::backend::combined::midly","",43,[[]]],[11,"into","","",43,[[]]],[11,"into_iter","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from_sample_","","",43,[[]]],[11,"to_sample_","","",43,[[]]],[11,"from","rsynth::backend::combined::midly::midly::io","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from_sample_","","",142,[[]]],[11,"to_sample_","","",142,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from_sample_","","",143,[[]]],[11,"to_sample_","","",143,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from_sample_","","",14,[[]]],[11,"to_sample_","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from_sample_","","",15,[[]]],[11,"to_sample_","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from_sample_","","",16,[[]]],[11,"to_sample_","","",16,[[]]],[11,"from","rsynth::backend::combined::midly::midly::live","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from_sample_","","",17,[[]]],[11,"to_sample_","","",17,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from_sample_","","",19,[[]]],[11,"to_sample_","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from_sample_","","",20,[[]]],[11,"to_sample_","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from_sample_","","",21,[[]]],[11,"to_sample_","","",21,[[]]],[11,"from","rsynth::backend::combined::midly::midly::stream","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from_sample_","","",144,[[]]],[11,"to_sample_","","",144,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from_sample_","","",145,[[]]],[11,"to_sample_","","",145,[[]]],[11,"from","rsynth::backend::combined::midly::midly::num","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"to_string","","",146,[[],["string",3]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from_sample_","","",146,[[]]],[11,"to_sample_","","",146,[[]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"to_string","","",147,[[],["string",3]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from_sample_","","",147,[[]]],[11,"to_sample_","","",147,[[]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"to_string","","",148,[[],["string",3]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from_sample_","","",148,[[]]],[11,"to_sample_","","",148,[[]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"to_owned","","",149,[[]]],[11,"clone_into","","",149,[[]]],[11,"to_string","","",149,[[],["string",3]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from_sample_","","",149,[[]]],[11,"to_sample_","","",149,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"to_string","","",150,[[],["string",3]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from_sample_","","",150,[[]]],[11,"to_sample_","","",150,[[]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"to_string","","",151,[[],["string",3]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from_sample_","","",151,[[]]],[11,"to_sample_","","",151,[[]]],[11,"from","rsynth::backend::combined::midly::midly","",152,[[]]],[11,"into","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from_sample_","","",152,[[]]],[11,"to_sample_","","",152,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from_sample_","","",23,[[]]],[11,"to_sample_","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from_sample_","","",24,[[]]],[11,"to_sample_","","",24,[[]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"to_string","","",153,[[],["string",3]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from_sample_","","",153,[[]]],[11,"to_sample_","","",153,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"to_string","","",25,[[],["string",3]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from_sample_","","",25,[[]]],[11,"to_sample_","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from_sample_","","",26,[[]]],[11,"to_sample_","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from_sample_","","",27,[[]]],[11,"to_sample_","","",27,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from_sample_","","",35,[[]]],[11,"to_sample_","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from_sample_","","",36,[[]]],[11,"to_sample_","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from_sample_","","",37,[[]]],[11,"to_sample_","","",37,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from_sample_","","",39,[[]]],[11,"to_sample_","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from_sample_","","",40,[[]]],[11,"to_sample_","","",40,[[]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from_sample_","","",154,[[]]],[11,"to_sample_","","",154,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from_sample_","","",41,[[]]],[11,"to_sample_","","",41,[[]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"into_iter","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from_sample_","","",155,[[]]],[11,"to_sample_","","",155,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"into_iter","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from_sample_","","",156,[[]]],[11,"to_sample_","","",156,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from_sample_","","",42,[[]]],[11,"to_sample_","","",42,[[]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"into_iter","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from_sample_","","",157,[[]]],[11,"to_sample_","","",157,[[]]],[11,"from","rsynth::backend::jack_backend","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from_sample_","","",61,[[]]],[11,"to_sample_","","",61,[[]]],[11,"from","rsynth::backend::jack_backend::jack","",158,[[]]],[11,"into","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from_sample_","","",158,[[]]],[11,"to_sample_","","",158,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from_sample_","","",159,[[]]],[11,"to_sample_","","",159,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from_sample_","","",160,[[]]],[11,"to_sample_","","",160,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from_sample_","","",161,[[]]],[11,"to_sample_","","",161,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from_sample_","","",52,[[]]],[11,"to_sample_","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from_sample_","","",53,[[]]],[11,"to_sample_","","",53,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from_sample_","","",162,[[]]],[11,"to_sample_","","",162,[[]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from_sample_","","",163,[[]]],[11,"to_sample_","","",163,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from_sample_","","",56,[[]]],[11,"to_sample_","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from_sample_","","",57,[[]]],[11,"to_sample_","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from_sample_","","",58,[[]]],[11,"to_sample_","","",58,[[]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from_sample_","","",164,[[]]],[11,"to_sample_","","",164,[[]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from_sample_","","",165,[[]]],[11,"to_sample_","","",165,[[]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from_sample_","","",166,[[]]],[11,"to_sample_","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"into_iter","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from_sample_","","",167,[[]]],[11,"to_sample_","","",167,[[]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from_sample_","","",168,[[]]],[11,"to_sample_","","",168,[[]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from_sample_","","",169,[[]]],[11,"to_sample_","","",169,[[]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from_sample_","","",170,[[]]],[11,"to_sample_","","",170,[[]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from_sample_","","",171,[[]]],[11,"to_sample_","","",171,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from_sample_","","",60,[[]]],[11,"to_sample_","","",60,[[]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from_sample_","","",172,[[]]],[11,"to_sample_","","",172,[[]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from_sample_","","",173,[[]]],[11,"to_sample_","","",173,[[]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from_sample_","","",174,[[]]],[11,"to_sample_","","",174,[[]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from_sample_","","",175,[[]]],[11,"to_sample_","","",175,[[]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from_sample_","","",176,[[]]],[11,"to_sample_","","",176,[[]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from_sample_","","",177,[[]]],[11,"to_sample_","","",177,[[]]],[11,"from","rsynth::backend::vst_backend","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from_sample_","","",100,[[]]],[11,"to_sample_","","",100,[[]]],[11,"from","rsynth::backend::vst_backend::vst::api","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from_sample_","","",62,[[]]],[11,"to_sample_","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from_sample_","","",63,[[]]],[11,"to_sample_","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from_sample_","","",64,[[]]],[11,"to_sample_","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from_sample_","","",65,[[]]],[11,"to_sample_","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from_sample_","","",66,[[]]],[11,"to_sample_","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from_sample_","","",67,[[]]],[11,"to_sample_","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from_sample_","","",68,[[]]],[11,"to_sample_","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from_sample_","","",69,[[]]],[11,"to_sample_","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from_sample_","","",70,[[]]],[11,"to_sample_","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from_sample_","","",71,[[]]],[11,"to_sample_","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from_sample_","","",72,[[]]],[11,"to_sample_","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from_sample_","","",73,[[]]],[11,"to_sample_","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from_sample_","","",74,[[]]],[11,"to_sample_","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from_sample_","","",75,[[]]],[11,"to_sample_","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from_sample_","","",76,[[]]],[11,"to_sample_","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from_sample_","","",77,[[]]],[11,"to_sample_","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from_sample_","","",78,[[]]],[11,"to_sample_","","",78,[[]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from_sample_","","",178,[[]]],[11,"to_sample_","","",178,[[]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from_sample_","","",179,[[]]],[11,"to_sample_","","",179,[[]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from_sample_","","",180,[[]]],[11,"to_sample_","","",180,[[]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from_sample_","","",181,[[]]],[11,"to_sample_","","",181,[[]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from_sample_","","",182,[[]]],[11,"to_sample_","","",182,[[]]],[11,"from","rsynth::backend::vst_backend::vst::buffer","",183,[[]]],[11,"into","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from_sample_","","",183,[[]]],[11,"to_sample_","","",183,[[]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"into_iter","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from_sample_","","",184,[[]]],[11,"to_sample_","","",184,[[]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"into_iter","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from_sample_","","",185,[[]]],[11,"to_sample_","","",185,[[]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"into_iter","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from_sample_","","",186,[[]]],[11,"to_sample_","","",186,[[]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from_sample_","","",187,[[]]],[11,"to_sample_","","",187,[[]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"into_iter","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from_sample_","","",188,[[]]],[11,"to_sample_","","",188,[[]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from_sample_","","",189,[[]]],[11,"to_sample_","","",189,[[]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",190,[[]]],[11,"into","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from_sample_","","",190,[[]]],[11,"to_sample_","","",190,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from_sample_","","",80,[[]]],[11,"to_sample_","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from_sample_","","",81,[[]]],[11,"to_sample_","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from_sample_","","",82,[[]]],[11,"to_sample_","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from_sample_","","",83,[[]]],[11,"to_sample_","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from_sample_","","",84,[[]]],[11,"to_sample_","","",84,[[]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from_sample_","","",86,[[]]],[11,"to_sample_","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from_sample_","","",87,[[]]],[11,"to_sample_","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from_sample_","","",88,[[]]],[11,"to_sample_","","",88,[[]]],[11,"from","rsynth::backend::vst_backend::vst::event","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from_sample_","","",89,[[]]],[11,"to_sample_","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from_sample_","","",90,[[]]],[11,"to_sample_","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from_sample_","","",91,[[]]],[11,"to_sample_","","",91,[[]]],[11,"from","rsynth::backend::vst_backend::vst::host","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_string","","",93,[[],["string",3]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from_sample_","","",93,[[]]],[11,"to_sample_","","",93,[[]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from_sample_","","",191,[[]]],[11,"to_sample_","","",191,[[]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from_sample_","","",192,[[]]],[11,"to_sample_","","",192,[[]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from_sample_","","",193,[[]]],[11,"to_sample_","","",193,[[]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from_sample_","","",94,[[]]],[11,"to_sample_","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from_sample_","","",95,[[]]],[11,"to_sample_","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from_sample_","","",96,[[]]],[11,"to_sample_","","",96,[[]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"to_owned","","",194,[[]]],[11,"clone_into","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from_sample_","","",194,[[]]],[11,"to_sample_","","",194,[[]]],[11,"from","rsynth::backend::vst_backend::vst::util","",195,[[]]],[11,"into","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from_sample_","","",195,[[]]],[11,"to_sample_","","",195,[[]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from_sample_","","",196,[[]]],[11,"to_sample_","","",196,[[]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"into_iter","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from_sample_","","",197,[[]]],[11,"to_sample_","","",197,[[]]],[11,"from","rsynth::envelope","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from_sample_","","",102,[[]]],[11,"to_sample_","","",102,[[]]],[11,"from","rsynth::envelope::staircase_envelope","",198,[[]]],[11,"into","","",198,[[]]],[11,"into_iter","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from_sample_","","",198,[[]]],[11,"to_sample_","","",198,[[]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from_sample_","","",199,[[]]],[11,"to_sample_","","",199,[[]]],[11,"from","rsynth::event","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from_sample_","","",113,[[]]],[11,"to_sample_","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from_sample_","","",114,[[]]],[11,"to_sample_","","",114,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from_sample_","","",104,[[]]],[11,"to_sample_","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from_sample_","","",105,[[]]],[11,"to_sample_","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from_sample_","","",106,[[]]],[11,"to_sample_","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"to_string","","",107,[[],["string",3]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from_sample_","","",107,[[]]],[11,"to_sample_","","",107,[[]]],[11,"from","rsynth::event::event_queue","",110,[[]]],[11,"into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from_sample_","","",110,[[]]],[11,"to_sample_","","",110,[[]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from_sample_","","",200,[[]]],[11,"to_sample_","","",200,[[]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from_sample_","","",201,[[]]],[11,"to_sample_","","",201,[[]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from_sample_","","",202,[[]]],[11,"to_sample_","","",202,[[]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from_sample_","","",203,[[]]],[11,"to_sample_","","",203,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from_sample_","","",108,[[]]],[11,"to_sample_","","",108,[[]]],[11,"from","rsynth::meta","",204,[[]]],[11,"into","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from_sample_","","",204,[[]]],[11,"to_sample_","","",204,[[]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from_sample_","","",205,[[]]],[11,"to_sample_","","",205,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from_sample_","","",115,[[]]],[11,"to_sample_","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from_sample_","","",116,[[]]],[11,"to_sample_","","",116,[[]]],[11,"from","rsynth::test_utilities","",206,[[]]],[11,"into","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from_sample_","","",206,[[]]],[11,"to_sample_","","",206,[[]]],[11,"max_number_of_audio_inputs","","",121,[[]]],[11,"max_number_of_audio_outputs","","",121,[[]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from_sample_","","",121,[[]]],[11,"to_sample_","","",121,[[]]],[11,"from","rsynth::utilities::polyphony","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from_sample_","","",122,[[]]],[11,"to_sample_","","",122,[[]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from_sample_","","",207,[[]]],[11,"to_sample_","","",207,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from_sample_","","",123,[[]]],[11,"to_sample_","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from_sample_","","",124,[[]]],[11,"to_sample_","","",124,[[]]],[11,"from","rsynth::utilities::polyphony::simple_event_dispatching","",126,[[]]],[11,"into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from_sample_","","",126,[[]]],[11,"to_sample_","","",126,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from_sample_","","",125,[[]]],[11,"to_sample_","","",125,[[]]],[11,"from","rsynth::vecstorage","",208,[[]]],[11,"into","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from_sample_","","",208,[[]]],[11,"to_sample_","","",208,[[]]],[11,"drop","","",208,[[]]],[11,"fmt","","",208,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","rsynth::backend::combined::midly::midly::live","",21,[[["systemrealtime",4]]]],[11,"ne","","",21,[[["systemrealtime",4]]]],[11,"eq","","",19,[[["systemcommon",4]]]],[11,"ne","","",19,[[["systemcommon",4]]]],[11,"eq","rsynth::backend::combined::midly::midly","",24,[[["smfbytemap",3]]]],[11,"ne","","",24,[[["smfbytemap",3]]]],[11,"eq","","",41,[[["timing",4]]]],[11,"ne","","",41,[[["timing",4]]]],[11,"eq","","",40,[[["fps",4]]]],[11,"eq","rsynth::backend::combined::midly::midly::num","",148,[[["u24",3]]]],[11,"ne","","",148,[[["u24",3]]]],[11,"eq","rsynth::backend::combined::midly::midly","",27,[[["midimessage",4]]]],[11,"ne","","",27,[[["midimessage",4]]]],[11,"eq","rsynth::backend::combined::midly::midly::num","",146,[[["u14",3]]]],[11,"ne","","",146,[[["u14",3]]]],[11,"eq","rsynth::backend::combined::midly::midly","",39,[[["format",4]]]],[11,"eq","rsynth::backend::combined::midly::midly::num","",149,[[["u28",3]]]],[11,"ne","","",149,[[["u28",3]]]],[11,"eq","rsynth::backend::combined::midly::midly","",42,[[["header",3]]]],[11,"ne","","",42,[[["header",3]]]],[11,"eq","","",37,[[["trackeventkind",4]]]],[11,"ne","","",37,[[["trackeventkind",4]]]],[11,"eq","","",23,[[["smf",3]]]],[11,"ne","","",23,[[["smf",3]]]],[11,"eq","","",35,[[["pitchbend",3]]]],[11,"ne","","",35,[[["pitchbend",3]]]],[11,"eq","","",36,[[["trackevent",3]]]],[11,"ne","","",36,[[["trackevent",3]]]],[11,"eq","rsynth::backend::combined::midly::midly::num","",151,[[["u7",3]]]],[11,"ne","","",151,[[["u7",3]]]],[11,"eq","rsynth::backend::combined::midly::midly","",154,[[["smptetime",3]]]],[11,"ne","","",154,[[["smptetime",3]]]],[11,"eq","rsynth::backend::combined::midly::midly::live","",20,[[["mtcquarterframemessage",4]]]],[11,"eq","","",17,[[["liveevent",4]]]],[11,"ne","","",17,[[["liveevent",4]]]],[11,"eq","rsynth::backend::combined::midly::midly::num","",150,[[["u4",3]]]],[11,"ne","","",150,[[["u4",3]]]],[11,"eq","rsynth::backend::combined::midly::midly","",26,[[["metamessage",4]]]],[11,"ne","","",26,[[["metamessage",4]]]],[11,"eq","rsynth::backend::combined::midly::midly::num","",147,[[["u15",3]]]],[11,"ne","","",147,[[["u15",3]]]],[11,"clone","","",147,[[],["u15",3]]],[11,"clone","rsynth::backend::combined::midly::midly::io","",142,[[],["notseekable",3]]],[11,"clone","","",15,[[],["iowrap",3]]],[11,"clone","rsynth::backend::combined::midly::midly::stream","",144,[[],["midistream",3]]],[11,"clone","rsynth::backend::combined::midly::midly::num","",150,[[],["u4",3]]],[11,"clone","rsynth::backend::combined::midly::midly::live","",17,[[],["liveevent",4]]],[11,"clone","rsynth::backend::combined::midly::midly::io","",14,[[],["cursorerror",4]]],[11,"clone","rsynth::backend::combined::midly::midly::live","",20,[[],["mtcquarterframemessage",4]]],[11,"clone","rsynth::backend::combined::midly::midly","",39,[[],["format",4]]],[11,"clone","","",156,[[],["eventiter",3]]],[11,"clone","rsynth::backend::combined::midly::midly::num","",151,[[],["u7",3]]],[11,"clone","rsynth::backend::combined::midly::midly","",42,[[],["header",3]]],[11,"clone","","",26,[[],["metamessage",4]]],[11,"clone","","",157,[[],["trackiter",3]]],[11,"clone","rsynth::backend::combined::midly::midly::num","",148,[[],["u24",3]]],[11,"clone","rsynth::backend::combined::midly::midly","",27,[[],["midimessage",4]]],[11,"clone","","",36,[[],["trackevent",3]]],[11,"clone","","",153,[[],["error",3]]],[11,"clone","","",154,[[],["smptetime",3]]],[11,"clone","","",41,[[],["timing",4]]],[11,"clone","rsynth::backend::combined::midly::midly::io","",16,[[],["seekablewrap",3]]],[11,"clone","rsynth::backend::combined::midly::midly","",25,[[],["errorkind",4]]],[11,"clone","","",35,[[],["pitchbend",3]]],[11,"clone","","",40,[[],["fps",4]]],[11,"clone","rsynth::backend::combined::midly::midly::stream","",145,[[],["defaultbuffer",3]]],[11,"clone","rsynth::backend::combined::midly::midly::num","",149,[[],["u28",3]]],[11,"clone","rsynth::backend::combined::midly::midly","",24,[[],["smfbytemap",3]]],[11,"clone","rsynth::backend::combined::midly::midly::live","",19,[[],["systemcommon",4]]],[11,"clone","rsynth::backend::combined::midly::midly","",155,[[],["eventbytemapiter",3]]],[11,"clone","","",23,[[],["smf",3]]],[11,"clone","rsynth::backend::combined::midly::midly::live","",21,[[],["systemrealtime",4]]],[11,"clone","rsynth::backend::combined::midly::midly","",37,[[],["trackeventkind",4]]],[11,"clone","rsynth::backend::combined::midly::midly::num","",146,[[],["u14",3]]],[11,"tell","rsynth::backend::combined::midly::midly::io","",143,[[],["result",4]]],[11,"write_at","","",143,[[],["result",4]]],[11,"tell","","",16,[[],[["error",3],["result",4]]]],[11,"write_at","","",16,[[],[["result",4],["error",3]]]],[11,"tell","","",142,[[],["result",4]]],[11,"write_at","","",142,[[],["result",4]]],[11,"write","","",15,[[],[["result",4],["error",3]]]],[11,"invalid_input","","",15,[[],["error",3]]],[11,"write","","",16,[[],[["result",4],["error",3]]]],[11,"invalid_input","","",16,[[],["error",3]]],[11,"make_seekable","","",16,[[],[["option",4],["seekablewrap",3]]]],[11,"write","","",142,[[],["result",4]]],[11,"invalid_input","","",142,[[]]],[11,"write","","",143,[[],["result",4]]],[11,"invalid_input","","",143,[[],["cursorerror",4]]],[11,"make_seekable","","",143,[[],[["option",4],["cursor",3]]]],[11,"push","rsynth::backend::combined::midly::midly::stream","",145,[[],["result",4]]],[11,"clear","","",145,[[]]],[11,"as_slice","","",145,[[]]],[11,"drop","rsynth::backend::combined::midly::midly","",152,[[]]],[11,"fmt","rsynth::backend::combined::midly::midly::live","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::stream","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::io","",142,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",143,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",147,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::live","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",150,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::live","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::live","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::io","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::io","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",148,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","rsynth::backend::combined::midly::midly::num","",146,[[],["u14",3]]],[11,"default","rsynth::backend::combined::midly::midly::io","",15,[[],["iowrap",3]]],[11,"default","rsynth::backend::combined::midly::midly::num","",151,[[],["u7",3]]],[11,"default","rsynth::backend::combined::midly::midly::io","",16,[[],["seekablewrap",3]]],[11,"default","rsynth::backend::combined::midly::midly::num","",148,[[],["u24",3]]],[11,"default","","",147,[[],["u15",3]]],[11,"default","rsynth::backend::combined::midly::midly::stream","",144,[[],["midistream",3]]],[11,"default","rsynth::backend::combined::midly::midly","",152,[[],["arena",3]]],[11,"default","rsynth::backend::combined::midly::midly::num","",149,[[],["u28",3]]],[11,"default","rsynth::backend::combined::midly::midly::stream","",145,[[],["defaultbuffer",3]]],[11,"default","rsynth::backend::combined::midly::midly::num","",150,[[],["u4",3]]],[11,"source","rsynth::backend::combined::midly::midly","",153,[[],[["error",8],["option",4]]]],[11,"hash","rsynth::backend::combined::midly::midly::num","",147,[[]]],[11,"hash","rsynth::backend::combined::midly::midly","",39,[[]]],[11,"hash","","",36,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::num","",150,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::live","",19,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::stream","",145,[[]]],[11,"hash","rsynth::backend::combined::midly::midly","",37,[[]]],[11,"hash","","",26,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::num","",151,[[]]],[11,"hash","rsynth::backend::combined::midly::midly","",42,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::num","",146,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::live","",20,[[]]],[11,"hash","","",17,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::num","",149,[[]]],[11,"hash","rsynth::backend::combined::midly::midly","",41,[[]]],[11,"hash","","",24,[[]]],[11,"hash","","",23,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::live","",21,[[]]],[11,"hash","rsynth::backend::combined::midly::midly","",40,[[]]],[11,"hash","","",154,[[]]],[11,"hash","","",35,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::num","",148,[[]]],[11,"hash","rsynth::backend::combined::midly::midly","",27,[[]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",147,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",150,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",148,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","","",156,[[],["option",4]]],[11,"size_hint","","",157,[[]]],[11,"next","","",157,[[],[["result",4],["option",4]]]],[11,"next","","",155,[[],["option",4]]],[11,"from","","",153,[[["errorkind",4]],["error",3]]],[11,"from","rsynth::backend::combined::midly::midly::num","Lossy convertion, loses top bit.",147,[[],["u15",3]]],[11,"from","","Lossy convertion, loses top bit.",151,[[],["u7",3]]],[11,"from","","Lossy convertion, loses top bit.",146,[[],["u14",3]]],[11,"from","","Lossy convertion, loses top bit.",150,[[],["u4",3]]],[11,"from","","Lossy convertion, loses top bit.",148,[[],["u24",3]]],[11,"from","","Lossy convertion, loses top bit.",149,[[],["u28",3]]],[11,"partial_cmp","","",151,[[["u7",3]],[["ordering",4],["option",4]]]],[11,"lt","","",151,[[["u7",3]]]],[11,"le","","",151,[[["u7",3]]]],[11,"gt","","",151,[[["u7",3]]]],[11,"ge","","",151,[[["u7",3]]]],[11,"partial_cmp","","",149,[[["u28",3]],[["ordering",4],["option",4]]]],[11,"lt","","",149,[[["u28",3]]]],[11,"le","","",149,[[["u28",3]]]],[11,"gt","","",149,[[["u28",3]]]],[11,"ge","","",149,[[["u28",3]]]],[11,"partial_cmp","","",148,[[["u24",3]],[["ordering",4],["option",4]]]],[11,"lt","","",148,[[["u24",3]]]],[11,"le","","",148,[[["u24",3]]]],[11,"gt","","",148,[[["u24",3]]]],[11,"ge","","",148,[[["u24",3]]]],[11,"partial_cmp","","",146,[[["u14",3]],[["ordering",4],["option",4]]]],[11,"lt","","",146,[[["u14",3]]]],[11,"le","","",146,[[["u14",3]]]],[11,"gt","","",146,[[["u14",3]]]],[11,"ge","","",146,[[["u14",3]]]],[11,"partial_cmp","","",147,[[["u15",3]],[["ordering",4],["option",4]]]],[11,"lt","","",147,[[["u15",3]]]],[11,"le","","",147,[[["u15",3]]]],[11,"gt","","",147,[[["u15",3]]]],[11,"ge","","",147,[[["u15",3]]]],[11,"partial_cmp","","",150,[[["u4",3]],[["ordering",4],["option",4]]]],[11,"lt","","",150,[[["u4",3]]]],[11,"le","","",150,[[["u4",3]]]],[11,"gt","","",150,[[["u4",3]]]],[11,"ge","","",150,[[["u4",3]]]],[11,"cmp","","",150,[[["u4",3]],["ordering",4]]],[11,"cmp","","",148,[[["u24",3]],["ordering",4]]],[11,"cmp","","",151,[[["u7",3]],["ordering",4]]],[11,"cmp","","",149,[[["u28",3]],["ordering",4]]],[11,"cmp","","",146,[[["u14",3]],["ordering",4]]],[11,"cmp","","",147,[[["u15",3]],["ordering",4]]],[11,"process","rsynth::backend::jack_backend::jack","",52,[[["processscope",3],["client",3]],["control",4]]],[11,"bitor","","Returns the union of the two sets of flags.",160,[[["clientoptions",3]],["clientoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",171,[[["portflags",3]],["portflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",161,[[["clientstatus",3]],["clientstatus",3]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"drop","","Deactivate and close the client.",158,[[]]],[11,"drop","","",176,[[]]],[11,"drop","","",159,[[]]],[11,"drop","","",175,[[]]],[11,"drop","","",177,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",160,[[["clientoptions",3]],["clientoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",171,[[["portflags",3]],["portflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",161,[[["clientstatus",3]],["clientstatus",3]]],[11,"bitor_assign","","Adds the set of flags.",161,[[["clientstatus",3]]]],[11,"bitor_assign","","Adds the set of flags.",160,[[["clientoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",171,[[["portflags",3]]]],[11,"initialize","","",174,[[["port_type_size",3]]]],[11,"initialize","","",163,[[["client_name_size",3]]]],[11,"initialize","","",173,[[["port_name_size",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",171,[[["portflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",160,[[["clientoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",161,[[["clientstatus",3]]]],[11,"extend","","",160,[[]]],[11,"extend","","",161,[[]]],[11,"extend","","",171,[[]]],[11,"deref","","",174,[[]]],[11,"deref","","",173,[[]]],[11,"deref","","",163,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",161,[[["clientstatus",3]],["clientstatus",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",160,[[["clientoptions",3]],["clientoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",171,[[["portflags",3]],["portflags",3]]],[11,"cmp","","",170,[[["port",3]],["ordering",4]]],[11,"cmp","","",171,[[["portflags",3]],["ordering",4]]],[11,"cmp","","",161,[[["clientstatus",3]],["ordering",4]]],[11,"cmp","","",160,[[["clientoptions",3]],["ordering",4]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",171,[[["portflags",3]]]],[11,"ne","","",171,[[["portflags",3]]]],[11,"eq","","",57,[[["error",4]]]],[11,"ne","","",57,[[["error",4]]]],[11,"eq","","",170,[[["port",3]]]],[11,"eq","","",60,[[["rawmidi",3]]]],[11,"ne","","",60,[[["rawmidi",3]]]],[11,"eq","","",56,[[["control",4]]]],[11,"eq","","",53,[[["cycletimes",3]]]],[11,"ne","","",53,[[["cycletimes",3]]]],[11,"eq","","",160,[[["clientoptions",3]]]],[11,"ne","","",160,[[["clientoptions",3]]]],[11,"eq","","",161,[[["clientstatus",3]]]],[11,"ne","","",161,[[["clientstatus",3]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",57,[[],["error",4]]],[11,"clone","","",56,[[],["control",4]]],[11,"clone","","",165,[[],["audioout",3]]],[11,"clone","","",160,[[],["clientoptions",3]]],[11,"clone","","",170,[[],[["port",3],["unowned",3]]]],[11,"clone","","",161,[[],["clientstatus",3]]],[11,"clone","","",164,[[],["audioin",3]]],[11,"clone","","",166,[[],["midiin",3]]],[11,"clone","","",167,[[],["midiiter",3]]],[11,"clone","","",171,[[],["portflags",3]]],[11,"clone","","",60,[[],["rawmidi",3]]],[11,"clone","","",53,[[],["cycletimes",3]]],[11,"clone","","",58,[[],["latencytype",4]]],[11,"clone","","",168,[[],["midiout",3]]],[11,"from_iter","","",160,[[],["clientoptions",3]]],[11,"from_iter","","",171,[[],["portflags",3]]],[11,"from_iter","","",161,[[],["clientstatus",3]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",169,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"not","","Returns the complement of this set of flags.",161,[[],["clientstatus",3]]],[11,"not","","Returns the complement of this set of flags.",171,[[],["portflags",3]]],[11,"not","","Returns the complement of this set of flags.",160,[[],["clientoptions",3]]],[11,"default","","",60,[[],["rawmidi",3]]],[11,"default","","",166,[[],["midiin",3]]],[11,"default","","",168,[[],["midiout",3]]],[11,"default","","",165,[[],["audioout",3]]],[11,"default","","",56,[[],["control",4]]],[11,"default","","",172,[[],["unowned",3]]],[11,"default","","",164,[[],["audioin",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",161,[[["clientstatus",3]],["clientstatus",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",171,[[["portflags",3]],["portflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",160,[[["clientoptions",3]],["clientoptions",3]]],[11,"hash","","",171,[[]]],[11,"hash","","",170,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",161,[[]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"jack_port_type","","",164,[[]]],[11,"jack_flags","","",164,[[],["portflags",3]]],[11,"jack_buffer_size","","",164,[[]]],[11,"jack_port_type","","",165,[[]]],[11,"jack_flags","","",165,[[],["portflags",3]]],[11,"jack_buffer_size","","",165,[[]]],[11,"jack_port_type","","Panics on call since the `Unowned` spec can\'t be used to…",172,[[]]],[11,"jack_flags","","Panics on call since the `Unowned` spec can\'t be used to…",172,[[],["portflags",3]]],[11,"jack_buffer_size","","Panics on call since the `Unowned` spec can\'t be used to…",172,[[]]],[11,"jack_port_type","","",168,[[]]],[11,"jack_flags","","",168,[[],["portflags",3]]],[11,"jack_buffer_size","","",168,[[]]],[11,"jack_port_type","","",166,[[]]],[11,"jack_flags","","",166,[[],["portflags",3]]],[11,"jack_buffer_size","","",166,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",160,[[["clientoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",171,[[["portflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",161,[[["clientstatus",3]]]],[11,"next","","",167,[[],["option",4]]],[11,"size_hint","","",167,[[]]],[11,"count","","",167,[[]]],[11,"last","","",167,[[],["option",4]]],[11,"nth","","",167,[[],["option",4]]],[11,"read","","",176,[[],[["error",3],["result",4]]]],[11,"partial_cmp","","",170,[[["port",3]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",160,[[["clientoptions",3]],[["ordering",4],["option",4]]]],[11,"lt","","",160,[[["clientoptions",3]]]],[11,"le","","",160,[[["clientoptions",3]]]],[11,"gt","","",160,[[["clientoptions",3]]]],[11,"ge","","",160,[[["clientoptions",3]]]],[11,"partial_cmp","","",161,[[["clientstatus",3]],[["ordering",4],["option",4]]]],[11,"lt","","",161,[[["clientstatus",3]]]],[11,"le","","",161,[[["clientstatus",3]]]],[11,"gt","","",161,[[["clientstatus",3]]]],[11,"ge","","",161,[[["clientstatus",3]]]],[11,"partial_cmp","","",171,[[["portflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",171,[[["portflags",3]]]],[11,"le","","",171,[[["portflags",3]]]],[11,"gt","","",171,[[["portflags",3]]]],[11,"ge","","",171,[[["portflags",3]]]],[11,"write","","",177,[[],[["error",3],["result",4]]]],[11,"flush","","",177,[[],[["result",4],["error",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",171,[[["portflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",161,[[["clientstatus",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",160,[[["clientoptions",3]]]],[11,"bitor","rsynth::backend::vst_backend::vst::api","Returns the union of the two sets of flags.",182,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",179,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",181,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",178,[[["channelflags",3]],["channelflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",180,[[["modifierkey",3]],["modifierkey",3]]],[11,"fmt","","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"drop","rsynth::backend::vst_backend::vst::host","",192,[[]]],[11,"bitxor","rsynth::backend::vst_backend::vst::api","Returns the left flags, but with all the right flags…",178,[[["channelflags",3]],["channelflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",179,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",182,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",181,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",180,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",180,[[["modifierkey",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",181,[[["midieventflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",182,[[["timeinfoflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",179,[[["pluginflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",178,[[["channelflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",179,[[["pluginflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",181,[[["midieventflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",182,[[["timeinfoflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",178,[[["channelflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",180,[[["modifierkey",3]]]],[11,"extend","","",181,[[]]],[11,"extend","","",180,[[]]],[11,"extend","","",178,[[]]],[11,"extend","","",179,[[]]],[11,"extend","","",182,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",87,[[]]],[11,"into","","",87,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",94,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",88,[[]]],[11,"into","rsynth::backend::vst_backend::vst::channels","Convert to the VST api equivalent of this structure.",190,[[],["channelproperties",3]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",87,[[]]],[11,"into","","",88,[[]]],[11,"into","","",88,[[]]],[11,"into","","",88,[[]]],[11,"into","","",87,[[]]],[11,"into","","",87,[[]]],[11,"into","","",88,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",96,[[],["string",3]]],[11,"into","","",94,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",88,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",94,[[]]],[11,"into","","",94,[[]]],[11,"into","rsynth::backend::vst_backend::vst::api","Convert to integer ordinal for interop with VST api.",65,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",94,[[]]],[11,"into","","",94,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",87,[[]]],[11,"into","","",87,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",94,[[]]],[11,"into","rsynth::backend::vst_backend::vst::channels","Convert to VST API arrangement type.",84,[[],["speakerarrangementtype",4]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",87,[[]]],[11,"into","","",88,[[]]],[11,"into","","",88,[[]]],[11,"into","","",87,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",94,[[]]],[11,"into","","",94,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",87,[[]]],[11,"into","","",88,[[]]],[11,"into","","",88,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",94,[[]]],[11,"into_iter","rsynth::backend::vst_backend::vst::buffer","",185,[[]]],[11,"automate","rsynth::backend::vst_backend::vst::plugin","",194,[[]]],[11,"get_plugin_id","","",194,[[]]],[11,"idle","","",194,[[]]],[11,"get_info","","",194,[[]]],[11,"process_events","","Send events to the host.",194,[[["events",3]]]],[11,"get_time_info","","Request time information from Host.",194,[[],[["option",4],["timeinfo",3]]]],[11,"get_block_size","","Get block size.",194,[[]]],[11,"bitand","rsynth::backend::vst_backend::vst::api","Returns the intersection between the two sets of flags.",179,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",178,[[["channelflags",3]],["channelflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",182,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",181,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",180,[[["modifierkey",3]],["modifierkey",3]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",88,[[],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",94,[[],["category",4]]],[11,"from","","",94,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",87,[[],["knobmode",4]]],[11,"from","","",87,[[],["knobmode",4]]],[11,"from","","",88,[[],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",94,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",87,[[],["knobmode",4]]],[11,"from","","",87,[[],["knobmode",4]]],[11,"from","","",87,[[],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",94,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",87,[[],["knobmode",4]]],[11,"from","","",88,[[],["key",4]]],[11,"from","","",88,[[],["key",4]]],[11,"from","","",88,[[],["key",4]]],[11,"from","","",87,[[],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",84,[[["channelproperties",3]],["speakerarrangementtype",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",94,[[],["category",4]]],[11,"from","","",94,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",88,[[],["key",4]]],[11,"from","","",88,[[],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",94,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",87,[[],["knobmode",4]]],[11,"from","","",88,[[],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",94,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",87,[[],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",94,[[],["category",4]]],[11,"from","","",94,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",87,[[],["knobmode",4]]],[11,"from","","",88,[[],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",190,[[["channelproperties",3]],["channelinfo",3]]],[11,"from","rsynth::backend::vst_backend::vst::event","",89,[[["event",3]],["event",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",88,[[],["key",4]]],[11,"cmp","rsynth::backend::vst_backend::vst::api","",182,[[["timeinfoflags",3]],["ordering",4]]],[11,"cmp","","",178,[[["channelflags",3]],["ordering",4]]],[11,"cmp","","",179,[[["pluginflags",3]],["ordering",4]]],[11,"cmp","","",181,[[["midieventflags",3]],["ordering",4]]],[11,"cmp","","",180,[[["modifierkey",3]],["ordering",4]]],[11,"fmt","","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"write_into","rsynth::backend::vst_backend::vst::event","",90,[[["sysexevent",3]]]],[11,"write_into","","",89,[[["sysexevent",3]]]],[11,"write_into","","",91,[[["sysexevent",3]]]],[11,"get_info","rsynth::backend::vst_backend::vst::host","",192,[[],["info",3]]],[11,"init","","",192,[[]]],[11,"set_sample_rate","","",192,[[]]],[11,"set_block_size","","",192,[[]]],[11,"resume","","",192,[[]]],[11,"suspend","","",192,[[]]],[11,"vendor_specific","","",192,[[]]],[11,"can_do","","",192,[[["cando",4]],["supported",4]]],[11,"get_tail_size","","",192,[[]]],[11,"process","","",192,[[["audiobuffer",3]]]],[11,"process_f64","","",192,[[["audiobuffer",3]]]],[11,"process_events","","",192,[[["events",3]]]],[11,"get_input_info","","",192,[[],["channelinfo",3]]],[11,"get_output_info","","",192,[[],["channelinfo",3]]],[11,"get_parameter_object","","",192,[[],[["pluginparameters",8],["arc",3]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",178,[[["channelflags",3]]]],[11,"ne","","",178,[[["channelflags",3]]]],[11,"eq","","",179,[[["pluginflags",3]]]],[11,"ne","","",179,[[["pluginflags",3]]]],[11,"eq","","",180,[[["modifierkey",3]]]],[11,"ne","","",180,[[["modifierkey",3]]]],[11,"eq","","",182,[[["timeinfoflags",3]]]],[11,"ne","","",182,[[["timeinfoflags",3]]]],[11,"eq","","",181,[[["midieventflags",3]]]],[11,"ne","","",181,[[["midieventflags",3]]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",89,[[],["event",4]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",64,[[],["speakerarrangementtype",4]]],[11,"clone","","",74,[[],["event",3]]],[11,"clone","","",78,[[],["smpteframerate",4]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",90,[[],["midievent",3]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",86,[[],["keycode",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",77,[[],["timeinfo",3]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",94,[[],["category",4]]],[11,"clone","","",95,[[],["info",3]]],[11,"clone","","",194,[[],["hostcallback",3]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",91,[[],["sysexevent",3]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",88,[[],["key",4]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",181,[[],["midieventflags",3]]],[11,"clone","","",180,[[],["modifierkey",3]]],[11,"clone","","",179,[[],["pluginflags",3]]],[11,"clone","","",76,[[],["sysexevent",3]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",87,[[],["knobmode",4]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",182,[[],["timeinfoflags",3]]],[11,"clone","","",73,[[],["eventtype",4]]],[11,"clone","","",178,[[],["channelflags",3]]],[11,"clone","rsynth::backend::vst_backend::vst::buffer","",185,[[],["inputs",3]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index","rsynth::backend::vst_backend::vst::buffer","",185,[[]]],[11,"index","","",187,[[]]],[11,"from_iter","rsynth::backend::vst_backend::vst::api","",179,[[],["pluginflags",3]]],[11,"from_iter","","",182,[[],["timeinfoflags",3]]],[11,"from_iter","","",180,[[],["modifierkey",3]]],[11,"from_iter","","",178,[[],["channelflags",3]]],[11,"from_iter","","",181,[[],["midieventflags",3]]],[11,"fmt","","",182,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::plugin","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",179,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",180,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::plugin","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::host","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",181,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",78,[[],["smpteframerate",4]]],[11,"default","rsynth::backend::vst_backend::vst::buffer","",189,[[],["sendeventbuffer",3]]],[11,"default","rsynth::backend::vst_backend::vst::plugin","",194,[[],["hostcallback",3]]],[11,"default","rsynth::backend::vst_backend::vst::channels","",84,[[],["speakerarrangementtype",4]]],[11,"default","rsynth::backend::vst_backend::vst::plugin","",95,[[],["info",3]]],[11,"default","rsynth::backend::vst_backend::vst::api","",77,[[],["timeinfo",3]]],[11,"default","rsynth::backend::vst_backend::vst::util","",196,[[],["parametertransfer",3]]],[11,"description","rsynth::backend::vst_backend::vst::host","",93,[[]]],[11,"sub","rsynth::backend::vst_backend::vst::api","Returns the set difference of the two sets of flags.",180,[[["modifierkey",3]],["modifierkey",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",181,[[["midieventflags",3]],["midieventflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",179,[[["pluginflags",3]],["pluginflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",182,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",178,[[["channelflags",3]],["channelflags",3]]],[11,"hash","","",178,[[]]],[11,"hash","","",181,[[]]],[11,"hash","","",180,[[]]],[11,"hash","","",182,[[]]],[11,"hash","","",179,[[]]],[11,"not","","Returns the complement of this set of flags.",178,[[],["channelflags",3]]],[11,"not","","Returns the complement of this set of flags.",179,[[],["pluginflags",3]]],[11,"not","","Returns the complement of this set of flags.",181,[[],["midieventflags",3]]],[11,"not","","Returns the complement of this set of flags.",182,[[],["timeinfoflags",3]]],[11,"not","","Returns the complement of this set of flags.",180,[[],["modifierkey",3]]],[11,"fmt","rsynth::backend::vst_backend::vst::host","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitxor_assign","rsynth::backend::vst_backend::vst::api","Toggles the set of flags.",180,[[["modifierkey",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",181,[[["midieventflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",179,[[["pluginflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",178,[[["channelflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",182,[[["timeinfoflags",3]]]],[11,"index_mut","rsynth::backend::vst_backend::vst::buffer","",187,[[]]],[11,"next","","",184,[[],["option",4]]],[11,"next","","",188,[[],["option",4]]],[11,"next","rsynth::backend::vst_backend::vst::util","",197,[[],["option",4]]],[11,"next","rsynth::backend::vst_backend::vst::buffer","",186,[[],["option",4]]],[11,"partial_cmp","rsynth::backend::vst_backend::vst::api","",181,[[["midieventflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",181,[[["midieventflags",3]]]],[11,"le","","",181,[[["midieventflags",3]]]],[11,"gt","","",181,[[["midieventflags",3]]]],[11,"ge","","",181,[[["midieventflags",3]]]],[11,"partial_cmp","","",180,[[["modifierkey",3]],[["ordering",4],["option",4]]]],[11,"lt","","",180,[[["modifierkey",3]]]],[11,"le","","",180,[[["modifierkey",3]]]],[11,"gt","","",180,[[["modifierkey",3]]]],[11,"ge","","",180,[[["modifierkey",3]]]],[11,"partial_cmp","","",179,[[["pluginflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",179,[[["pluginflags",3]]]],[11,"le","","",179,[[["pluginflags",3]]]],[11,"gt","","",179,[[["pluginflags",3]]]],[11,"ge","","",179,[[["pluginflags",3]]]],[11,"partial_cmp","","",182,[[["timeinfoflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",182,[[["timeinfoflags",3]]]],[11,"le","","",182,[[["timeinfoflags",3]]]],[11,"gt","","",182,[[["timeinfoflags",3]]]],[11,"ge","","",182,[[["timeinfoflags",3]]]],[11,"partial_cmp","","",178,[[["channelflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",178,[[["channelflags",3]]]],[11,"le","","",178,[[["channelflags",3]]]],[11,"gt","","",178,[[["channelflags",3]]]],[11,"ge","","",178,[[["channelflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",182,[[["timeinfoflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",179,[[["pluginflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",181,[[["midieventflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",180,[[["modifierkey",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",178,[[["channelflags",3]]]],[11,"number_of_channels","rsynth::backend::combined::dummy","",5,[[]]],[11,"frames_per_second","","",5,[[]]],[11,"fill_buffer","","",5,[[["audiobufferout",3]],["result",4]]],[11,"number_of_channels","rsynth::backend::combined::hound","",8,[[]]],[11,"frames_per_second","","",8,[[]]],[11,"fill_buffer","","",8,[[["audiobufferout",3]],["result",4]]],[11,"number_of_channels","rsynth::backend::combined::memory","",10,[[]]],[11,"frames_per_second","","",10,[[]]],[11,"fill_buffer","","",10,[[["audiobufferout",3]],["result",4]]],[11,"number_of_channels","rsynth::backend::combined","",48,[[]]],[11,"frames_per_second","","",48,[[]]],[11,"fill_buffer","","",48,[[["audiobufferout",3]],["result",4]]],[11,"write_buffer","rsynth::backend::combined::dummy","",5,[[["audiobufferin",3]],["result",4]]],[11,"write_buffer","rsynth::backend::combined::hound","",9,[[["audiobufferin",3]],["result",4]]],[11,"specifies_number_of_channels","","",9,[[]]],[11,"number_of_channels","","",9,[[]]],[11,"write_buffer","rsynth::backend::combined::memory","",11,[[["audiobufferin",3]],["result",4]]],[11,"specifies_number_of_channels","","",11,[[]]],[11,"number_of_channels","","",11,[[]]],[11,"write_buffer","rsynth::backend::combined","",49,[[["audiobufferin",3]],["result",4]]],[11,"write_event","rsynth::backend::combined::dummy","",6,[[["deltaevent",3],["rawmidievent",3]]]],[11,"write_event","rsynth::backend::combined","",51,[[["deltaevent",3],["rawmidievent",3]]]],[11,"output_initialized","","",47,[[]]],[11,"stop","","",47,[[]]],[11,"output_initialized","rsynth::backend::jack_backend","",61,[[]]],[11,"stop","","",61,[[]]],[11,"output_initialized","rsynth::backend::vst_backend::vst::plugin","",194,[[]]],[11,"iter","rsynth::envelope::staircase_envelope","",199,[[]]],[11,"insert_event","","",199,[[["timed",3]]]],[11,"forget_past","","",199,[[]]],[11,"decide_on_collision","rsynth::event::event_queue","",200,[[],["eventcollisionhandling",4]]],[11,"decide_on_collision","","",201,[[],["eventcollisionhandling",4]]],[11,"decide_on_collision","","",202,[[],["eventcollisionhandling",4]]],[11,"decide_on_collision","","",203,[[],["eventcollisionhandling",4]]],[11,"handle_event","rsynth::backend::combined","",47,[[["rawmidievent",3],["timed",3]]]],[11,"handle_event","rsynth::backend::jack_backend","",61,[[["indexed",3],["timed",3]]]],[11,"handle_event","","",61,[[["indexed",3],["timed",3]]]],[11,"handle_event","rsynth::test_utilities","",206,[[]]],[11,"handle_event","","",121,[[]]],[11,"handle_event","","",206,[[]]],[11,"general","rsynth::meta","",115,[[]]],[11,"in_ports","","",115,[[]]],[11,"out_ports","","",115,[[]]],[11,"in_ports","","",115,[[]]],[11,"out_ports","","",115,[[]]],[11,"classify","rsynth::utilities::polyphony","",207,[[],["eventdispatchclass",4]]],[11,"classify","rsynth::utilities::polyphony::simple_event_dispatching","",126,[[],["eventdispatchclass",4]]],[11,"find_active_voice","","",126,[[],["option",4]]],[11,"find_idle_voice","","",126,[[]]],[11,"max_number_of_audio_inputs","rsynth::test_utilities","",121,[[]]],[11,"max_number_of_audio_outputs","","",121,[[]]],[11,"set_sample_rate","","",121,[[]]],[11,"render_buffer","","",121,[[["audiobufferinout",3]]]],[11,"as_mut","rsynth::event","",114,[[],["rawmidievent",3]]],[11,"as_mut","","",104,[[]]],[11,"as_mut","","",105,[[]]],[11,"as_ref","","",114,[[],["rawmidievent",3]]],[11,"as_ref","","",104,[[]]],[11,"as_ref","","",105,[[]]],[11,"from","rsynth::backend::combined::memory","",10,[[]]],[11,"from","rsynth::event","",107,[[["cursorerror",4]]]],[11,"next","rsynth::buffer","",140,[[],["option",4]]],[11,"next","","",141,[[],["option",4]]],[11,"next","rsynth::backend::combined::dummy","",6,[[],["option",4]]],[11,"next","rsynth::backend::combined::midly","",43,[[],["option",4]]],[11,"next","rsynth::backend::combined","",50,[[],[["deltaevent",3],["option",4]]]],[11,"next","rsynth::envelope::staircase_envelope","",198,[[],["option",4]]],[11,"clone","rsynth::buffer","",0,[[],["audiobufferin",3]]],[11,"clone","","",3,[[],["audiochunk",3]]],[11,"clone","rsynth::envelope","",102,[[],["envelopeiteratoritem",3]]],[11,"clone","rsynth::event","",113,[[],["sysexevent",3]]],[11,"clone","","",114,[[],["rawmidievent",3]]],[11,"clone","","",107,[[],["midlyconversionerror",4]]],[11,"clone","","",104,[[]]],[11,"clone","","",105,[[]]],[11,"clone","","",106,[[],["deltaevent",3]]],[11,"clone","rsynth::utilities::polyphony","",122,[[],["toneidentifier",3]]],[11,"clone","","",124,[[],["voiceassignment",4]]],[11,"clone","rsynth::utilities::polyphony::simple_event_dispatching","",125,[[],["simplevoicestate",4]]],[11,"default","rsynth::utilities::polyphony","",207,[[],["rawmidieventtoneidentifierdispatchclassifier",3]]],[11,"default","rsynth::utilities::polyphony::simple_event_dispatching","",126,[[]]],[11,"eq","rsynth::buffer","",3,[[["audiochunk",3]]]],[11,"ne","","",3,[[["audiochunk",3]]]],[11,"eq","rsynth::envelope","",102,[[["envelopeiteratoritem",3]]]],[11,"ne","","",102,[[["envelopeiteratoritem",3]]]],[11,"eq","rsynth::event","",113,[[["sysexevent",3]]]],[11,"ne","","",113,[[["sysexevent",3]]]],[11,"eq","","",114,[[["rawmidievent",3]]]],[11,"ne","","",114,[[["rawmidievent",3]]]],[11,"eq","","",104,[[["timed",3]]]],[11,"ne","","",104,[[["timed",3]]]],[11,"eq","","",105,[[["indexed",3]]]],[11,"ne","","",105,[[["indexed",3]]]],[11,"eq","","",106,[[["deltaevent",3]]]],[11,"ne","","",106,[[["deltaevent",3]]]],[11,"eq","rsynth::utilities::polyphony","",122,[[["toneidentifier",3]]]],[11,"ne","","",122,[[["toneidentifier",3]]]],[11,"eq","","",124,[[["voiceassignment",4]]]],[11,"ne","","",124,[[["voiceassignment",4]]]],[11,"eq","rsynth::utilities::polyphony::simple_event_dispatching","",125,[[["simplevoicestate",4]]]],[11,"ne","","",125,[[["simplevoicestate",4]]]],[11,"deref","rsynth::event::event_queue","",110,[[]]],[11,"fmt","rsynth::buffer","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined::hound","",7,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined","",4,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::envelope","",102,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::event","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::utilities::polyphony","",122,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined::hound","",7,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined","",4,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::event","",107,[[["formatter",3]],["result",6]]],[11,"index","rsynth::event::event_queue","",110,[[]]],[11,"index_mut","","",110,[[]]],[11,"try_from","rsynth::event","",114,[[["trackeventkind",4]],["result",4]]],[11,"source","rsynth::backend::combined::hound","",7,[[],[["option",4],["error",8]]]],[11,"source","rsynth::backend::combined","",4,[[],[["option",4],["error",8]]]],[11,"source","rsynth::event","",107,[[],[["option",4],["error",8]]]],[11,"as_never","rsynth::backend::combined::midly::midly::io","",142,[[]]],[11,"new","","Create a new cursor located at the start of the given…",143,[[],["cursor",3]]],[11,"from_parts","","Create a cursor from a buffer and the cursor within it.",143,[[],["cursor",3]]],[11,"into_parts","","Yield the underlying buffer and the cursor within it.",143,[[]]],[11,"slice","","Get a reference to the whole underlying buffer.",143,[[]]],[11,"slice_mut","","Get a mutable reference to the whole underlying buffer.",143,[[]]],[11,"cursor","","Get the position of the cursor.",143,[[]]],[11,"written","","Get a reference to the written portion of the buffer.",143,[[]]],[11,"unwritten","","Get a reference to the portion of the buffer that is not…",143,[[]]],[11,"split","","Split the buffer into the written and unwritten parts.",143,[[]]],[11,"written_mut","","Get a mutable reference to the written portion of the…",143,[[]]],[11,"unwritten_mut","","Get a mutable reference to the portion of the buffer that…",143,[[]]],[11,"split_mut","","Split the buffer into the written and unwritten parts.",143,[[]]],[11,"parse","rsynth::backend::combined::midly::midly::live","Parse a complete MIDI message from its raw bytes.",17,[[],[["result",4],["liveevent",4],["error",3]]]],[11,"write","","Write a standalone message to the given output.",17,[[],["result",4]]],[11,"write_with_running_status","","Write a message, skipping the status if it shares the…",17,[[["option",4]],["result",4]]],[11,"write_std","","Write a standalone message to the given `std::io::Write`…",17,[[],[["result",4],["error",3]]]],[11,"write_std_with_running_status","","Write a message, skipping the status if it shares the…",17,[[["option",4]],[["result",4],["error",3]]]],[11,"as_track_event","","Convert this `LiveEvent` into a static `TrackEventKind`,…",17,[[["arena",3]],["trackeventkind",4]]],[11,"new","","Create a system realtime event from its id byte.",21,[[],["systemrealtime",4]]],[11,"encode","","Get the id byte for this system realtime message.",21,[[]]],[11,"new","rsynth::backend::combined::midly::midly::stream","Create a new clean midi stream with the default buffer size.",144,[[],[["defaultbuffer",3],["midistream",3]]]],[11,"with_buffer","","Create a new clean midi stream using the given data buffer.",144,[[],["midistream",3]]],[11,"feed","","Feeds a slice of bytes to the stream, calling the…",144,[[]]],[11,"flush","","Indicates to the stream that this is an event boundary,…",144,[[]]],[11,"max_cap","","",145,[[]]],[11,"new","","",145,[[],["defaultbuffer",3]]],[11,"max_value","rsynth::backend::combined::midly::midly::num","The maximum value that this restricted integer can hold.",146,[[],["u14",3]]],[11,"new","","Creates a restricted int from its non-restricted…",146,[[],["u14",3]]],[11,"from_int_lossy","","Creates a restricted int from its non-restricted…",146,[[],["u14",3]]],[11,"try_from","","Returns `Some` if the raw integer is within range of the…",146,[[],[["u14",3],["option",4]]]],[11,"as_int","","Get the inner integer out of the wrapper. The inner…",146,[[]]],[11,"slice_try_from_int","","Cast a slice of raw integers to a slice of restricted…",146,[[],["option",4]]],[11,"slice_from_int","","Cast a slice of raw integers to a slice of restricted…",146,[[]]],[11,"slice_from_int_unchecked","","Cast a slice of raw integers to a slice of restricted…",146,[[]]],[11,"slice_try_from_int_mut","","Cast a slice of mutable raw integers to a slice of mutable…",146,[[],["option",4]]],[11,"slice_from_int_mut","","Cast a slice of mutable raw integers to a slice of mutable…",146,[[]]],[11,"slice_from_int_unchecked_mut","","Cast a slice of mutable raw integers to a slice of mutable…",146,[[]]],[11,"slice_as_int","","Cast a slice of restricted integers to the corresponding…",146,[[]]],[11,"max_value","","The maximum value that this restricted integer can hold.",147,[[],["u15",3]]],[11,"new","","Creates a restricted int from its non-restricted…",147,[[],["u15",3]]],[11,"from_int_lossy","","Creates a restricted int from its non-restricted…",147,[[],["u15",3]]],[11,"try_from","","Returns `Some` if the raw integer is within range of the…",147,[[],[["u15",3],["option",4]]]],[11,"as_int","","Get the inner integer out of the wrapper. The inner…",147,[[]]],[11,"slice_try_from_int","","Cast a slice of raw integers to a slice of restricted…",147,[[],["option",4]]],[11,"slice_from_int","","Cast a slice of raw integers to a slice of restricted…",147,[[]]],[11,"slice_from_int_unchecked","","Cast a slice of raw integers to a slice of restricted…",147,[[]]],[11,"slice_try_from_int_mut","","Cast a slice of mutable raw integers to a slice of mutable…",147,[[],["option",4]]],[11,"slice_from_int_mut","","Cast a slice of mutable raw integers to a slice of mutable…",147,[[]]],[11,"slice_from_int_unchecked_mut","","Cast a slice of mutable raw integers to a slice of mutable…",147,[[]]],[11,"slice_as_int","","Cast a slice of restricted integers to the corresponding…",147,[[]]],[11,"max_value","","The maximum value that this restricted integer can hold.",148,[[],["u24",3]]],[11,"new","","Creates a restricted int from its non-restricted…",148,[[],["u24",3]]],[11,"from_int_lossy","","Creates a restricted int from its non-restricted…",148,[[],["u24",3]]],[11,"try_from","","Returns `Some` if the raw integer is within range of the…",148,[[],[["u24",3],["option",4]]]],[11,"as_int","","Get the inner integer out of the wrapper. The inner…",148,[[]]],[11,"slice_try_from_int","","Cast a slice of raw integers to a slice of restricted…",148,[[],["option",4]]],[11,"slice_from_int","","Cast a slice of raw integers to a slice of restricted…",148,[[]]],[11,"slice_from_int_unchecked","","Cast a slice of raw integers to a slice of restricted…",148,[[]]],[11,"slice_try_from_int_mut","","Cast a slice of mutable raw integers to a slice of mutable…",148,[[],["option",4]]],[11,"slice_from_int_mut","","Cast a slice of mutable raw integers to a slice of mutable…",148,[[]]],[11,"slice_from_int_unchecked_mut","","Cast a slice of mutable raw integers to a slice of mutable…",148,[[]]],[11,"slice_as_int","","Cast a slice of restricted integers to the corresponding…",148,[[]]],[11,"max_value","","The maximum value that this restricted integer can hold.",149,[[],["u28",3]]],[11,"new","","Creates a restricted int from its non-restricted…",149,[[],["u28",3]]],[11,"from_int_lossy","","Creates a restricted int from its non-restricted…",149,[[],["u28",3]]],[11,"try_from","","Returns `Some` if the raw integer is within range of the…",149,[[],[["u28",3],["option",4]]]],[11,"as_int","","Get the inner integer out of the wrapper. The inner…",149,[[]]],[11,"slice_try_from_int","","Cast a slice of raw integers to a slice of restricted…",149,[[],["option",4]]],[11,"slice_from_int","","Cast a slice of raw integers to a slice of restricted…",149,[[]]],[11,"slice_from_int_unchecked","","Cast a slice of raw integers to a slice of restricted…",149,[[]]],[11,"slice_try_from_int_mut","","Cast a slice of mutable raw integers to a slice of mutable…",149,[[],["option",4]]],[11,"slice_from_int_mut","","Cast a slice of mutable raw integers to a slice of mutable…",149,[[]]],[11,"slice_from_int_unchecked_mut","","Cast a slice of mutable raw integers to a slice of mutable…",149,[[]]],[11,"slice_as_int","","Cast a slice of restricted integers to the corresponding…",149,[[]]],[11,"max_value","","The maximum value that this restricted integer can hold.",150,[[],["u4",3]]],[11,"new","","Creates a restricted int from its non-restricted…",150,[[],["u4",3]]],[11,"from_int_lossy","","Creates a restricted int from its non-restricted…",150,[[],["u4",3]]],[11,"try_from","","Returns `Some` if the raw integer is within range of the…",150,[[],[["option",4],["u4",3]]]],[11,"as_int","","Get the inner integer out of the wrapper. The inner…",150,[[]]],[11,"slice_try_from_int","","Cast a slice of raw integers to a slice of restricted…",150,[[],["option",4]]],[11,"slice_from_int","","Cast a slice of raw integers to a slice of restricted…",150,[[]]],[11,"slice_from_int_unchecked","","Cast a slice of raw integers to a slice of restricted…",150,[[]]],[11,"slice_try_from_int_mut","","Cast a slice of mutable raw integers to a slice of mutable…",150,[[],["option",4]]],[11,"slice_from_int_mut","","Cast a slice of mutable raw integers to a slice of mutable…",150,[[]]],[11,"slice_from_int_unchecked_mut","","Cast a slice of mutable raw integers to a slice of mutable…",150,[[]]],[11,"slice_as_int","","Cast a slice of restricted integers to the corresponding…",150,[[]]],[11,"max_value","","The maximum value that this restricted integer can hold.",151,[[],["u7",3]]],[11,"new","","Creates a restricted int from its non-restricted…",151,[[],["u7",3]]],[11,"from_int_lossy","","Creates a restricted int from its non-restricted…",151,[[],["u7",3]]],[11,"try_from","","Returns `Some` if the raw integer is within range of the…",151,[[],[["option",4],["u7",3]]]],[11,"as_int","","Get the inner integer out of the wrapper. The inner…",151,[[]]],[11,"slice_try_from_int","","Cast a slice of raw integers to a slice of restricted…",151,[[],["option",4]]],[11,"slice_from_int","","Cast a slice of raw integers to a slice of restricted…",151,[[]]],[11,"slice_from_int_unchecked","","Cast a slice of raw integers to a slice of restricted…",151,[[]]],[11,"slice_try_from_int_mut","","Cast a slice of mutable raw integers to a slice of mutable…",151,[[],["option",4]]],[11,"slice_from_int_mut","","Cast a slice of mutable raw integers to a slice of mutable…",151,[[]]],[11,"slice_from_int_unchecked_mut","","Cast a slice of mutable raw integers to a slice of mutable…",151,[[]]],[11,"slice_as_int","","Cast a slice of restricted integers to the corresponding…",151,[[]]],[11,"new","rsynth::backend::combined::midly::midly","Create a new empty arena.",152,[[],["arena",3]]],[11,"clear","","Empty this arena, deallocating all added bytes.",152,[[]]],[11,"len","","Get the amount of allocations in the arena.",152,[[]]],[11,"add","","Add a set of bytes to the arena, returning a longer-lived…",152,[[]]],[11,"add_vec","","Add a `Vec<u8>` to the arena, returning a long-lived…",152,[[["vec",3]]]],[11,"add_u7","","Add a set of databytes to the arena, returning a…",152,[[]]],[11,"add_u7_vec","","Add a `Vec<u7>` to the arena, returning a long-lived…",152,[[["u7",3],["vec",3]]]],[11,"new","","Create a new empty `Smf` with zero tracks, using the given…",23,[[["header",3]],["smf",3]]],[11,"parse","","Parse a `.mid` Standard Midi File from its raw bytes. If…",23,[[],[["error",3],["result",4],["smf",3]]]],[11,"write","","Encodes and writes the file to the given generic writer.",23,[[],["result",4]]],[11,"write_std","","Encodes and writes the file to the given `std::io::Write`…",23,[[],[["result",4],["error",3]]]],[11,"save","","Encodes and writes the file to the given path.",23,[[],[["result",4],["error",3]]]],[11,"new","","Create a new empty `SmfBytemap` with zero tracks, using…",24,[[["header",3]],["smfbytemap",3]]],[11,"parse","","Parse a Standard Midi File from its raw bytes, keeping a…",24,[[],[["error",3],["smfbytemap",3],["result",4]]]],[11,"write","","Encodes and writes the events (not the bytemap) to the…",24,[[],["result",4]]],[11,"write_std","","Encodes and writes the events (not the bytemap) to the…",24,[[],[["result",4],["error",3]]]],[11,"save","","Creates/overwrites the file at the given path and writes…",24,[[],[["result",4],["error",3]]]],[11,"new","","Create a new error with the given `ErrorKind`.",153,[[["errorkind",4]],["error",3]]],[11,"kind","","More information about the error itself.",153,[[],["errorkind",4]]],[11,"source","","The underlying cause for this error.",153,[[],[["error",3],["option",4]]]],[11,"message","","Get the informative message on what exact part of the MIDI…",25,[[]]],[11,"min_raw_value","","The minimum value of `0x0000`, indicating full bend…",35,[[],["pitchbend",3]]],[11,"mid_raw_value","","The middle value of `0x2000`, indicating no bend.",35,[[],["pitchbend",3]]],[11,"max_raw_value","","The maximum value of `0x3FFF`, indicating full bend upwards.",35,[[],["pitchbend",3]]],[11,"from_int","","Create a `PitchBend` value from an int in the range…",35,[[],["pitchbend",3]]],[11,"from_f32","","Create a `PitchBend` value from a number in the range…",35,[[],["pitchbend",3]]],[11,"from_f64","","Create a `PitchBend` value from a number in the range…",35,[[],["pitchbend",3]]],[11,"as_int","","Returns an int in the range `[-0x2000, 0x1FFF]`.",35,[[]]],[11,"as_f32","","Returns an `f32` in the range `[-1.0, 1.0)`.",35,[[]]],[11,"as_f64","","Returns an `f64` in the range `[-1.0, 1.0)`.",35,[[]]],[11,"as_live_event","","Lossy conversion from a track event to a live event.",37,[[],[["option",4],["liveevent",4]]]],[11,"from_int","","Converts an integer representing the semantic fps to an…",40,[[],[["option",4],["fps",4]]]],[11,"as_int","","Get the integral approximate fps out.",40,[[]]],[11,"as_f32","","Get the actual `f32` fps out.",40,[[]]],[11,"new","","",154,[[["fps",4]],[["option",4],["smptetime",3]]]],[11,"hour","","",154,[[]]],[11,"minute","","",154,[[]]],[11,"second","","",154,[[]]],[11,"frame","","",154,[[]]],[11,"subframe","","",154,[[]]],[11,"fps","","",154,[[],["fps",4]]],[11,"second_f32","","",154,[[]]],[11,"new","","Create an event iterator from raw track bytes.",155,[[],["eventbytemapiter",3]]],[11,"unread","","Get the remaining unparsed event bytes.",155,[[]]],[11,"running_status","","Get the current running status of the track.",155,[[],["option",4]]],[11,"running_status_mut","","Modify the current running status of the track.",155,[[],["option",4]]],[11,"not_bytemapped","","Stop collecting bytemap information for any remaining…",155,[[],["eventiter",3]]],[11,"into_vec","","Collects the remaining unparsed events into a `Vec<(&[u8],…",155,[[],[["vec",3],["error",3],["result",4]]]],[11,"new","","Create an event iterator from raw track bytes.",156,[[],["eventiter",3]]],[11,"unread","","Get the remaining unparsed event bytes.",156,[[]]],[11,"running_status","","Get the current running status of the track.",156,[[],["option",4]]],[11,"running_status_mut","","Modify the current running status of the track.",156,[[],["option",4]]],[11,"bytemapped","","Make this event iterator keep track of the raw bytes that…",156,[[],["eventbytemapiter",3]]],[11,"into_vec","","Collects the remaining unparsed events into a `Track`.",156,[[],[["vec",3],["result",4],["error",3]]]],[11,"new","","Create a new header from its raw parts.",42,[[["timing",4],["format",4]],["header",3]]],[11,"new","","Create an event iterator from raw SMF bytes, excluding the…",157,[[],["trackiter",3]]],[11,"unread","","Peek at the remaining unparsed bytes in the file.",157,[[]]],[11,"collect_tracks","","Parse and collect the remaining unparsed tracks into a…",157,[[],[["result",4],["vec",3],["error",3]]]],[11,"collect_bytemapped","","Parse and collect the remaining unparsed tracks into a…",157,[[],[["error",3],["vec",3],["result",4]]]],[11,"new","rsynth::backend::jack_backend::jack","Tell the JACK server that the program is ready to start…",158,[[["client",3]],[["result",4],["asyncclient",3],["error",4]]]],[11,"as_client","","Return the underlying `jack::Client`.",158,[[],["client",3]]],[11,"deactivate","","Tell the JACK server to remove this client from the…",158,[[],[["result",4],["error",4]]]],[11,"new","","Opens a JACK client with the given name and options. If…",159,[[["clientoptions",3]],[["error",4],["result",4]]]],[11,"activate_async","","Begin processing in real-time using the specified…",159,[[],[["result",4],["asyncclient",3],["error",4]]]],[11,"sample_rate","","The sample rate of the JACK system, as set by the user…",159,[[]]],[11,"cpu_load","","The current CPU load estimated by JACK. It is on a scale…",159,[[]]],[11,"name","","Get the name of the current client. This may differ from…",159,[[]]],[11,"buffer_size","","The current maximum size that will every be passed to the…",159,[[]]],[11,"set_buffer_size","","Change the buffer size passed to the process callback.",159,[[],[["error",4],["result",4]]]],[11,"ports","","Returns a vector of port names that match the specified…",159,[[["portflags",3],["option",4]],[["vec",3],["string",3]]]],[11,"register_port","","Create a new port for the client. This is an object used…",159,[[],[["result",4],["port",3],["error",4]]]],[11,"port_by_id","","Get a `Port` by its port id.",159,[[],[["port",3],["option",4]]]],[11,"port_by_name","","Get a `Port` by its port name.",159,[[],[["port",3],["option",4]]]],[11,"frames_since_cycle_start","","The estimated time in frames that has passed since the…",159,[[]]],[11,"frame_time","","The estimated current time in frames. This function is…",159,[[]]],[11,"frames_to_time","","The estimated time in microseconds of the specified frame…",159,[[]]],[11,"time_to_frames","","The estimated time in frames for the specified system time.",159,[[]]],[11,"is_mine","","Returns `true` if the port `port` belongs to this client.",159,[[["port",3]]]],[11,"request_monitor_by_name","","Toggle input monitoring for the port with name `port_name`.",159,[[],[["error",4],["result",4]]]],[11,"connect_ports_by_name","","Establish a connection between two ports by their full name.",159,[[],[["error",4],["result",4]]]],[11,"connect_ports","","Establish a connection between two ports.",159,[[["port",3],["port",3]],[["error",4],["result",4]]]],[11,"disconnect","","Remove all connections to/from the port.",159,[[["port",3]],[["error",4],["result",4]]]],[11,"unregister_port","","",159,[[["port",3]],[["error",4],["result",4]]]],[11,"disconnect_ports","","Remove a connection between two ports.",159,[[["port",3],["port",3]],[["error",4],["result",4]]]],[11,"disconnect_ports_by_name","","Remove a connection between two ports.",159,[[],[["error",4],["result",4]]]],[11,"type_buffer_size","","The buffer size of a port type",159,[[]]],[11,"raw","","Expose the underlying ffi pointer.",159,[[]]],[11,"from_raw","","Create a `Client` from an ffi pointer.",159,[[],["client",3]]],[18,"NO_START_SERVER","","Do not automatically start the JACK server when it is not…",160,null],[18,"USE_EXACT_NAME","","Use the exact client name requested. Otherwise, JACK…",160,null],[18,"SERVER_NAME","","Open with optional `server_name` parameter.",160,null],[18,"LOAD_NAME","","Load internal client from optional `load_name`, otherwise…",160,null],[18,"LOAD_INIT","","Pass optional `load_init` to `jack_initialize()` entry…",160,null],[18,"SESSION_ID","","Pass a SessionID token. This allows the session manager to…",160,null],[11,"empty","","Returns an empty set of flags",160,[[],["clientoptions",3]]],[11,"all","","Returns the set containing all flags.",160,[[],["clientoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",160,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",160,[[],[["clientoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",160,[[],["clientoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",160,[[],["clientoptions",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",160,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",160,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",160,[[["clientoptions",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",160,[[["clientoptions",3]]]],[11,"insert","","Inserts the specified flags in-place.",160,[[["clientoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",160,[[["clientoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",160,[[["clientoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",160,[[["clientoptions",3]]]],[18,"FAILURE","","Overall operation failed. File an issue if you can get it…",161,null],[18,"INVALID_OPTION","","The operation contained an invalid or unsupported option.",161,null],[18,"NAME_NOT_UNIQUE","","The desired client name was not unique. With the…",161,null],[18,"SERVER_STARTED","","The JACK server was started as a result of this operation.…",161,null],[18,"SERVER_FAILED","","Unable to connect to the JACK server.",161,null],[18,"SERVER_ERROR","","Communication error with the JACK server.",161,null],[18,"NO_SUCH_CLIENT","","Requested client does not exist.",161,null],[18,"LOAD_FAILURE","","Unable to load internal client",161,null],[18,"INIT_FAILURE","","Unable to initialize client",161,null],[18,"SHM_FAILURE","","Unable to access shared memory",161,null],[18,"VERSION_ERROR","","Client\'s protocol version does not match",161,null],[18,"BACKEND_ERROR","","No documentation found. TODO: dig deeper",161,null],[18,"CLIENT_ZOMBIE","","No documentation found. TODO: dig deeper",161,null],[11,"empty","","Returns an empty set of flags",161,[[],["clientstatus",3]]],[11,"all","","Returns the set containing all flags.",161,[[],["clientstatus",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",161,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",161,[[],[["option",4],["clientstatus",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",161,[[],["clientstatus",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",161,[[],["clientstatus",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",161,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",161,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",161,[[["clientstatus",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",161,[[["clientstatus",3]]]],[11,"insert","","Inserts the specified flags in-place.",161,[[["clientstatus",3]]]],[11,"remove","","Removes the specified flags in-place.",161,[[["clientstatus",3]]]],[11,"toggle","","Toggles the specified flags in-place.",161,[[["clientstatus",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",161,[[["clientstatus",3]]]],[11,"new","","",52,[[],["closureprocesshandler",3]]],[11,"n_frames","","The number of frames in the current process cycle.",162,[[]]],[11,"last_frame_time","","The precise time at the start of the current process…",162,[[]]],[11,"frames_since_cycle_start","","The estimated time in frames that has passed since the…",162,[[]]],[11,"cycle_times","","Provides the internal cycle timing information as used by…",162,[[],[["error",4],["cycletimes",3],["result",4]]]],[11,"client_ptr","","Expose the `client_ptr` for low level purposes.",162,[[]]],[11,"from_raw","","Create a `ProcessScope` for the client with the given…",162,[[],["processscope",3]]],[11,"to_ffi","","",56,[[]]],[11,"to_ffi","","",58,[[]]],[11,"peek","","Return the next element without advancing the iterator.",167,[[],[["rawmidi",3],["option",4]]]],[11,"next_if","","Return the next element only if the message passes the…",167,[[],[["rawmidi",3],["option",4]]]],[11,"write","","Write an event into an event port buffer.",169,[[["rawmidi",3]],[["error",4],["result",4]]]],[11,"lost_count","","Get the number of events that could not be written to…",169,[[]]],[11,"max_event_size","","Get the size of the largest event that can be stored by…",169,[[]]],[11,"as_slice","","Read the received audio data.",170,[[["processscope",3]]]],[11,"as_mut_slice","","Get a slice to write audio data to.",170,[[["processscope",3]]]],[11,"iter","","Get an iterator over midi events.",170,[[["processscope",3]],["midiiter",3]]],[11,"writer","","Create a writer that can write midi events to the…",170,[[["processscope",3]],["midiwriter",3]]],[11,"spec","","Returns the spec that was used to create this port.",170,[[]]],[11,"clone_unowned","","Return a copy of port as an unowned port that can still be…",170,[[],[["port",3],["unowned",3]]]],[11,"name","","Returns the full name of the port, including the…",170,[[],[["string",3],["error",4],["result",4]]]],[11,"short_name","","Returns the short name of the port, it excludes the…",170,[[],[["string",3],["error",4],["result",4]]]],[11,"flags","","The flags for the port. These are set when the port is…",170,[[],["portflags",3]]],[11,"port_type","","The port type. JACK\'s built in types include `\\\"32 bit…",170,[[],[["string",3],["error",4],["result",4]]]],[11,"connected_count","","Number of ports connected to/from `&self`.",170,[[],[["result",4],["error",4]]]],[11,"is_connected_to","","Returns `true` if the port is directly connected to a port…",170,[[],[["result",4],["error",4]]]],[11,"aliases","","Get the alias names for `self`.",170,[[],[["error",4],["vec",3],["result",4]]]],[11,"is_monitoring_input","","Returns `true` if monitoring has been requested for `self`.",170,[[],[["result",4],["error",4]]]],[11,"request_monitor","","Turn input monitoring for the port on or off.",170,[[],[["error",4],["result",4]]]],[11,"ensure_monitor","","If the `CAN_MONITOR` flag is set for the port, then input…",170,[[],[["error",4],["result",4]]]],[11,"set_name","","Set\'s the short name of the port. If the full name is…",170,[[],[["error",4],["result",4]]]],[11,"set_alias","","Sets `alias` as an alias for `self`.",170,[[],[["error",4],["result",4]]]],[11,"unset_alias","","Remove `alias` as an alias for port. May be called at any…",170,[[],[["error",4],["result",4]]]],[11,"from_raw","","Create a Port from raw JACK pointers.",170,[[["weak",3]],["port",3]]],[11,"client_ptr","","Obtain the client pointer that spawned this port.",170,[[]]],[11,"raw","","Obtain the ffi port pointer.",170,[[]]],[11,"buffer","","Obtain the buffer that the Port is holding. For standard…",170,[[]]],[11,"set_latency_range","","Set the minimum and maximum latencies defined by mode for…",170,[[["latencytype",4]]]],[11,"get_latency_range","","Returns a tuple of the minimum and maximum latencies…",170,[[["latencytype",4]]]],[18,"IS_INPUT","","The port can receive data.",171,null],[18,"IS_OUTPUT","","Data can be read from the port.",171,null],[18,"IS_PHYSICAL","","Port corresponds to some kind of physical I/O connector.",171,null],[18,"CAN_MONITOR","","A call to `jack_port_request_monitor()` makes sense.",171,null],[18,"IS_TERMINAL","","For an input port, the data received by the port will not…",171,null],[11,"empty","","Returns an empty set of flags",171,[[],["portflags",3]]],[11,"all","","Returns the set containing all flags.",171,[[],["portflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",171,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",171,[[],[["option",4],["portflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",171,[[],["portflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",171,[[],["portflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",171,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",171,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",171,[[["portflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",171,[[["portflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",171,[[["portflags",3]]]],[11,"remove","","Removes the specified flags in-place.",171,[[["portflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",171,[[["portflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",171,[[["portflags",3]]]],[11,"new","","Allocates a ringbuffer of a specified size.",175,[[],[["result",4],["ringbuffer",3]]]],[11,"mlock","","Lock a ringbuffer data block into memory.",175,[[]]],[11,"reset","","Resets the ring buffer, making an empty buffer.",175,[[]]],[11,"into_reader_writer","","Create a reader and writer, to use the ring buffer.",175,[[]]],[11,"from_reader_writer","","Re-create the ring buffer object from reader and writer.…",175,[[["ringbufferreader",3],["ringbufferwriter",3]],["ringbuffer",3]]],[11,"get_vector","","Fill a data structure with a description of the current…",176,[[]]],[11,"read_buffer","","Read data from the ringbuffer. Returns: the number of…",176,[[]]],[11,"peek","","Read data from the ringbuffer. Opposed to read_buffer()…",176,[[]]],[11,"advance","","Advance the read pointer. use this after peek/peek_iter or…",176,[[]]],[11,"space","","Return the number of bytes available for reading.",176,[[]]],[11,"peek_iter","","Iterator that goes over all the data available to read.",176,[[],[["iter",3],["chain",3]]]],[11,"write_buffer","","Write data into the ringbuffer. Returns: The number of…",177,[[]]],[11,"advance","","Advance the write pointer. use this after peek_iter or…",177,[[]]],[11,"space","","Return the number of bytes available for writing.",177,[[]]],[11,"get_vector","","Return a pair of slices of the current writable space in…",177,[[]]],[11,"peek_iter","","Iterator that goes over all the data available to write.",177,[[],[["chain",3],["itermut",3]]]],[11,"get_plugin","rsynth::backend::vst_backend::vst::api","Return handle to Plugin object. Only works for plugins…",62,[[],["box",3]]],[11,"drop_plugin","","Drop the Plugin object. Only works for plugins created…",62,[[]]],[11,"from","","Create a `Supported` value from an integer if possible.",65,[[],[["supported",4],["option",4]]]],[11,"events","","Use this in your impl of process_events() to process the…",72,[[]]],[18,"ACTIVE","","Indicates channel is active. Ignored by host.",178,null],[18,"STEREO","","Indicates channel is first of stereo pair.",178,null],[18,"SPEAKER","","Use channel\'s specified speaker_arrangement instead of…",178,null],[11,"empty","","Returns an empty set of flags",178,[[],["channelflags",3]]],[11,"all","","Returns the set containing all flags.",178,[[],["channelflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",178,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",178,[[],[["option",4],["channelflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",178,[[],["channelflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",178,[[],["channelflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",178,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",178,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",178,[[["channelflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",178,[[["channelflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",178,[[["channelflags",3]]]],[11,"remove","","Removes the specified flags in-place.",178,[[["channelflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",178,[[["channelflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",178,[[["channelflags",3]]]],[18,"HAS_EDITOR","","Plugin has an editor.",179,null],[18,"CAN_REPLACING","","Plugin can process 32 bit audio. (Mandatory in VST 2.4).",179,null],[18,"PROGRAM_CHUNKS","","Plugin preset data is handled in formatless chunks.",179,null],[18,"IS_SYNTH","","Plugin is a synth.",179,null],[18,"NO_SOUND_IN_STOP","","Plugin does not produce sound when all input is silence.",179,null],[18,"CAN_DOUBLE_REPLACING","","Supports 64 bit audio processing.",179,null],[11,"empty","","Returns an empty set of flags",179,[[],["pluginflags",3]]],[11,"all","","Returns the set containing all flags.",179,[[],["pluginflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",179,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",179,[[],[["pluginflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",179,[[],["pluginflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",179,[[],["pluginflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",179,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",179,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",179,[[["pluginflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",179,[[["pluginflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",179,[[["pluginflags",3]]]],[11,"remove","","Removes the specified flags in-place.",179,[[["pluginflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",179,[[["pluginflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",179,[[["pluginflags",3]]]],[18,"SHIFT","","Shift key.",180,null],[18,"ALT","","Alt key.",180,null],[18,"COMMAND","","Control on mac.",180,null],[18,"CONTROL","","Command on mac, ctrl on other.",180,null],[11,"empty","","Returns an empty set of flags",180,[[],["modifierkey",3]]],[11,"all","","Returns the set containing all flags.",180,[[],["modifierkey",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",180,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",180,[[],[["modifierkey",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",180,[[],["modifierkey",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",180,[[],["modifierkey",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",180,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",180,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",180,[[["modifierkey",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",180,[[["modifierkey",3]]]],[11,"insert","","Inserts the specified flags in-place.",180,[[["modifierkey",3]]]],[11,"remove","","Removes the specified flags in-place.",180,[[["modifierkey",3]]]],[11,"toggle","","Toggles the specified flags in-place.",180,[[["modifierkey",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",180,[[["modifierkey",3]]]],[18,"REALTIME_EVENT","","This event is played live (not in playback from a…",181,null],[11,"empty","","Returns an empty set of flags",181,[[],["midieventflags",3]]],[11,"all","","Returns the set containing all flags.",181,[[],["midieventflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",181,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",181,[[],[["option",4],["midieventflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",181,[[],["midieventflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",181,[[],["midieventflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",181,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",181,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",181,[[["midieventflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",181,[[["midieventflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",181,[[["midieventflags",3]]]],[11,"remove","","Removes the specified flags in-place.",181,[[["midieventflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",181,[[["midieventflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",181,[[["midieventflags",3]]]],[18,"TRANSPORT_CHANGED","","Indicates that play, cycle or record state has changed.",182,null],[18,"TRANSPORT_PLAYING","","Set if Host sequencer is currently playing.",182,null],[18,"TRANSPORT_CYCLE_ACTIVE","","Set if Host sequencer is in cycle mode.",182,null],[18,"TRANSPORT_RECORDING","","Set if Host sequencer is in record mode.",182,null],[18,"AUTOMATION_WRITING","","Set if automation write mode active (record parameter…",182,null],[18,"AUTOMATION_READING","","Set if automation read mode active (play parameter changes).",182,null],[18,"NANOSECONDS_VALID","","Set if TimeInfo::nanoseconds is valid.",182,null],[18,"PPQ_POS_VALID","","Set if TimeInfo::ppq_pos is valid.",182,null],[18,"TEMPO_VALID","","Set if TimeInfo::tempo is valid.",182,null],[18,"BARS_VALID","","Set if TimeInfo::bar_start_pos is valid.",182,null],[18,"CYCLE_POS_VALID","","Set if both TimeInfo::cycle_start_pos and…",182,null],[18,"TIME_SIG_VALID","","Set if both TimeInfo::time_sig_numerator and…",182,null],[18,"SMPTE_VALID","","Set if both TimeInfo::smpte_offset and…",182,null],[18,"VST_CLOCK_VALID","","Set if TimeInfo::samples_to_next_clock is valid.",182,null],[11,"empty","","Returns an empty set of flags",182,[[],["timeinfoflags",3]]],[11,"all","","Returns the set containing all flags.",182,[[],["timeinfoflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",182,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",182,[[],[["timeinfoflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",182,[[],["timeinfoflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",182,[[],["timeinfoflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",182,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",182,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",182,[[["timeinfoflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",182,[[["timeinfoflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",182,[[["timeinfoflags",3]]]],[11,"remove","","Removes the specified flags in-place.",182,[[["timeinfoflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",182,[[["timeinfoflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",182,[[["timeinfoflags",3]]]],[11,"from_raw","rsynth::backend::vst_backend::vst::buffer","Create an `AudioBuffer` from raw pointers. Only really…",183,[[],["audiobuffer",3]]],[11,"input_count","","The number of input channels that this buffer was created…",183,[[]]],[11,"output_count","","The number of output channels that this buffer was created…",183,[[]]],[11,"samples","","The number of samples in this buffer (same for all channels)",183,[[]]],[11,"split","","Split this buffer into separate inputs and outputs.",183,[[]]],[11,"zip","","Create an iterator over pairs of input buffers and output…",183,[[],["audiobufferiterator",3]]],[11,"len","","Number of channels",185,[[]]],[11,"is_empty","","Returns true if the buffer is empty",185,[[]]],[11,"get","","Access channel at the given index",185,[[]]],[11,"split_at","","Split borrowing at the given index, like for slices",185,[[]]],[11,"len","","Number of channels",187,[[]]],[11,"is_empty","","Returns true if the buffer is empty",187,[[]]],[11,"get","","Access channel at the given index",187,[[]]],[11,"get_mut","","Mutably access channel at the given index",187,[[]]],[11,"split_at_mut","","Split borrowing at the given index, like for slices",187,[[]]],[11,"new","","Creates a buffer for sending up to the given number of…",189,[[],["sendeventbuffer",3]]],[11,"send_events","","Sends events to the host. See the `fwd_midi` example.",189,[[["host",8]]]],[11,"send_events_to_plugin","","Sends events from the host to a plugin.",189,[[["plugin",8]]]],[11,"new","rsynth::backend::vst_backend::vst::channels","Construct a new `ChannelInfo` object.",190,[[["speakerarrangementtype",4],["string",3],["option",4],["option",4]],["channelinfo",3]]],[11,"is_speaker_type","","Determine whether this channel is part of a surround…",84,[[]]],[11,"is_left_stereo","","Determine whether this channel is the left speaker in a…",84,[[]]],[11,"load","rsynth::backend::vst_backend::vst::host","Load a plugin at the given path with the given host.",191,[[["path",3],["arc",3],["mutex",3]],[["pluginloader",3],["result",4],["pluginloaderror",4]]]],[11,"instance","","Try to create an instance of this VST plugin.",191,[[],[["result",4],["plugininstance",3],["pluginloaderror",4]]]],[11,"new","","Create a `HostBuffer` for a given number of input and…",193,[[],["hostbuffer",3]]],[11,"from_info","","Create a `HostBuffer` for the number of input and output…",193,[[["info",3]],["hostbuffer",3]]],[11,"bind","","Bind sample arrays to the `HostBuffer` to create an…",193,[[],["audiobuffer",3]]],[11,"input_count","","Number of input channels supported by this `HostBuffer`.",193,[[]]],[11,"output_count","","Number of output channels supported by this `HostBuffer`.",193,[[]]],[11,"from_str","rsynth::backend::vst_backend::vst::plugin","Converts a string to a `CanDo` instance. Any given string…",96,[[],["cando",4]]],[11,"vst_version","","Get the VST API version supported by the host e.g. `2400 =…",194,[[]]],[11,"raw_callback","","Get the callback for calling host-specific extensions",194,[[],["option",4]]],[11,"raw_effect","","Get the effect pointer for calling host-specific extensions",194,[[]]],[11,"new","rsynth::backend::vst_backend::vst::util","New atomic float with initial value `value`.",195,[[],["atomicfloat",3]]],[11,"get","","Get the current value of the atomic float.",195,[[]]],[11,"set","","Set the value of the atomic float to `value`.",195,[[]]],[11,"new","","Create a new parameter set with `parameter_count`…",196,[[],["parametertransfer",3]]],[11,"set_parameter","","Set the value of the parameter with index `index` to…",196,[[]]],[11,"get_parameter","","Get the current value of the parameter with index `index`.",196,[[]]],[11,"iterate","","Iterate over all parameters marked as changed. If…",196,[[],["parametertransferiterator",3]]],[11,"with_capacity","rsynth::vecstorage","",208,[[],["vecstorage",3]]],[11,"vec_guard","","Creates a new `VecGuard` using the memory allocated by…",208,[[],["vecguard",3]]]],"p":[[3,"AudioBufferIn"],[3,"AudioBufferOut"],[3,"AudioBufferInOut"],[3,"AudioChunk"],[4,"CombinedError"],[3,"AudioDummy"],[3,"MidiDummy"],[4,"HoundAudioError"],[3,"HoundAudioReader"],[3,"HoundAudioWriter"],[3,"AudioChunkReader"],[3,"AudioBufferWriter"],[8,"Write"],[8,"Seek"],[4,"CursorError"],[3,"IoWrap"],[3,"SeekableWrap"],[4,"LiveEvent"],[13,"Midi"],[4,"SystemCommon"],[4,"MtcQuarterFrameMessage"],[4,"SystemRealtime"],[8,"Buffer"],[3,"Smf"],[3,"SmfBytemap"],[4,"ErrorKind"],[4,"MetaMessage"],[4,"MidiMessage"],[13,"NoteOff"],[13,"NoteOn"],[13,"Aftertouch"],[13,"Controller"],[13,"ProgramChange"],[13,"ChannelAftertouch"],[13,"PitchBend"],[3,"PitchBend"],[3,"TrackEvent"],[4,"TrackEventKind"],[13,"Midi"],[4,"Format"],[4,"Fps"],[4,"Timing"],[3,"Header"],[3,"MidlyMidiReader"],[8,"AudioReader"],[8,"AudioWriter"],[8,"MidiWriter"],[3,"MidiWriterWrapper"],[3,"TestAudioReader"],[3,"TestAudioWriter"],[3,"TestMidiReader"],[3,"TestMidiWriter"],[3,"ClosureProcessHandler"],[3,"CycleTimes"],[8,"NotificationHandler"],[8,"ProcessHandler"],[4,"Control"],[4,"Error"],[4,"LatencyType"],[8,"PortSpec"],[3,"RawMidi"],[3,"JackHost"],[3,"AEffect"],[3,"ChannelProperties"],[4,"SpeakerArrangementType"],[4,"Supported"],[4,"ProcessLevel"],[4,"HostLanguage"],[4,"FileSelectCommand"],[4,"FileSelectType"],[3,"FileType"],[3,"FileSelect"],[3,"Events"],[4,"EventType"],[3,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[3,"TimeInfo"],[4,"SmpteFrameRate"],[8,"WriteIntoPlaceholder"],[4,"ArrangementTarget"],[4,"StereoChannel"],[4,"StereoConfig"],[4,"SurroundConfig"],[4,"SpeakerArrangementType"],[8,"Editor"],[3,"KeyCode"],[4,"KnobMode"],[4,"Key"],[4,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[8,"Host"],[4,"PluginLoadError"],[4,"Category"],[3,"Info"],[4,"CanDo"],[8,"Plugin"],[8,"PluginParameters"],[8,"VstPluginMeta"],[3,"VstPluginWrapper"],[8,"HostInterface"],[3,"EnvelopeIteratorItem"],[8,"Envelope"],[3,"Timed"],[3,"Indexed"],[3,"DeltaEvent"],[4,"MidlyConversionError"],[4,"EventCollisionHandling"],[8,"HandleEventCollision"],[3,"EventQueue"],[8,"EventHandler"],[8,"ContextualEventHandler"],[3,"SysExEvent"],[3,"RawMidiEvent"],[3,"MetaData"],[3,"InOut"],[8,"Meta"],[8,"General"],[8,"Name"],[8,"Port"],[3,"TestPlugin"],[3,"ToneIdentifier"],[4,"EventDispatchClass"],[4,"VoiceAssignment"],[4,"SimpleVoiceState"],[3,"SimpleEventDispatcher"],[8,"EventDispatchClassifier"],[8,"Voice"],[8,"VoiceAssigner"],[8,"EventDispatcher"],[8,"ContextualEventDispatcher"],[8,"AudioHandlerMeta"],[8,"AudioHandler"],[8,"MidiHandlerMeta"],[8,"AudioRenderer"],[8,"ContextualAudioRenderer"],[8,"CommonPluginMeta"],[8,"CommonAudioPortMeta"],[8,"CommonMidiPortMeta"],[3,"AudioBufferOutChannelIteratorMut"],[3,"InterlacedSampleIterator"],[3,"NotSeekable"],[3,"Cursor"],[3,"MidiStream"],[3,"DefaultBuffer"],[3,"u14"],[3,"u15"],[3,"u24"],[3,"u28"],[3,"u4"],[3,"u7"],[3,"Arena"],[3,"Error"],[3,"SmpteTime"],[3,"EventBytemapIter"],[3,"EventIter"],[3,"TrackIter"],[3,"AsyncClient"],[3,"Client"],[3,"ClientOptions"],[3,"ClientStatus"],[3,"ProcessScope"],[3,"CLIENT_NAME_SIZE"],[3,"AudioIn"],[3,"AudioOut"],[3,"MidiIn"],[3,"MidiIter"],[3,"MidiOut"],[3,"MidiWriter"],[3,"Port"],[3,"PortFlags"],[3,"Unowned"],[3,"PORT_NAME_SIZE"],[3,"PORT_TYPE_SIZE"],[3,"RingBuffer"],[3,"RingBufferReader"],[3,"RingBufferWriter"],[3,"ChannelFlags"],[3,"PluginFlags"],[3,"ModifierKey"],[3,"MidiEventFlags"],[3,"TimeInfoFlags"],[3,"AudioBuffer"],[3,"AudioBufferIterator"],[3,"Inputs"],[3,"InputIterator"],[3,"Outputs"],[3,"OutputIterator"],[3,"SendEventBuffer"],[3,"ChannelInfo"],[3,"PluginLoader"],[3,"PluginInstance"],[3,"HostBuffer"],[3,"HostCallback"],[3,"AtomicFloat"],[3,"ParameterTransfer"],[3,"ParameterTransferIterator"],[3,"StairCaseEnvelopeIterator"],[3,"StairCaseEnvelope"],[3,"AlwaysInsertNewBeforeOld"],[3,"AlwaysInsertNewAfterOld"],[3,"AlwaysIgnoreNew"],[3,"AlwaysRemoveOld"],[3,"AudioPort"],[3,"MidiPort"],[3,"DummyEventHandler"],[3,"RawMidiEventToneIdentifierDispatchClassifier"],[3,"VecStorage"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);