var searchIndex = JSON.parse('{\
"rsynth":{"doc":"Rsynth An API abstraction for API\'s for audio plugins and…","i":[[0,"buffer","rsynth","Audio buffers.",null,null],[3,"AudioBufferIn","rsynth::buffer","Audio input buffer.",null,null],[3,"AudioBufferOut","","An audio output buffer.",null,null],[3,"AudioBufferOutChannelIteratorMut","","An iterator over the channels of an [`AudioBufferOut`].",null,null],[3,"AudioBufferInOut","","A buffer holding both input and output audio.",null,null],[3,"AudioChunk","","A buffer representing a fixed amount of samples for a…",null,null],[3,"InterlacedSampleIterator","","An iterator over the samples of an `AudioChunk`, operating…",null,null],[5,"buffers_as_slice","","",null,[[],["vec",3]]],[5,"buffers_as_mut_slice","","",null,[[],["vec",3]]],[11,"new","","Create a new audio input buffer.",0,[[]]],[11,"number_of_channels","","Get the number of channels.",0,[[]]],[11,"number_of_frames","","Get the number of frames.",0,[[]]],[11,"channels","","Get the channels as slices.",0,[[]]],[11,"index_frames","","Get an `AudioBufferIn` with all channels and the given…",0,[[["vec",3]],["audiobufferin",3]]],[11,"get_channel","","Get the channel with the given index.",0,[[],["option",4]]],[11,"index_channel","","Get the channel with the given index.",0,[[]]],[11,"new","","Create a new audio output buffer.",1,[[]]],[11,"number_of_channels","","Get the number of channels.",1,[[]]],[11,"number_of_frames","","Get the number of frames.",1,[[]]],[11,"channels","","Get the channels as slices.",1,[[]]],[11,"split_channels_at","","Split into two `AudioBufferOut`s. The first will contain…",1,[[]]],[11,"index_frames","","Get an `AdioBufferOut` with all channels and the given…",1,[[["vec",3]],["audiobufferout",3]]],[11,"get_channel","","Get the channel with the given index.",1,[[],["option",4]]],[11,"index_channel","","Get the channel with the given index.",1,[[]]],[11,"set","","Set all samples to the given value.",1,[[]]],[11,"channel_iter_mut","","Get an iterator over the channels.",1,[[],["audiobufferoutchanneliteratormut",3]]],[11,"as_audio_buffer_in","","Convert to an [`AudioBufferIn`].",1,[[["vec",3]],["audiobufferin",3]]],[11,"new","","Create a new `AudioBufferInOut`.",2,[[]]],[11,"number_of_frames","","Get the number of frames.",2,[[]]],[11,"number_of_input_channels","","Get the number of input channels.",2,[[]]],[11,"number_of_output_channels","","Get the number of output channels.",2,[[]]],[11,"split_output_channels_at","","Create two new `AUdioBufferInOut`s: one with all the input…",2,[[]]],[11,"get_input_channel","","Get the input channel with the given index.",2,[[],["option",4]]],[11,"index_input_channel","","Get the output channel with the given index.",2,[[]]],[11,"get_output_channel","","Get the output channel with the given index.",2,[[],["option",4]]],[11,"index_output_channel","","Get the output channel with the given index.",2,[[]]],[11,"index_frames","","Get an `AudioBufferInOut` with all channels and with the…",2,[[["vec",3],["vec",3]],["audiobufferinout",3]]],[11,"separate","","Separate the input channels from the output channels.",2,[[]]],[11,"inputs","","Get the input channels as an [`AudioBufferIn`].",2,[[],["audiobufferin",3]]],[11,"outputs","","Get the output channels as an [`AudioBufferOut`].",2,[[],["audiobufferout",3]]],[11,"new","","Create a new `AudioChunk`. # Panics Panics if…",3,[[]]],[11,"zero","","Note: cannot be used in a real-time context This method…",3,[[]]],[11,"from_channels","","",3,[[["vec",3],["vec",3]]]],[11,"from_interlaced_iterator","","Panics Panics if `number_of_channels == 0`. Panics if the…",3,[[]]],[11,"interlaced","","Create an interlaced iterator from an `AudioChunk` #…",3,[[],["interlacedsampleiterator",3]]],[11,"with_capacity","","Create a new `AudioChunk` in which each channel has the…",3,[[]]],[11,"channels","","",3,[[],["vec",3]]],[11,"number_of_channels","","Return the number of channels.",3,[[]]],[11,"append_sliced_chunk","","Note about using in a real-time context This method will…",3,[[]]],[11,"inner","","",3,[[],[["vec",3],["vec",3]]]],[11,"as_slices","","Note: cannot be used in a real-time context This method…",3,[[],["vec",3]]],[11,"as_mut_slices","","Note: cannot be used in a real-time context This method…",3,[[],["vec",3]]],[11,"split","","Note: cannot be used in a real-time context This method…",3,[[],["vec",3]]],[0,"backend","rsynth","Backends.",null,null],[0,"combined","rsynth::backend","Combine different back-ends for audio input, audio output…",null,null],[3,"MidiWriterWrapper","rsynth::backend::combined","A wrapper around a midi writer that implements…",null,null],[3,"TestAudioReader","","An audio reader, useful for testing.",null,null],[3,"TestAudioWriter","","An audio writer, useful for testing.",null,null],[3,"TestMidiReader","","A midi reader, useful for testing.",null,null],[3,"TestMidiWriter","","A midi writer, useful for testing.",null,null],[4,"CombinedError","","The error type that represents the errors you can get from…",null,null],[13,"AudioInError","","An error occurred when reading the audio.",4,null],[13,"AudioOutError","","An error occurred when writing the audio.",4,null],[5,"run","","Run an audio renderer with the given audio input, audio…",null,[[],[["result",4],["combinederror",4]]]],[0,"dummy","","Dummy backend that does nothing, useful for testing.",null,null],[3,"AudioDummy","rsynth::backend::combined::dummy","Dummy backend that does nothing, useful for testing and…",null,null],[3,"MidiDummy","","",null,null],[11,"with_sample_rate_and_length","","Create a new `AudioDummy` with the given sample rate, in…",5,[[]]],[11,"new","","Create a new `AudioDummy` with the \\\"default\\\" sample rate…",5,[[]]],[11,"new","","",6,[[]]],[0,"hound","rsynth::backend::combined","Backend for reading and writing `.wav` files, based on the…",null,null],[3,"HoundAudioReader","rsynth::backend::combined::hound","",null,null],[3,"HoundAudioWriter","","",null,null],[4,"HoundAudioError","","",null,null],[13,"UnsupportedAudioFormat","","",7,null],[11,"new","","",8,[[["wavreader",3]],[["result",4],["houndaudioerror",4]]]],[11,"new","","",9,[[["wavwriter",3]],[["result",4],["houndaudioerror",4]]]],[0,"memory","rsynth::backend::combined","In-memory backend, useful for testing.",null,null],[3,"AudioChunkReader","rsynth::backend::combined::memory","An [`AudioReader`] that reads from a given [`AudioChunk`].…",null,null],[3,"AudioBufferWriter","","An [`AudioWriter`] that appends to a given [`AudioChunk`].…",null,null],[6,"AudioBufferReader","","An [`AudioReader`] that reads from a given [`AudioChunk`].…",null,null],[11,"new","","Construct a new `AudioChunkReader` with the given…",10,[[]]],[11,"new","","",11,[[["audiochunk",3]]]],[0,"midly","rsynth::backend::combined","Read midi files.",null,null],[3,"MidlyMidiReader","rsynth::backend::combined::midly","Read from midi events as parsed by the `midly` crate.",null,null],[0,"midly","","Re-exports from the `midly` crate.",null,null],[0,"number","rsynth::backend::combined::midly::midly","Special-length integers used by the MIDI standard.",null,null],[3,"u14","rsynth::backend::combined::midly::midly::number","",null,null],[3,"u15","","",null,null],[3,"u24","","",null,null],[3,"u28","","Referred to in the MIDI spec as \\\"variable length int\\\".",null,null],[3,"u4","","",null,null],[3,"u7","","",null,null],[3,"Error","rsynth::backend::combined::midly::midly","Represents an error parsing an SMF file or MIDI stream.",null,null],[4,"ErrorKind","","The type of error that occurred while parsing.",null,null],[13,"Invalid","","Fatal errors while reading the file. It is likely that the…",12,null],[13,"Malformed","","Non-fatal error, but the file is clearly corrupted.",12,null],[3,"Event","","Represents a fully parsed track event, with delta time.",null,null],[12,"delta","","",13,null],[12,"kind","","",13,null],[4,"EventKind","","Represents the different kinds of events.",null,null],[13,"Midi","","A standard MIDI message bound to a channel.",14,null],[12,"channel","rsynth::backend::combined::midly::midly::EventKind","",15,null],[12,"message","","",15,null],[13,"SysEx","rsynth::backend::combined::midly::midly","A System Exclusive message, carrying arbitrary data.",14,null],[13,"Escape","","An escape sequence, intended to send arbitrary data to the…",14,null],[13,"Meta","","A meta-message, giving extra information for correct…",14,null],[4,"MetaMessage","","",null,null],[13,"TrackNumber","","For `Format::Sequential` MIDI file types, `TrackNumber`…",16,null],[13,"Text","","",16,null],[13,"Copyright","","",16,null],[13,"TrackName","","",16,null],[13,"InstrumentName","","",16,null],[13,"Lyric","","",16,null],[13,"Marker","","",16,null],[13,"CuePoint","","",16,null],[13,"ProgramName","","",16,null],[13,"DeviceName","","",16,null],[13,"MidiChannel","","",16,null],[13,"MidiPort","","",16,null],[13,"EndOfTrack","","Obligatory at track end.",16,null],[13,"Tempo","","Amount of microseconds per beat (quarter note).",16,null],[13,"SmpteOffset","","",16,null],[13,"TimeSignature","","In order of the MIDI specification, numerator,…",16,null],[13,"KeySignature","","As in the MIDI specification, negative numbers indicate…",16,null],[13,"SequencerSpecific","","",16,null],[13,"Unknown","","An unknown meta-message, unconforming to the spec.",16,null],[4,"MidiMessage","","Represents a MIDI message, not an event.",null,null],[13,"NoteOff","","Stop playing a note.",17,null],[12,"key","rsynth::backend::combined::midly::midly::MidiMessage","The MIDI key to stop playing.",18,null],[12,"vel","","The velocity with which to stop playing it.",18,null],[13,"NoteOn","rsynth::backend::combined::midly::midly","Start playing a note.",17,null],[12,"key","rsynth::backend::combined::midly::midly::MidiMessage","The key to start playing.",19,null],[12,"vel","","The velocity (strength) with which to press it.",19,null],[13,"Aftertouch","rsynth::backend::combined::midly::midly","Modify the velocity of a note after it has been played.",17,null],[12,"key","rsynth::backend::combined::midly::midly::MidiMessage","The key for which to modify its velocity.",20,null],[12,"vel","","The new velocity for the key.",20,null],[13,"Controller","rsynth::backend::combined::midly::midly","Modify the value of a MIDI controller.",17,null],[12,"controller","rsynth::backend::combined::midly::midly::MidiMessage","The controller to modify.",21,null],[12,"value","","The value to set it to.",21,null],[13,"ProgramChange","rsynth::backend::combined::midly::midly","Change the program (also known as instrument) for a channel.",17,null],[12,"program","rsynth::backend::combined::midly::midly::MidiMessage","The new program (instrument) to use for the channel.",22,null],[13,"ChannelAftertouch","rsynth::backend::combined::midly::midly","Change the note velocity of a whole channel at once,…",17,null],[12,"vel","rsynth::backend::combined::midly::midly::MidiMessage","The new velocity for the notes currently playing in the…",23,null],[13,"PitchBend","rsynth::backend::combined::midly::midly","Set the pitch bend value.",17,null],[12,"bend","rsynth::backend::combined::midly::midly::MidiMessage","The new pitch-bend value.",24,null],[4,"Format","rsynth::backend::combined::midly::midly","The different formats an SMF file can be.",null,null],[13,"SingleTrack","","",25,null],[13,"Parallel","","",25,null],[13,"Sequential","","",25,null],[4,"Fps","","",null,null],[13,"Fps24","","",26,null],[13,"Fps25","","",26,null],[13,"Fps29","","",26,null],[13,"Fps30","","",26,null],[3,"SmpteTime","","Encodes an SMPTE time of the day.",null,null],[4,"Timing","","The timing for an SMF file. This can be in ticks/beat or…",null,null],[13,"Metrical","","Specifies ticks/beat as a 15-bit integer.",27,null],[13,"Timecode","","Specifies ticks/second by dividing a second into frames…",27,null],[3,"Header","","A MIDI file header.",null,null],[12,"format","","",28,null],[12,"timing","","",28,null],[3,"Smf","","Represents a Standard Midi File (.mid and .midi files).…",null,null],[12,"header","","",29,null],[12,"tracks","","",29,null],[3,"TrackIter","","Allows deferring track parsing for later, on a per-event…",null,null],[8,"TrackRepr","","Allows for customization on how tracks are stored in memory.",null,null],[18,"USE_MULTITHREADING","","",30,null],[10,"read","","",30,[[],[["error",3],["result",4]]]],[10,"write","","",30,[[],[["result",4],["error",3]]]],[11,"new","rsynth::backend::combined::midly","Create a new `MidlyMidiReader`.",31,[[["header",3]]]],[17,"MICROSECONDS_PER_SECOND","rsynth::backend::combined","",null,null],[8,"AudioReader","","Define how audio is read.",null,null],[16,"Err","","The type of the error that occurs when reading data.",32,null],[10,"number_of_channels","","The number of audio channels that can be read.",32,[[]]],[10,"frames_per_second","","The sampling frequency in frames per second.",32,[[]]],[10,"fill_buffer","","Fill the buffers. Return the number of frames that have…",32,[[["audiobufferout",3]],["result",4]]],[8,"AudioWriter","","Define how audio is written.",null,null],[16,"Err","","The type of the error that occurs when reading data.",33,null],[10,"write_buffer","","Write to the specified audio buffer.",33,[[["audiobufferin",3]],["result",4]]],[11,"specifies_number_of_channels","","Return `true` if this `AudioWriter` is responsible for…",33,[[]]],[11,"number_of_channels","","Return the number of channels. This method is only called…",33,[[]]],[8,"MidiWriter","","Define how midi is written. Note: there is no…",null,null],[10,"write_event","","",34,[[["deltaevent",3],["rawmidievent",3]]]],[11,"new","","",35,[[]]],[11,"step_frames","","",35,[[]]],[11,"new","","Create a new `TestAudioReader`. The newly created…",36,[[["audiobufferreader",6],["vec",3]]]],[11,"new","","Create a new `TestAudioWriter`. The newly created will…",37,[[["vec",3],["audiochunk",3]]]],[11,"new","","Create a new `TestMidiReader` that will return the…",38,[[["deltaevent",3],["vec",3]]]],[11,"new","","Create a new `TestMidiWriter` that will panic when the…",39,[[["deltaevent",3],["vec",3]]]],[11,"check_last","","",39,[[]]],[0,"jack_backend","rsynth::backend","Wrapper for the [JACK] backend (behind the `backend-jack`…",null,null],[3,"JackHost","rsynth::backend::jack_backend","Used to communicate with `Jack`.",null,null],[5,"run","","Run the plugin until the user presses a key on the…",null,[[],[["result",4],["error",4]]]],[0,"jack","","Re-exports of the `jack` crate. Use this so that your code…",null,null],[5,"get_time","rsynth::backend::jack_backend::jack","Return JACK\'s current system time in microseconds, using…",null,[[]]],[3,"AsyncClient","","A JACK client that is processing data asynchronously, in…",null,null],[3,"Client","","A client to interact with a JACK server.",null,null],[3,"ClientOptions","","Option flags for opening a JACK client.",null,null],[3,"ClientStatus","","Status flags for JACK clients.",null,null],[3,"ClosureProcessHandler","","Wrap a closure that can handle the `process` callback.…",null,null],[12,"process_fn","","",40,null],[3,"CycleTimes","","Internal cycle timing information.",null,null],[12,"current_frames","","",41,null],[12,"current_usecs","","",41,null],[12,"next_usecs","","",41,null],[12,"period_usecs","","",41,null],[8,"NotificationHandler","","Specifies callbacks for JACK.",null,null],[11,"thread_init","","Called just once after the creation of the thread in which…",42,[[["client",3]]]],[11,"shutdown","","Called when the JACK server shuts down the client thread.…",42,[[["clientstatus",3]]]],[11,"freewheel","","Called whenever \\\"freewheel\\\" mode is entered or leaving.",42,[[["client",3]]]],[11,"buffer_size","","Called whenever the size of the buffer that will be passed…",42,[[["client",3]],["control",4]]],[11,"sample_rate","","Called whenever the system sample rate changes.",42,[[["client",3]],["control",4]]],[11,"client_registration","","Called whenever a client is registered or unregistered",42,[[["client",3]]]],[11,"port_registration","","Called whenever a port is registered or unregistered",42,[[["client",3]]]],[11,"port_rename","","Called whenever a port is renamed.",42,[[["client",3]],["control",4]]],[11,"ports_connected","","Called whenever ports are connected/disconnected to/from…",42,[[["client",3]]]],[11,"graph_reorder","","Called whenever the processing graph is reordered.",42,[[["client",3]],["control",4]]],[11,"xrun","","Called whenever an xrun occurs.",42,[[["client",3]],["control",4]]],[11,"latency","","Called whenever it is necessary to recompute the latencies…",42,[[["client",3],["latencytype",4]]]],[8,"ProcessHandler","","Specifies real-time processing.",null,null],[10,"process","","Called whenever there is work to be done.",43,[[["client",3],["processscope",3]],["control",4]]],[3,"ProcessScope","","`ProcessScope` provides information on the client and…",null,null],[3,"CLIENT_NAME_SIZE","","The maximum string length for port names.",null,null],[4,"Control","","Specify an option, either to continue processing, or to…",null,null],[13,"Continue","","Continue processing.",44,null],[13,"Quit","","Stop processing.",44,null],[4,"Error","","An error that can occur in JACK.",null,null],[13,"CallbackDeregistrationError","","",45,null],[13,"CallbackRegistrationError","","",45,null],[13,"ClientActivationError","","",45,null],[13,"ClientDeactivationError","","",45,null],[13,"ClientError","","",45,null],[13,"FreewheelError","","",45,null],[13,"InvalidDeactivation","","",45,null],[13,"NotEnoughSpace","","",45,null],[13,"PortAliasError","","",45,null],[13,"PortAlreadyConnected","","",45,null],[13,"PortConnectionError","","",45,null],[13,"PortDisconnectionError","","",45,null],[13,"PortMonitorError","","",45,null],[13,"PortNamingError","","",45,null],[13,"PortRegistrationError","","",45,null],[13,"SetBufferSizeError","","",45,null],[13,"TimeError","","",45,null],[13,"WeakFunctionNotFound","","",45,null],[13,"ClientIsNoLongerAlive","","",45,null],[13,"UnknownError","","",45,null],[4,"LatencyType","","Used by `NotificationHandler::latency()`.",null,null],[13,"Capture","","",46,null],[13,"Playback","","",46,null],[5,"error_callback","","Get the error callback that was set using…",null,[[],["option",4]]],[5,"info_callback","","Resets the JACK info callback to use stdio. Get the info…",null,[[],["option",4]]],[5,"reset_error_callback","","Restores the JACK info callback to the JACK default, which…",null,[[]]],[5,"reset_info_callback","","Restores the JACK info callback to the JACK default, which…",null,[[]]],[5,"set_error_callback","","Set the global JACK info callback. It is recommended to…",null,[[]]],[5,"set_info_callback","","Set the global JACK info callback. It is recommended to…",null,[[]]],[3,"AudioIn","","`AudioIn` implements the `PortSpec` trait which, defines…",null,null],[3,"AudioOut","","`AudioOut` implements the `PortSpec` trait, which defines…",null,null],[3,"MidiIn","","`MidiIn` implements the `PortSpec` trait, which defines an…",null,null],[3,"MidiIter","","Iterate through Midi Messages within a `Port<MidiIn>`.",null,null],[3,"MidiOut","","`MidiOut` implements the `PortSpec` trait, which defines…",null,null],[3,"MidiWriter","","Write midi events to an output midi port.",null,null],[3,"Port","","An endpoint to interact with JACK data streams, for audio,…",null,null],[3,"PortFlags","","Flags for specifying port options.",null,null],[8,"PortSpec","","Defines the configuration for a certain port to JACK, ie…",null,null],[10,"jack_port_type","","String used by JACK upon port creation to identify the…",47,[[]]],[10,"jack_flags","","Flags used by jack upon port creation.",47,[[],["portflags",3]]],[10,"jack_buffer_size","","Size used by jack upon port creation.",47,[[]]],[3,"RawMidi","","Contains 8bit raw midi information along with a timestamp…",null,null],[12,"time","","The amount of time passed, in frames, relative to the…",48,null],[12,"bytes","","Midi data",48,null],[3,"Unowned","","`PortSpec` for a port that holds has no readable or…",null,null],[3,"PORT_NAME_SIZE","","The maximum string length for port names.",null,null],[3,"PORT_TYPE_SIZE","","The maximum string length for jack type names.",null,null],[6,"Frames","","Type used to represent sample frame counts.",null,null],[6,"PortId","","Ports have unique ids. A port registration callback is the…",null,null],[6,"Time","","Type used to represent the value of free running monotonic…",null,null],[3,"RingBuffer","","A lock-free ringbuffer. The key attribute of a ringbuffer…",null,null],[3,"RingBufferReader","","Read end of the ring buffer. Can only be used from one…",null,null],[3,"RingBufferWriter","","Write end of the ring buffer. Can only be used from one…",null,null],[11,"client","rsynth::backend::jack_backend","Get access to the underlying [`Client`] so that you can…",49,[[],["client",3]]],[0,"vst_backend","rsynth::backend","Wrapper for the VST backend (behind the `backend-vst`…",null,null],[3,"VstPluginWrapper","rsynth::backend::vst_backend","A struct used internally by the [`vst_init`] macro.…",null,null],[0,"vst","","Re-exports from the `vst-rs` crate. Use this in libraries…",null,null],[0,"api","rsynth::backend::vst_backend::vst","Structures and types for interfacing with the VST 2.4 API.",null,null],[0,"consts","rsynth::backend::vst_backend::vst::api","Constant values",null,null],[17,"MAX_PRESET_NAME_LEN","rsynth::backend::vst_backend::vst::api::consts","",null,null],[17,"MAX_PARAM_STR_LEN","","",null,null],[17,"MAX_LABEL","","",null,null],[17,"MAX_SHORT_LABEL","","",null,null],[17,"MAX_PRODUCT_STR_LEN","","",null,null],[17,"MAX_VENDOR_STR_LEN","","",null,null],[17,"VST_MAGIC","","VST plugins are identified by a magic number. This…",null,null],[6,"PluginMain","rsynth::backend::vst_backend::vst::api","`VSTPluginMain` function signature.",null,null],[6,"HostCallbackProc","","Host callback function passed to plugin. Can be used to…",null,null],[6,"DispatcherProc","","Dispatcher function used to process opcodes. Called by host.",null,null],[6,"ProcessProc","","Process function used to process 32 bit floating point…",null,null],[6,"ProcessProcF64","","Process function used to process 64 bit floating point…",null,null],[6,"SetParameterProc","","Callback function used to set parameter values. Called by…",null,null],[6,"GetParameterProc","","Callback function used to get parameter values. Called by…",null,null],[3,"AEffect","","Used with the VST API to pass around plugin information.",null,null],[12,"magic","","Magic number. Must be `[\'V\', \'S\', \'T\', \'P\']`.",50,null],[12,"dispatcher","","Host to plug-in dispatcher.",50,null],[12,"_process","","Accumulating process mode is deprecated in VST 2.4! Use…",50,null],[12,"setParameter","","Set value of automatable parameter.",50,null],[12,"getParameter","","Get value of automatable parameter.",50,null],[12,"numPrograms","","Number of programs (Presets).",50,null],[12,"numParams","","Number of parameters. All programs are assumed to have…",50,null],[12,"numInputs","","Number of audio inputs.",50,null],[12,"numOutputs","","Number of audio outputs.",50,null],[12,"flags","","Bitmask made of values from `api::PluginFlags`.",50,null],[12,"reserved1","","Reserved for host, must be 0.",50,null],[12,"reserved2","","Reserved for host, must be 0.",50,null],[12,"initialDelay","","For algorithms which need input in the first place (Group…",50,null],[12,"_realQualities","","Deprecated unused member.",50,null],[12,"_offQualities","","Deprecated unused member.",50,null],[12,"_ioRatio","","Deprecated unused member.",50,null],[12,"object","","Void pointer usable by api to store object data.",50,null],[12,"user","","User defined pointer.",50,null],[12,"uniqueId","","Registered unique identifier (register it at Steinberg 3rd…",50,null],[12,"version","","Plug-in version (e.g. 1100 for v1.1.0.0).",50,null],[12,"processReplacing","","Process audio samples in replacing mode.",50,null],[12,"processReplacingF64","","Process double-precision audio samples in replacing mode.",50,null],[12,"future","","Reserved for future use (please zero).",50,null],[3,"ChannelProperties","","Information about a channel. Only some hosts use this…",null,null],[12,"name","","Channel name.",51,null],[12,"flags","","Flags found in `ChannelFlags`.",51,null],[12,"arrangement_type","","Type of speaker arrangement this channel is a part of.",51,null],[12,"short_name","","Name of channel (recommended: 6 characters + delimiter).",51,null],[12,"future","","Reserved for future use.",51,null],[4,"SpeakerArrangementType","","Tells the host how the channels are intended to be used in…",null,null],[13,"Custom","","User defined arrangement.",52,null],[13,"Empty","","Empty arrangement.",52,null],[13,"Mono","","Mono.",52,null],[13,"Stereo","","L R",52,null],[13,"StereoSurround","","Ls Rs",52,null],[13,"StereoCenter","","Lc Rc",52,null],[13,"StereoSide","","Sl Sr",52,null],[13,"StereoCLfe","","C Lfe",52,null],[13,"Cinema30","","L R C",52,null],[13,"Music30","","L R S",52,null],[13,"Cinema31","","L R C Lfe",52,null],[13,"Music31","","L R Lfe S",52,null],[13,"Cinema40","","L R C S (LCRS)",52,null],[13,"Music40","","L R Ls Rs (Quadro)",52,null],[13,"Cinema41","","L R C Lfe S (LCRS + Lfe)",52,null],[13,"Music41","","L R Lfe Ls Rs (Quadro + Lfe)",52,null],[13,"Surround50","","L R C Ls Rs",52,null],[13,"Surround51","","L R C Lfe Ls Rs",52,null],[13,"Cinema60","","L R C Ls  Rs Cs",52,null],[13,"Music60","","L R Ls Rs  Sl Sr",52,null],[13,"Cinema61","","L R C Lfe Ls Rs Cs",52,null],[13,"Music61","","L R Lfe Ls Rs Sl Sr",52,null],[13,"Cinema70","","L R C Ls Rs Lc Rc",52,null],[13,"Music70","","L R C Ls Rs Sl Sr",52,null],[13,"Cinema71","","L R C Lfe Ls Rs Lc Rc",52,null],[13,"Music71","","L R C Lfe Ls Rs Sl Sr",52,null],[13,"Cinema80","","L R C Ls Rs Lc Rc Cs",52,null],[13,"Music80","","L R C Ls Rs Cs Sl Sr",52,null],[13,"Cinema81","","L R C Lfe Ls Rs Lc Rc Cs",52,null],[13,"Music81","","L R C Lfe Ls Rs Cs Sl Sr",52,null],[13,"Surround102","","L R C Lfe Ls Rs Tfl Tfc Tfr Trl Trr Lfe2",52,null],[4,"Supported","","Used to specify whether functionality is supported.",null,null],[13,"Yes","","",53,null],[13,"Maybe","","",53,null],[13,"No","","",53,null],[4,"ProcessLevel","","Denotes in which thread the host is in.",null,null],[13,"Unknown","","Unsupported by host.",54,null],[13,"User","","GUI thread.",54,null],[13,"Realtime","","Audio process thread.",54,null],[13,"Prefetch","","Sequence thread (MIDI, etc).",54,null],[13,"Offline","","Offline processing thread (therefore GUI/user thread).",54,null],[4,"HostLanguage","","Language that the host is using.",null,null],[13,"English","","",55,null],[13,"German","","",55,null],[13,"French","","",55,null],[13,"Italian","","",55,null],[13,"Spanish","","",55,null],[13,"Japanese","","",55,null],[4,"FileSelectCommand","","The file operation to perform.",null,null],[13,"Load","","Load a file.",56,null],[13,"Save","","Save a file.",56,null],[13,"LoadMultipleFiles","","Load multiple files simultaneously.",56,null],[13,"SelectDirectory","","Choose a directory.",56,null],[4,"FileSelectType","","Format to select files.",null,null],[13,"Regular","","Regular file selector.",57,null],[3,"FileType","","File type descriptor.",null,null],[12,"name","","Display name of file type.",58,null],[12,"osx_type","","OS X file type.",58,null],[12,"win_type","","Windows file type.",58,null],[12,"nix_type","","Unix file type.",58,null],[12,"mime_type_1","","MIME type.",58,null],[12,"mime_type_2","","Additional MIME type.",58,null],[3,"FileSelect","","File selector descriptor used in…",null,null],[12,"command","","The type of file selection to perform.",59,null],[12,"select_type","","The file selector to open.",59,null],[12,"mac_creator","","Unknown. 0 = no creator.",59,null],[12,"num_types","","Number of file types.",59,null],[12,"file_types","","List of file types to show.",59,null],[12,"title","","File selector\'s title.",59,null],[12,"initial_path","","Initial path.",59,null],[12,"return_path","","Used when operation returns a single path.",59,null],[12,"size_return_path","","Size of the path buffer in bytes.",59,null],[12,"return_multiple_paths","","Used when operation returns multiple paths.",59,null],[12,"num_paths","","Number of paths returned.",59,null],[12,"reserved","","Reserved by host.",59,null],[12,"future","","Reserved for future use.",59,null],[3,"Events","","A struct which contains events.",null,null],[12,"num_events","","Number of events.",60,null],[12,"_reserved","","Reserved for future use. Should be 0.",60,null],[12,"events","","Variable-length array of pointers to `api::Event` objects.",60,null],[4,"EventType","","The type of event that has occured. See…",null,null],[13,"Midi","","Midi event. See `api::MidiEvent`.",61,null],[13,"_Audio","","Deprecated.",61,null],[13,"_Video","","Deprecated.",61,null],[13,"_Parameter","","Deprecated.",61,null],[13,"_Trigger","","Deprecated.",61,null],[13,"SysEx","","System exclusive event. See `api::SysExEvent`.",61,null],[3,"Event","","A VST event intended to be casted to a corresponding type.",null,null],[12,"event_type","","The type of event. This lets you know which event this…",62,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<Event>()`.",62,null],[12,"delta_frames","","Number of samples into the current processing block that…",62,null],[12,"_flags","","Generic flags, none defined in VST api yet.",62,null],[12,"_reserved","","The `Event` type is cast appropriately, so this acts as…",62,null],[3,"MidiEvent","","A midi event.",null,null],[12,"event_type","","Should be `EventType::Midi`.",63,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<MidiEvent>()`.",63,null],[12,"delta_frames","","Number of samples into the current processing block that…",63,null],[12,"flags","","See `MidiEventFlags`.",63,null],[12,"note_length","","Length in sample frames of entire note if available,…",63,null],[12,"note_offset","","Offset in samples into note from start if available,…",63,null],[12,"midi_data","","1 to 3 midi bytes. TODO: Doc",63,null],[12,"_midi_reserved","","Reserved midi byte (0).",63,null],[12,"detune","","Detuning between -63 and +64 cents, for scales other than…",63,null],[12,"note_off_velocity","","Note off velocity between 0 and 127.",63,null],[12,"_reserved1","","Reserved for future use. Should be 0.",63,null],[12,"_reserved2","","Reserved for future use. Should be 0.",63,null],[3,"SysExEvent","","A midi system exclusive event.",null,null],[12,"event_type","","Should be `EventType::SysEx`.",64,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<SysExEvent>()`.",64,null],[12,"delta_frames","","Number of samples into the current processing block that…",64,null],[12,"_flags","","Generic flags, none defined in VST api yet.",64,null],[12,"data_size","","Size of payload in bytes.",64,null],[12,"_reserved1","","Reserved for future use. Should be 0.",64,null],[12,"system_data","","Pointer to payload.",64,null],[12,"_reserved2","","Reserved for future use. Should be 0.",64,null],[3,"TimeInfo","","Describes the time at the start of the block currently…",null,null],[12,"sample_pos","","current Position in audio samples (always valid)",65,null],[12,"sample_rate","","current Sample Rate in Hertz (always valid)",65,null],[12,"nanoseconds","","System Time in nanoseconds (10^-9 second)",65,null],[12,"ppq_pos","","Musical Position, in Quarter Note (1.0 equals 1 Quarter…",65,null],[12,"tempo","","current Tempo in BPM (Beats Per Minute)",65,null],[12,"bar_start_pos","","last Bar Start Position, in Quarter Note",65,null],[12,"cycle_start_pos","","Cycle Start (left locator), in Quarter Note",65,null],[12,"cycle_end_pos","","Cycle End (right locator), in Quarter Note",65,null],[12,"time_sig_numerator","","Time Signature Numerator (e.g. 3 for 3/4)",65,null],[12,"time_sig_denominator","","Time Signature Denominator (e.g. 4 for 3/4)",65,null],[12,"smpte_offset","","SMPTE offset in SMPTE subframes (bits; 1/80 of a frame).…",65,null],[12,"smpte_frame_rate","","See `SmpteFrameRate`",65,null],[12,"samples_to_next_clock","","MIDI Clock Resolution (24 Per Quarter Note), can be…",65,null],[12,"flags","","See `TimeInfoFlags`",65,null],[4,"SmpteFrameRate","","SMPTE Frame Rates.",null,null],[13,"Smpte24fps","","24 fps",66,null],[13,"Smpte25fps","","25 fps",66,null],[13,"Smpte2997fps","","29.97 fps",66,null],[13,"Smpte30fps","","30 fps",66,null],[13,"Smpte2997dfps","","29.97 drop",66,null],[13,"Smpte30dfps","","30 drop",66,null],[13,"SmpteFilm16mm","","Film 16mm",66,null],[13,"SmpteFilm35mm","","Film 35mm",66,null],[13,"Smpte239fps","","HDTV: 23.976 fps",66,null],[13,"Smpte249fps","","HDTV: 24.976 fps",66,null],[13,"Smpte599fps","","HDTV: 59.94 fps",66,null],[13,"Smpte60fps","","HDTV: 60 fps",66,null],[3,"ChannelFlags","","Flags for VST channels.",null,null],[3,"PluginFlags","","Flags for VST plugins.",null,null],[3,"ModifierKey","","Cross platform modifier key flags.",null,null],[3,"MidiEventFlags","","MIDI event flags.",null,null],[3,"TimeInfoFlags","","Used in the `flags` field of `TimeInfo`, and for querying…",null,null],[0,"buffer","rsynth::backend::vst_backend::vst","Buffers to safely work with audio samples.",null,null],[3,"AudioBuffer","rsynth::backend::vst_backend::vst::buffer","`AudioBuffer` contains references to the audio buffers for…",null,null],[3,"AudioBufferIterator","","Iterator over pairs of buffers of input channels and…",null,null],[3,"Inputs","","Wrapper type to access the buffers for the input channels…",null,null],[3,"InputIterator","","Iterator over buffers for input channels of an…",null,null],[3,"Outputs","","Wrapper type to access the buffers for the output channels…",null,null],[3,"OutputIterator","","Iterator over buffers for output channels of an…",null,null],[6,"PlaceholderEvent","","This is used as a placeholder to pre-allocate space for a…",null,null],[8,"WriteIntoPlaceholder","","This trait is used by `SendEventBuffer::send_events` to…",null,null],[10,"write_into","","writes an event into the given placeholder memory location",67,[[["sysexevent",3]]]],[3,"SendEventBuffer","","This buffer is used for sending midi events through the…",null,null],[0,"channels","rsynth::backend::vst_backend::vst","Meta data for dealing with input / output channels. Not…",null,null],[3,"ChannelInfo","rsynth::backend::vst_backend::vst::channels","Information about an input / output channel. This isn\'t…",null,null],[4,"ArrangementTarget","","Target for Speaker arrangement type. Can be a cinema…",null,null],[13,"Music","","Music arrangement. Technically identical to Cinema.",68,null],[13,"Cinema","","Cinematic arrangement. Technically identical to Music.",68,null],[4,"StereoChannel","","An enum for all channels in a stereo configuration.",null,null],[13,"Left","","Left channel.",69,null],[13,"Right","","Right channel.",69,null],[4,"StereoConfig","","Possible stereo speaker configurations.",null,null],[13,"L_R","","Regular.",70,null],[13,"Ls_Rs","","Left surround, right surround.",70,null],[13,"Lc_Rc","","Left center, right center.",70,null],[13,"Sl_Sr","","Side left, side right.",70,null],[13,"C_Lfe","","Center, low frequency effects.",70,null],[4,"SurroundConfig","","Possible surround speaker configurations.",null,null],[13,"S3_0","","3.0 surround sound. Cinema: L R C Music: L R S",71,null],[13,"S3_1","","3.1 surround sound. Cinema: L R C Lfe Music: L R Lfe S",71,null],[13,"S4_0","","4.0 surround sound. Cinema: L R C S (LCRS) Music: L R Ls…",71,null],[13,"S4_1","","4.1 surround sound. Cinema: L R C Lfe S (LCRS + Lfe)…",71,null],[13,"S5_0","","5.0 surround sound. Cinema and music: L R C Ls Rs",71,null],[13,"S5_1","","5.1 surround sound. Cinema and music: L R C Lfe Ls Rs",71,null],[13,"S6_0","","6.0 surround sound. Cinema: L R C Ls Rs Cs Music: L R Ls…",71,null],[13,"S6_1","","6.1 surround sound. Cinema: L R C Lfe Ls Rs Cs Music: L R…",71,null],[13,"S7_0","","7.0 surround sound. Cinema: L R C Ls Rs Lc Rc Music: L R C…",71,null],[13,"S7_1","","7.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Music: L…",71,null],[13,"S8_0","","8.0 surround sound. Cinema: L R C Ls Rs Lc Rc Cs Music: L…",71,null],[13,"S8_1","","8.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Cs…",71,null],[13,"S10_2","","10.2 surround sound. Cinema + Music: L R C Lfe Ls Rs Tfl…",71,null],[4,"SpeakerArrangementType","","Type representing how a channel is used. Only useful for…",null,null],[13,"Custom","","Custom arrangement not specified to host.",72,null],[13,"Empty","","Empty arrangement.",72,null],[13,"Mono","","Mono channel.",72,null],[13,"Stereo","","Stereo channel. Contains type of stereo arrangement and…",72,null],[13,"Surround","","Surround channel. Contains surround arrangement and target…",72,null],[0,"editor","rsynth::backend::vst_backend::vst","All VST plugin editor related functionality.",null,null],[8,"Editor","rsynth::backend::vst_backend::vst::editor","Implemented by plugin editors.",null,null],[10,"size","","Get the size of the editor window.",73,[[]]],[10,"position","","Get the coordinates of the editor window.",73,[[]]],[11,"idle","","Editor idle call. Called by host.",73,[[]]],[11,"close","","Called when the editor window is closed.",73,[[]]],[10,"open","","Called when the editor window is opened.",73,[[]]],[10,"is_open","","Return whether the window is currently open.",73,[[]]],[11,"set_knob_mode","","Set the knob mode for this editor (if supported by host).",73,[[["knobmode",4]]]],[11,"key_up","","Receive key up event. Return `true` if the key was used.",73,[[["keycode",3]]]],[11,"key_down","","Receive key down event. Return `true` if the key was used.",73,[[["keycode",3]]]],[3,"KeyCode","","A platform independent key code. Includes modifier keys.",null,null],[12,"character","","ASCII character for key pressed (if applicable).",74,null],[12,"key","","Key pressed. See `enums::Key`.",74,null],[12,"modifier","","Modifier key bitflags. See `enums::flags::modifier_key`.",74,null],[4,"KnobMode","","Allows host to set how a parameter knob works.",null,null],[13,"Circular","","",75,null],[13,"CircularRelative","","",75,null],[13,"Linear","","",75,null],[4,"Key","","Platform independent key codes.",null,null],[13,"Back","","",76,null],[13,"Tab","","",76,null],[13,"Clear","","",76,null],[13,"Return","","",76,null],[13,"Pause","","",76,null],[13,"Escape","","",76,null],[13,"Space","","",76,null],[13,"Next","","",76,null],[13,"End","","",76,null],[13,"Home","","",76,null],[13,"Left","","",76,null],[13,"Up","","",76,null],[13,"Right","","",76,null],[13,"Down","","",76,null],[13,"PageUp","","",76,null],[13,"PageDown","","",76,null],[13,"Select","","",76,null],[13,"Print","","",76,null],[13,"Enter","","",76,null],[13,"Snapshot","","",76,null],[13,"Insert","","",76,null],[13,"Delete","","",76,null],[13,"Help","","",76,null],[13,"Numpad0","","",76,null],[13,"Numpad1","","",76,null],[13,"Numpad2","","",76,null],[13,"Numpad3","","",76,null],[13,"Numpad4","","",76,null],[13,"Numpad5","","",76,null],[13,"Numpad6","","",76,null],[13,"Numpad7","","",76,null],[13,"Numpad8","","",76,null],[13,"Numpad9","","",76,null],[13,"Multiply","","",76,null],[13,"Add","","",76,null],[13,"Separator","","",76,null],[13,"Subtract","","",76,null],[13,"Decimal","","",76,null],[13,"Divide","","",76,null],[13,"F1","","",76,null],[13,"F2","","",76,null],[13,"F3","","",76,null],[13,"F4","","",76,null],[13,"F5","","",76,null],[13,"F6","","",76,null],[13,"F7","","",76,null],[13,"F8","","",76,null],[13,"F9","","",76,null],[13,"F10","","",76,null],[13,"F11","","",76,null],[13,"F12","","",76,null],[13,"Numlock","","",76,null],[13,"Scroll","","",76,null],[13,"Shift","","",76,null],[13,"Control","","",76,null],[13,"Alt","","",76,null],[13,"Equals","","",76,null],[0,"event","rsynth::backend::vst_backend::vst","Interfaces to VST events.",null,null],[4,"Event","rsynth::backend::vst_backend::vst::event","A VST event.",null,null],[13,"Midi","","A midi event.",77,null],[13,"SysEx","","A system exclusive event.",77,null],[13,"Deprecated","","A deprecated event.",77,null],[3,"MidiEvent","","A midi event.",null,null],[12,"data","","The raw midi data associated with this event.",78,null],[12,"delta_frames","","Number of samples into the current processing block that…",78,null],[12,"live","","This midi event was created live as opposed to being…",78,null],[12,"note_length","","The length of the midi note associated with this event, if…",78,null],[12,"note_offset","","Offset in samples into note from note start, if available.",78,null],[12,"detune","","Detuning between -63 and +64 cents.",78,null],[12,"note_off_velocity","","Note off velocity between 0 and 127.",78,null],[3,"SysExEvent","","A system exclusive event.",null,null],[12,"payload","","The SysEx payload.",79,null],[12,"delta_frames","","Number of samples into the current processing block that…",79,null],[0,"host","rsynth::backend::vst_backend::vst","Host specific structures.",null,null],[8,"Host","rsynth::backend::vst_backend::vst::host","Implemented by all VST hosts.",null,null],[11,"automate","","Automate a parameter; the value has been changed.",80,[[]]],[11,"get_plugin_id","","Get the plugin ID of the currently loading plugin.",80,[[]]],[11,"idle","","An idle call.",80,[[]]],[11,"get_info","","Get vendor and product information.",80,[[]]],[11,"process_events","","Handle incoming events from the plugin.",80,[[["events",3]]]],[11,"get_time_info","","Get time information.",80,[[],[["option",4],["timeinfo",3]]]],[11,"get_block_size","","Get block size.",80,[[]]],[4,"PluginLoadError","","All possible errors that can occur when loading a VST…",null,null],[13,"InvalidPath","","Could not load given path.",81,null],[13,"NotAPlugin","","Given path is not a VST plugin.",81,null],[13,"InstanceFailed","","Failed to create an instance of this plugin.",81,null],[13,"InvalidApiVersion","","The API version which the plugin used is not supported by…",81,null],[3,"PluginLoader","","Wrapper for an externally loaded VST plugin.",null,null],[3,"PluginInstance","","An instance of an externally loaded VST plugin.",null,null],[3,"HostBuffer","","Used for constructing `AudioBuffer` instances on the host.",null,null],[0,"plugin","rsynth::backend::vst_backend::vst","Plugin specific structures.",null,null],[4,"Category","rsynth::backend::vst_backend::vst::plugin","Plugin type. Generally either Effect or Synth.",null,null],[13,"Unknown","","Unknown / not implemented",82,null],[13,"Effect","","Any effect",82,null],[13,"Synth","","VST instrument",82,null],[13,"Analysis","","Scope, tuner, spectrum analyser, etc.",82,null],[13,"Mastering","","Dynamics, etc.",82,null],[13,"Spacializer","","Panners, etc.",82,null],[13,"RoomFx","","Delays and Reverbs",82,null],[13,"SurroundFx","","Dedicated surround processor.",82,null],[13,"Restoration","","Denoiser, etc.",82,null],[13,"OfflineProcess","","Offline processing.",82,null],[13,"Shell","","Contains other plugins.",82,null],[13,"Generator","","Tone generator, etc.",82,null],[3,"Info","","A structure representing static plugin information.",null,null],[12,"name","","Plugin Name.",83,null],[12,"vendor","","Plugin Vendor.",83,null],[12,"presets","","Number of different presets.",83,null],[12,"parameters","","Number of parameters.",83,null],[12,"inputs","","Number of inputs.",83,null],[12,"outputs","","Number of outputs.",83,null],[12,"midi_inputs","","Number of MIDI input channels (1-16), or 0 for the default…",83,null],[12,"midi_outputs","","Number of MIDI output channels (1-16), or 0 for the…",83,null],[12,"unique_id","","Unique plugin ID. Can be registered with Steinberg to…",83,null],[12,"version","","Plugin version (e.g. 0001 = `v0.0.0.1`, 1283 = `v1.2.8.3`).",83,null],[12,"category","","Plugin category. Possible values are found in…",83,null],[12,"initial_delay","","Latency of the plugin in samples.",83,null],[12,"preset_chunks","","Indicates that preset data is handled in formatless chunks.",83,null],[12,"f64_precision","","Indicates whether this plugin can process f64 based…",83,null],[12,"silent_when_stopped","","If this is true, the plugin will not produce sound when…",83,null],[4,"CanDo","","Features which are optionally supported by a plugin. These…",null,null],[13,"SendEvents","","",84,null],[13,"SendMidiEvent","","",84,null],[13,"ReceiveEvents","","",84,null],[13,"ReceiveMidiEvent","","",84,null],[13,"ReceiveTimeInfo","","",84,null],[13,"Offline","","",84,null],[13,"MidiProgramNames","","",84,null],[13,"Bypass","","",84,null],[13,"ReceiveSysExEvent","","",84,null],[13,"MidiSingleNoteTuningChange","","",84,null],[13,"MidiKeyBasedInstrumentControl","","",84,null],[13,"Other","","",84,null],[8,"Plugin","","Must be implemented by all VST plugins.",null,null],[10,"get_info","","This method must return an `Info` struct.",85,[[],["info",3]]],[11,"new","","Called during initialization to pass a `HostCallback` to…",85,[[["hostcallback",3]]]],[11,"init","","Called when plugin is fully initialized.",85,[[]]],[11,"set_sample_rate","","Called when sample rate is changed by host.",85,[[]]],[11,"set_block_size","","Called when block size is changed by host.",85,[[]]],[11,"resume","","Called to transition the plugin into the resumed state.",85,[[]]],[11,"suspend","","Called to transition the plugin into the suspended state.",85,[[]]],[11,"vendor_specific","","Vendor specific handling.",85,[[]]],[11,"can_do","","Return whether plugin supports specified action.",85,[[["cando",4]],["supported",4]]],[11,"get_tail_size","","Get the tail size of plugin when it is stopped. Used in…",85,[[]]],[11,"process","","Process an audio buffer containing `f32` values.",85,[[["audiobuffer",3]]]],[11,"process_f64","","Process an audio buffer containing `f64` values.",85,[[["audiobuffer",3]]]],[11,"process_events","","Handle incoming events sent from the host.",85,[[["events",3]]]],[11,"get_parameter_object","","Get a reference to the shared parameter object.",85,[[],[["arc",3],["pluginparameters",8]]]],[11,"get_input_info","","Get information about an input channel. Only used by some…",85,[[],["channelinfo",3]]],[11,"get_output_info","","Get information about an output channel. Only used by some…",85,[[],["channelinfo",3]]],[11,"start_process","","Called one time before the start of process call.",85,[[]]],[11,"stop_process","","Called after the stop of process call.",85,[[]]],[11,"get_editor","","Return handle to plugin editor if supported. The method…",85,[[],[["box",3],["option",4]]]],[8,"PluginParameters","","Parameter object shared between the UI and processing…",null,null],[11,"change_preset","","Set the current preset to the index specified by `preset`.",86,[[]]],[11,"get_preset_num","","Get the current preset index.",86,[[]]],[11,"set_preset_name","","Set the current preset name.",86,[[["string",3]]]],[11,"get_preset_name","","Get the name of the preset at the index specified by…",86,[[],["string",3]]],[11,"get_parameter_label","","Get parameter label for parameter at `index` (e.g. \\\"db\\\",…",86,[[],["string",3]]],[11,"get_parameter_text","","Get the parameter value for parameter at `index` (e.g.…",86,[[],["string",3]]],[11,"get_parameter_name","","Get the name of parameter at `index`.",86,[[],["string",3]]],[11,"get_parameter","","Get the value of paramater at `index`. Should be value…",86,[[]]],[11,"set_parameter","","Set the value of parameter at `index`. `value` is between…",86,[[]]],[11,"can_be_automated","","Return whether parameter at `index` can be automated.",86,[[]]],[11,"string_to_parameter","","Use String as input for parameter value. Used by host to…",86,[[["string",3]]]],[11,"get_preset_data","","If `preset_chunks` is set to true in plugin info, this…",86,[[],["vec",3]]],[11,"get_bank_data","","If `preset_chunks` is set to true in plugin info, this…",86,[[],["vec",3]]],[11,"load_preset_data","","If `preset_chunks` is set to true in plugin info, this…",86,[[]]],[11,"load_bank_data","","If `preset_chunks` is set to true in plugin info, this…",86,[[]]],[3,"HostCallback","","A reference to the host which allows the plugin to call…",null,null],[0,"util","rsynth::backend::vst_backend::vst","Structures for easing the implementation of VST plugins.",null,null],[3,"AtomicFloat","rsynth::backend::vst_backend::vst::util","Simple atomic floating point variable with relaxed ordering.",null,null],[3,"ParameterTransfer","","A set of parameters that can be shared between threads.",null,null],[3,"ParameterTransferIterator","","An iterator over changed parameters. Returned by `iterate`.",null,null],[14,"plugin_main","rsynth::backend::vst_backend::vst","Exports the necessary symbols for the plugin to be used by…",null,null],[8,"VstPluginMeta","rsynth::backend::vst_backend","A VST plugin should implement this trait in addition to…",null,null],[10,"plugin_id","","",87,[[]]],[10,"category","","",87,[[],["category",4]]],[11,"get_info","","",88,[[],["info",3]]],[11,"new","","Create a new `VstPluginWrapper`. Note Normally, plugin\'s…",88,[[["hostcallback",3]]]],[11,"host","","",88,[[],["hostcallback",3]]],[11,"process","","",88,[[["audiobuffer",3]]]],[11,"process_f64","","",88,[[["audiobuffer",3]]]],[11,"get_input_info","","",88,[[],["channelinfo",3]]],[11,"get_output_info","","",88,[[],["channelinfo",3]]],[11,"process_events","","",88,[[["events",3]]]],[11,"set_sample_rate","","",88,[[]]],[8,"HostInterface","rsynth::backend","Defines an interface for communicating with the host or…",null,null],[10,"output_initialized","","Return whether the output buffers are zero-initialized.…",89,[[]]],[11,"stop","","Stop processing. For backends that do not support…",89,[[]]],[8,"Stop","","A marker trait that indicates that the backend can be…",null,null],[0,"envelope","rsynth","This module has not been thoroughly tested, so expect some…",null,null],[3,"EnvelopeIteratorItem","rsynth::envelope","",null,null],[12,"item","","",90,null],[12,"has_updated","","",90,null],[0,"staircase_envelope","","",null,null],[3,"StairCaseEnvelopeIterator","rsynth::envelope::staircase_envelope","",null,null],[3,"StairCaseEnvelope","","",null,null],[8,"Envelope","rsynth::envelope","Defines the behaviour of an envelope. An envelope allows…",null,null],[16,"Iter","","The type of the iterator.",91,null],[16,"EventType","","",91,null],[10,"iter","","Get the iterator.",91,[[]]],[10,"insert_event","","",91,[[]]],[10,"forget_past","","",91,[[]]],[0,"event","rsynth","Event handling",null,null],[3,"SysExEvent","rsynth::event","A System Exclusive (\\\"SysEx\\\") event.",null,null],[3,"RawMidiEvent","","A raw midi event.",null,null],[3,"Timed","","`Timed<E>` adds timing to an event.",null,null],[12,"time_in_frames","","The offset (in frames) of the event relative to the start…",92,null],[12,"event","","The underlying event.",92,null],[3,"Indexed","","`Indexed<E>` adds an index to an event.",null,null],[12,"index","","The index of the event",93,null],[12,"event","","The underlying event.",93,null],[3,"DeltaEvent","","",null,null],[12,"microseconds_since_previous_event","","",94,null],[12,"event","","",94,null],[0,"event_queue","","Queue events.",null,null],[3,"EventQueue","rsynth::event::event_queue","A queue for timed events.",null,null],[3,"AlwaysInsertNewBeforeOld","","Always queue the new newly queued event before the…",null,null],[3,"AlwaysInsertNewAfterOld","","Always queue the new newly queued event after the…",null,null],[3,"AlwaysIgnoreNew","","Always ignore the newly queued event in case of collision…",null,null],[3,"AlwaysRemoveOld","","Always remove the previously queued event in case of…",null,null],[4,"EventCollisionHandling","","Determines what should happen when two events are queued…",null,null],[13,"InsertNewBeforeOld","","Insert the newly queued event before the previously queued.",95,null],[13,"InsertNewAfterOld","","Insert the newly queued event after the previously queued.",95,null],[13,"IgnoreNew","","Ignore the newly queued event.",95,null],[13,"RemoveOld","","Remove the previously queued event.",95,null],[8,"HandleEventCollision","","Trait that describes how \\\"event collision\\\" (queing two…",null,null],[10,"decide_on_collision","","",96,[[],["eventcollisionhandling",4]]],[11,"new","","Create a new `EventQueue`. # Panics Panics if `capacity ==…",97,[[]]],[11,"queue_event","","Queue a new event. When the buffer is full, an element may…",97,[[["timed",3]],[["option",4],["timed",3]]]],[11,"forget_before","","Remove all events before, but not on, this threshold.",97,[[]]],[11,"clear","","Remove all events from the queue.",97,[[]]],[11,"shift_time","","Shift time forward by `new_zero_time` frames.",97,[[]]],[11,"get_last_before","","",97,[[],[["timed",3],["option",4]]]],[11,"first","","Get the first event from the `EventQueue` if there is one…",97,[[],[["timed",3],["option",4]]]],[11,"split","","Go through the `EventQueue` and alternatingly handle…",97,[[["vecstorage",3],["audiobufferinout",3],["vecstorage",3]]]],[8,"EventHandler","rsynth::event","The trait that plugins should implement in order to handle…",null,null],[10,"handle_event","","",98,[[]]],[8,"ContextualEventHandler","","The trait that plugins should implement in order to handle…",null,null],[10,"handle_event","","",99,[[]]],[11,"new","","Create a new `SysExEvent` with the given `data`.",100,[[]]],[11,"data","","Get the data from the `SysExEvent`",100,[[]]],[11,"new","","Create a new `RawMidiEvent` with the given raw data.",101,[[]]],[11,"try_new","","Try to create a new `RawMidiEvent` with the given raw…",101,[[],["option",4]]],[11,"data","","Get the raw data from a `RawMidiEvent`, including \\\"padding\\\".",101,[[]]],[11,"bytes","","Get the raw data from a `RawMidiEvent`.",101,[[]]],[11,"new","","",92,[[]]],[11,"new","","",93,[[]]],[0,"meta","rsynth","Mechanisms for defining the meta-data of a plugin or…",null,null],[3,"AudioPort","rsynth::meta","A \\\"marker\\\" struct to be used as a type parameter for the…",null,null],[3,"MidiPort","","A \\\"marker\\\" struct to be used as a type parameter for the…",null,null],[3,"MetaData","","Represents general-purpose meta-data of an audio…",null,null],[12,"general_meta","","The meta-data about the application or plugin as a whole.",102,null],[12,"audio_port_meta","","Meta-data about the audio ports.",102,null],[12,"midi_port_meta","","Meta-data about the midi ports.",102,null],[3,"InOut","","Represents meta-data about a input and output ports.",null,null],[12,"inputs","","Meta-data of the input ports.",103,null],[12,"outputs","","Meta-data of the output ports.",103,null],[8,"Meta","","Define the meta-data for an application or plug-in.",null,null],[16,"MetaData","","The data-type that represents the meta-data.",104,null],[10,"meta","","Get the meta-data.",104,[[]]],[8,"General","","Define meta-data of an application or plugin as a whole.",null,null],[16,"GeneralData","","The data-type of the general meta-data.",105,null],[10,"general","","Get the general meta-data.",105,[[]]],[8,"Name","","Implement this trait to indicate that a type can be used…",null,null],[10,"name","","Get the name.",106,[[]]],[8,"Port","","Define meta-data for input ports and output ports.",null,null],[16,"PortData","","",107,null],[10,"in_ports","","",107,[[]]],[10,"out_ports","","",107,[[]]],[0,"test_utilities","rsynth","Utilities for testing.",null,null],[3,"DummyEventHandler","rsynth::test_utilities","",null,null],[3,"TestPlugin","","A plugin useful for writing automated tests.",null,null],[11,"new","","",108,[[["vec",3],["vec",3],["vec",3],["audiochunk",3]]]],[11,"check_last","","",108,[[]]],[0,"utilities","rsynth","",null,null],[0,"polyphony","rsynth::utilities","Utility to facilitate genarating different sounds at the…",null,null],[3,"ToneIdentifier","rsynth::utilities::polyphony","Used to dispatch polyphonic event to the correct voice,…",null,null],[12,"0","","",109,null],[3,"RawMidiEventToneIdentifierDispatchClassifier","","",null,null],[4,"EventDispatchClass","","",null,null],[13,"Broadcast","","",110,null],[13,"AssignNewVoice","","",110,null],[13,"VoiceSpecific","","",110,null],[13,"ReleaseVoice","","",110,null],[4,"VoiceAssignment","","",null,null],[13,"None","","",111,null],[13,"All","","",111,null],[13,"Some","","",111,null],[0,"simple_event_dispatching","","Some basic event dispatching.",null,null],[3,"SimpleEventDispatcher","rsynth::utilities::polyphony::simple_event_dispatching","A simple event dispatcher.",null,null],[4,"SimpleVoiceState","","A simple voice state",null,null],[13,"Idle","","The voice is idle (in other words: doing nothing).",112,null],[13,"Releasing","","The voice has received a signal to stop, but is still…",112,null],[13,"Active","","The voice has not yet received a signal to stop and is…",112,null],[11,"new","","",113,[[]]],[8,"EventDispatchClassifier","rsynth::utilities::polyphony","",null,null],[16,"VoiceIdentifier","","",114,null],[10,"classify","","",114,[[],["eventdispatchclass",4]]],[8,"Voice","","Implement this trait to inform the polyphonic event…",null,null],[10,"state","","",115,[[]]],[8,"VoiceAssigner","","",null,null],[16,"Voice","","",116,null],[11,"assign_event","","",116,[[],["voiceassignment",4]]],[10,"find_active_voice","","",116,[[],["option",4]]],[10,"find_idle_voice","","",116,[[]]],[8,"EventDispatcher","","",null,null],[11,"dispatch_event","","",117,[[]]],[8,"ContextualEventDispatcher","","",null,null],[11,"dispatch_contextual_event","","Dispatch an event to the voice or voices that should…",118,[[]]],[0,"vecstorage","rsynth","Re-exports from the `vecstorage` crate.",null,null],[3,"VecStorage","rsynth::vecstorage","Re-usable memory for creating a vector of references.",null,null],[8,"AudioHandlerMeta","rsynth","Define the maximum number of audio inputs and the maximum…",null,null],[10,"max_number_of_audio_inputs","","The maximum number of audio inputs supported. This method…",119,[[]]],[10,"max_number_of_audio_outputs","","The maximum number of audio outputs supported. This method…",119,[[]]],[8,"AudioHandler","","Define how sample-rate changes are handled.",null,null],[10,"set_sample_rate","","Called when the sample-rate changes. The backend should…",120,[[]]],[8,"MidiHandlerMeta","","Define the maximum number of midi inputs and the maximum…",null,null],[10,"max_number_of_midi_inputs","","The maximum number of midi inputs supported. This method…",121,[[]]],[10,"max_number_of_midi_outputs","","The maximum number of midi outputs supported. This method…",121,[[]]],[8,"AudioRenderer","","Defines how audio is rendered.",null,null],[10,"render_buffer","","This method is called repeatedly for subsequent audio…",122,[[["audiobufferinout",3]]]],[8,"ContextualAudioRenderer","","Defines how audio is rendered, similar to the…",null,null],[10,"render_buffer","","This method called repeatedly for subsequent buffers.",123,[[["audiobufferinout",3]]]],[8,"CommonPluginMeta","","Provides common meta-data of the plugin or application to…",null,null],[10,"name","","The name of the plugin or application.",124,[[]]],[8,"CommonAudioPortMeta","","Provides some meta-data of the audio-ports used by the…",null,null],[11,"audio_input_name","","The name of the audio input with the given index. You can…",125,[[],["string",3]]],[11,"audio_output_name","","The name of the audio output with the given index. You can…",125,[[],["string",3]]],[8,"CommonMidiPortMeta","","Provides some meta-data of the midi-ports used by the…",null,null],[11,"midi_input_name","","The name of the midi input with the given index. You can…",126,[[],["string",3]]],[11,"midi_output_name","","The name of the midi output with the given index. You can…",126,[[],["string",3]]],[14,"audio_chunk","","Create an audio chunk. ## Example `// Create an audio…",null,null],[14,"vst_init","","A wrapper around the `plugin_main!` macro from the `vst`…",null,null],[11,"from","rsynth::buffer","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from_sample_","","",0,[[]]],[11,"to_sample_","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from_sample_","","",1,[[]]],[11,"to_sample_","","",1,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"into_iter","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from_sample_","","",127,[[]]],[11,"to_sample_","","",127,[[]]],[11,"par_bridge","","",127,[[],["iterbridge",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from_sample_","","",2,[[]]],[11,"to_sample_","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from_sample_","","",3,[[]]],[11,"to_sample_","","",3,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"into_iter","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from_sample_","","",128,[[]]],[11,"to_sample_","","",128,[[]]],[11,"par_bridge","","",128,[[],["iterbridge",3]]],[11,"from","rsynth::backend::combined","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from_sample_","","",35,[[]]],[11,"to_sample_","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from_sample_","","",36,[[]]],[11,"to_sample_","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from_sample_","","",37,[[]]],[11,"to_sample_","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from_sample_","","",38,[[]]],[11,"to_sample_","","",38,[[]]],[11,"par_bridge","","",38,[[],["iterbridge",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from_sample_","","",39,[[]]],[11,"to_sample_","","",39,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from_sample_","","",4,[[]]],[11,"to_sample_","","",4,[[]]],[11,"as_fail","","",4,[[],["fail",8]]],[11,"from","rsynth::backend::combined::dummy","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from_sample_","","",5,[[]]],[11,"to_sample_","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from_sample_","","",6,[[]]],[11,"to_sample_","","",6,[[]]],[11,"par_bridge","","",6,[[],["iterbridge",3]]],[11,"from","rsynth::backend::combined::hound","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from_sample_","","",8,[[]]],[11,"to_sample_","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from_sample_","","",9,[[]]],[11,"to_sample_","","",9,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from_sample_","","",7,[[]]],[11,"to_sample_","","",7,[[]]],[11,"as_fail","","",7,[[],["fail",8]]],[11,"from","rsynth::backend::combined::memory","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from_sample_","","",10,[[]]],[11,"to_sample_","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from_sample_","","",11,[[]]],[11,"to_sample_","","",11,[[]]],[11,"from","rsynth::backend::combined::midly","",31,[[]]],[11,"into","","",31,[[]]],[11,"into_iter","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from_sample_","","",31,[[]]],[11,"to_sample_","","",31,[[]]],[11,"par_bridge","","",31,[[],["iterbridge",3]]],[11,"from","rsynth::backend::combined::midly::midly::number","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from_sample_","","",129,[[]]],[11,"to_sample_","","",129,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from_sample_","","",130,[[]]],[11,"to_sample_","","",130,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from_sample_","","",131,[[]]],[11,"to_sample_","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from_sample_","","",132,[[]]],[11,"to_sample_","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from_sample_","","",133,[[]]],[11,"to_sample_","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from_sample_","","",134,[[]]],[11,"to_sample_","","",134,[[]]],[11,"from","rsynth::backend::combined::midly::midly","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_string","","",135,[[],["string",3]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from_sample_","","",135,[[]]],[11,"to_sample_","","",135,[[]]],[11,"as_fail","","",135,[[],["fail",8]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from_sample_","","",12,[[]]],[11,"to_sample_","","",12,[[]]],[11,"as_fail","","",12,[[],["fail",8]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from_sample_","","",13,[[]]],[11,"to_sample_","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from_sample_","","",14,[[]]],[11,"to_sample_","","",14,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from_sample_","","",16,[[]]],[11,"to_sample_","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from_sample_","","",17,[[]]],[11,"to_sample_","","",17,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from_sample_","","",25,[[]]],[11,"to_sample_","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from_sample_","","",26,[[]]],[11,"to_sample_","","",26,[[]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from_sample_","","",136,[[]]],[11,"to_sample_","","",136,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from_sample_","","",27,[[]]],[11,"to_sample_","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from_sample_","","",28,[[]]],[11,"to_sample_","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from_sample_","","",29,[[]]],[11,"to_sample_","","",29,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"into_iter","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from_sample_","","",137,[[]]],[11,"to_sample_","","",137,[[]]],[11,"par_bridge","","",137,[[],["iterbridge",3]]],[11,"from","rsynth::backend::jack_backend","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from_sample_","","",49,[[]]],[11,"to_sample_","","",49,[[]]],[11,"from","rsynth::backend::jack_backend::jack","",138,[[]]],[11,"into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from_sample_","","",138,[[]]],[11,"to_sample_","","",138,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from_sample_","","",139,[[]]],[11,"to_sample_","","",139,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from_sample_","","",140,[[]]],[11,"to_sample_","","",140,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from_sample_","","",141,[[]]],[11,"to_sample_","","",141,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from_sample_","","",40,[[]]],[11,"to_sample_","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from_sample_","","",41,[[]]],[11,"to_sample_","","",41,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from_sample_","","",142,[[]]],[11,"to_sample_","","",142,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from_sample_","","",143,[[]]],[11,"to_sample_","","",143,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from_sample_","","",44,[[]]],[11,"to_sample_","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from_sample_","","",45,[[]]],[11,"to_sample_","","",45,[[]]],[11,"as_fail","","",45,[[],["fail",8]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from_sample_","","",46,[[]]],[11,"to_sample_","","",46,[[]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from_sample_","","",144,[[]]],[11,"to_sample_","","",144,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from_sample_","","",145,[[]]],[11,"to_sample_","","",145,[[]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from_sample_","","",146,[[]]],[11,"to_sample_","","",146,[[]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"into_iter","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from_sample_","","",147,[[]]],[11,"to_sample_","","",147,[[]]],[11,"par_bridge","","",147,[[],["iterbridge",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from_sample_","","",148,[[]]],[11,"to_sample_","","",148,[[]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from_sample_","","",149,[[]]],[11,"to_sample_","","",149,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from_sample_","","",150,[[]]],[11,"to_sample_","","",150,[[]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from_sample_","","",151,[[]]],[11,"to_sample_","","",151,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from_sample_","","",48,[[]]],[11,"to_sample_","","",48,[[]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from_sample_","","",152,[[]]],[11,"to_sample_","","",152,[[]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from_sample_","","",153,[[]]],[11,"to_sample_","","",153,[[]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from_sample_","","",154,[[]]],[11,"to_sample_","","",154,[[]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from_sample_","","",155,[[]]],[11,"to_sample_","","",155,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from_sample_","","",156,[[]]],[11,"to_sample_","","",156,[[]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from_sample_","","",157,[[]]],[11,"to_sample_","","",157,[[]]],[11,"from","rsynth::backend::vst_backend","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from_sample_","","",88,[[]]],[11,"to_sample_","","",88,[[]]],[11,"from","rsynth::backend::vst_backend::vst::api","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from_sample_","","",50,[[]]],[11,"to_sample_","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from_sample_","","",51,[[]]],[11,"to_sample_","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from_sample_","","",52,[[]]],[11,"to_sample_","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from_sample_","","",53,[[]]],[11,"to_sample_","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from_sample_","","",54,[[]]],[11,"to_sample_","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from_sample_","","",55,[[]]],[11,"to_sample_","","",55,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from_sample_","","",56,[[]]],[11,"to_sample_","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from_sample_","","",57,[[]]],[11,"to_sample_","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from_sample_","","",58,[[]]],[11,"to_sample_","","",58,[[]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from_sample_","","",59,[[]]],[11,"to_sample_","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from_sample_","","",60,[[]]],[11,"to_sample_","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from_sample_","","",61,[[]]],[11,"to_sample_","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from_sample_","","",62,[[]]],[11,"to_sample_","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from_sample_","","",63,[[]]],[11,"to_sample_","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from_sample_","","",64,[[]]],[11,"to_sample_","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from_sample_","","",65,[[]]],[11,"to_sample_","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from_sample_","","",66,[[]]],[11,"to_sample_","","",66,[[]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from_sample_","","",158,[[]]],[11,"to_sample_","","",158,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from_sample_","","",159,[[]]],[11,"to_sample_","","",159,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from_sample_","","",160,[[]]],[11,"to_sample_","","",160,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from_sample_","","",161,[[]]],[11,"to_sample_","","",161,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from_sample_","","",162,[[]]],[11,"to_sample_","","",162,[[]]],[11,"from","rsynth::backend::vst_backend::vst::buffer","",163,[[]]],[11,"into","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from_sample_","","",163,[[]]],[11,"to_sample_","","",163,[[]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"into_iter","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from_sample_","","",164,[[]]],[11,"to_sample_","","",164,[[]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"into_iter","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from_sample_","","",165,[[]]],[11,"to_sample_","","",165,[[]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"into_iter","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from_sample_","","",166,[[]]],[11,"to_sample_","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from_sample_","","",167,[[]]],[11,"to_sample_","","",167,[[]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"into_iter","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from_sample_","","",168,[[]]],[11,"to_sample_","","",168,[[]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from_sample_","","",169,[[]]],[11,"to_sample_","","",169,[[]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",170,[[]]],[11,"into","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from_sample_","","",170,[[]]],[11,"to_sample_","","",170,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from_sample_","","",68,[[]]],[11,"to_sample_","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from_sample_","","",69,[[]]],[11,"to_sample_","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from_sample_","","",70,[[]]],[11,"to_sample_","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from_sample_","","",71,[[]]],[11,"to_sample_","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from_sample_","","",72,[[]]],[11,"to_sample_","","",72,[[]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from_sample_","","",74,[[]]],[11,"to_sample_","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from_sample_","","",75,[[]]],[11,"to_sample_","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from_sample_","","",76,[[]]],[11,"to_sample_","","",76,[[]]],[11,"from","rsynth::backend::vst_backend::vst::event","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from_sample_","","",77,[[]]],[11,"to_sample_","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from_sample_","","",78,[[]]],[11,"to_sample_","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from_sample_","","",79,[[]]],[11,"to_sample_","","",79,[[]]],[11,"from","rsynth::backend::vst_backend::vst::host","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from_sample_","","",81,[[]]],[11,"to_sample_","","",81,[[]]],[11,"as_fail","","",81,[[],["fail",8]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from_sample_","","",171,[[]]],[11,"to_sample_","","",171,[[]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from_sample_","","",172,[[]]],[11,"to_sample_","","",172,[[]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from_sample_","","",173,[[]]],[11,"to_sample_","","",173,[[]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from_sample_","","",82,[[]]],[11,"to_sample_","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from_sample_","","",83,[[]]],[11,"to_sample_","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from_sample_","","",84,[[]]],[11,"to_sample_","","",84,[[]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from_sample_","","",174,[[]]],[11,"to_sample_","","",174,[[]]],[11,"from","rsynth::backend::vst_backend::vst::util","",175,[[]]],[11,"into","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from_sample_","","",175,[[]]],[11,"to_sample_","","",175,[[]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from_sample_","","",176,[[]]],[11,"to_sample_","","",176,[[]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"into_iter","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from_sample_","","",177,[[]]],[11,"to_sample_","","",177,[[]]],[11,"par_bridge","","",177,[[],["iterbridge",3]]],[11,"from","rsynth::envelope","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from_sample_","","",90,[[]]],[11,"to_sample_","","",90,[[]]],[11,"from","rsynth::envelope::staircase_envelope","",178,[[]]],[11,"into","","",178,[[]]],[11,"into_iter","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from_sample_","","",178,[[]]],[11,"to_sample_","","",178,[[]]],[11,"par_bridge","","",178,[[],["iterbridge",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from_sample_","","",179,[[]]],[11,"to_sample_","","",179,[[]]],[11,"from","rsynth::event","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from_sample_","","",100,[[]]],[11,"to_sample_","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from_sample_","","",101,[[]]],[11,"to_sample_","","",101,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from_sample_","","",92,[[]]],[11,"to_sample_","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from_sample_","","",93,[[]]],[11,"to_sample_","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from_sample_","","",94,[[]]],[11,"to_sample_","","",94,[[]]],[11,"from","rsynth::event::event_queue","",97,[[]]],[11,"into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from_sample_","","",97,[[]]],[11,"to_sample_","","",97,[[]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from_sample_","","",180,[[]]],[11,"to_sample_","","",180,[[]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from_sample_","","",181,[[]]],[11,"to_sample_","","",181,[[]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from_sample_","","",182,[[]]],[11,"to_sample_","","",182,[[]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from_sample_","","",183,[[]]],[11,"to_sample_","","",183,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from_sample_","","",95,[[]]],[11,"to_sample_","","",95,[[]]],[11,"from","rsynth::meta","",184,[[]]],[11,"into","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from_sample_","","",184,[[]]],[11,"to_sample_","","",184,[[]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from_sample_","","",185,[[]]],[11,"to_sample_","","",185,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from_sample_","","",102,[[]]],[11,"to_sample_","","",102,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from_sample_","","",103,[[]]],[11,"to_sample_","","",103,[[]]],[11,"from","rsynth::test_utilities","",186,[[]]],[11,"into","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from_sample_","","",186,[[]]],[11,"to_sample_","","",186,[[]]],[11,"max_number_of_audio_inputs","","",108,[[]]],[11,"max_number_of_audio_outputs","","",108,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from_sample_","","",108,[[]]],[11,"to_sample_","","",108,[[]]],[11,"from","rsynth::utilities::polyphony","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from_sample_","","",109,[[]]],[11,"to_sample_","","",109,[[]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from_sample_","","",187,[[]]],[11,"to_sample_","","",187,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from_sample_","","",110,[[]]],[11,"to_sample_","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from_sample_","","",111,[[]]],[11,"to_sample_","","",111,[[]]],[11,"from","rsynth::utilities::polyphony::simple_event_dispatching","",113,[[]]],[11,"into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from_sample_","","",113,[[]]],[11,"to_sample_","","",113,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from_sample_","","",112,[[]]],[11,"to_sample_","","",112,[[]]],[11,"from","rsynth::vecstorage","",188,[[]]],[11,"into","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from_sample_","","",188,[[]]],[11,"to_sample_","","",188,[[]]],[11,"drop","","",188,[[]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","rsynth::backend::combined::midly::midly","",29,[[],["smf",3]]],[11,"clone","","",26,[[],["fps",4]]],[11,"clone","","",25,[[],["format",4]]],[11,"clone","rsynth::backend::combined::midly::midly::number","",133,[[],["u4",3]]],[11,"clone","","",134,[[],["u7",3]]],[11,"clone","rsynth::backend::combined::midly::midly","",14,[[],["eventkind",4]]],[11,"clone","","",16,[[],["metamessage",4]]],[11,"clone","rsynth::backend::combined::midly::midly::number","",130,[[],["u15",3]]],[11,"clone","","",132,[[],["u28",3]]],[11,"clone","rsynth::backend::combined::midly::midly","",137,[[],["trackiter",3]]],[11,"clone","","",12,[[],["errorkind",4]]],[11,"clone","","",136,[[],["smptetime",3]]],[11,"clone","","",28,[[],["header",3]]],[11,"clone","","",17,[[],["midimessage",4]]],[11,"clone","rsynth::backend::combined::midly::midly::number","",131,[[],["u24",3]]],[11,"clone","","",129,[[],["u14",3]]],[11,"clone","rsynth::backend::combined::midly::midly","",13,[[],["event",3]]],[11,"clone","","",27,[[],["timing",4]]],[11,"name","","",12,[[],["option",4]]],[11,"cause","","",12,[[],[["fail",8],["option",4]]]],[11,"backtrace","","",12,[[],[["option",4],["backtrace",3]]]],[11,"cause","","",135,[[],[["fail",8],["option",4]]]],[11,"backtrace","","",135,[[],[["option",4],["backtrace",3]]]],[11,"read","","",137,[[],[["result",4],["trackiter",3],["error",3]]]],[11,"write","","",137,[[],[["result",4],["error",3]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::number","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::number","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::number","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",130,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",137,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::number","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",136,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::number","",129,[[["formatter",3]],[["error",3],["result",4]]]],[11,"into","","",129,[[]]],[11,"into","","",132,[[]]],[11,"into","","",133,[[]]],[11,"into","","",131,[[]]],[11,"into","","",134,[[]]],[11,"into","","",130,[[]]],[11,"fmt","rsynth::backend::combined::midly::midly","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","","",137,[[],["option",4]]],[11,"from","rsynth::backend::combined::midly::midly::number","Lossy convertion, loses top bit.",132,[[],["u28",3]]],[11,"from","","Lossy convertion, loses top bit.",134,[[],["u7",3]]],[11,"from","rsynth::backend::combined::midly::midly","",135,[[["errorkind",4]],["error",3]]],[11,"from","rsynth::backend::combined::midly::midly::number","Lossy convertion, loses top bit.",129,[[],["u14",3]]],[11,"from","","Lossy convertion, loses top bit.",131,[[],["u24",3]]],[11,"from","","Lossy convertion, loses top bit.",133,[[],["u4",3]]],[11,"from","","Lossy convertion, loses top bit.",130,[[],["u15",3]]],[11,"eq","","",129,[[["u14",3]]]],[11,"ne","","",129,[[["u14",3]]]],[11,"eq","rsynth::backend::combined::midly::midly","",25,[[["format",4]]]],[11,"eq","","",28,[[["header",3]]]],[11,"ne","","",28,[[["header",3]]]],[11,"eq","","",27,[[["timing",4]]]],[11,"ne","","",27,[[["timing",4]]]],[11,"eq","","",13,[[["event",3]]]],[11,"ne","","",13,[[["event",3]]]],[11,"eq","rsynth::backend::combined::midly::midly::number","",130,[[["u15",3]]]],[11,"ne","","",130,[[["u15",3]]]],[11,"eq","rsynth::backend::combined::midly::midly","",29,[[["smf",3]]]],[11,"ne","","",29,[[["smf",3]]]],[11,"eq","rsynth::backend::combined::midly::midly::number","",132,[[["u28",3]]]],[11,"ne","","",132,[[["u28",3]]]],[11,"eq","","",134,[[["u7",3]]]],[11,"ne","","",134,[[["u7",3]]]],[11,"eq","rsynth::backend::combined::midly::midly","",16,[[["metamessage",4]]]],[11,"ne","","",16,[[["metamessage",4]]]],[11,"eq","","",136,[[["smptetime",3]]]],[11,"ne","","",136,[[["smptetime",3]]]],[11,"eq","rsynth::backend::combined::midly::midly::number","",131,[[["u24",3]]]],[11,"ne","","",131,[[["u24",3]]]],[11,"eq","rsynth::backend::combined::midly::midly","",17,[[["midimessage",4]]]],[11,"ne","","",17,[[["midimessage",4]]]],[11,"eq","","",26,[[["fps",4]]]],[11,"eq","rsynth::backend::combined::midly::midly::number","",133,[[["u4",3]]]],[11,"ne","","",133,[[["u4",3]]]],[11,"eq","rsynth::backend::combined::midly::midly","",14,[[["eventkind",4]]]],[11,"ne","","",14,[[["eventkind",4]]]],[11,"process","rsynth::backend::jack_backend::jack","",40,[[["client",3],["processscope",3]],["control",4]]],[11,"bitor","","Returns the union of the two sets of flags.",141,[[["clientstatus",3]],["clientstatus",3]]],[11,"bitor","","Returns the union of the two sets of flags.",151,[[["portflags",3]],["portflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",140,[[["clientoptions",3]],["clientoptions",3]]],[11,"fmt","","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"drop","","",157,[[]]],[11,"drop","","",155,[[]]],[11,"drop","","",156,[[]]],[11,"drop","","",139,[[]]],[11,"drop","","Deactivate and close the client.",138,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",140,[[["clientoptions",3]],["clientoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",151,[[["portflags",3]],["portflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",141,[[["clientstatus",3]],["clientstatus",3]]],[11,"bitor_assign","","Adds the set of flags.",151,[[["portflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",141,[[["clientstatus",3]]]],[11,"bitor_assign","","Adds the set of flags.",140,[[["clientoptions",3]]]],[11,"initialize","","",143,[[["client_name_size",3]]]],[11,"initialize","","",154,[[["port_type_size",3]]]],[11,"initialize","","",153,[[["port_name_size",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",141,[[["clientstatus",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",140,[[["clientoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",151,[[["portflags",3]]]],[11,"extend","","",140,[[]]],[11,"extend","","",151,[[]]],[11,"extend","","",141,[[]]],[11,"deref","","",143,[[]]],[11,"deref","","",154,[[]]],[11,"deref","","",153,[[]]],[11,"bitand","","Returns the intersection between the two sets of flags.",141,[[["clientstatus",3]],["clientstatus",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",151,[[["portflags",3]],["portflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",140,[[["clientoptions",3]],["clientoptions",3]]],[11,"cmp","","",150,[[["port",3]],["ordering",4]]],[11,"cmp","","",151,[[["portflags",3]],["ordering",4]]],[11,"cmp","","",141,[[["clientstatus",3]],["ordering",4]]],[11,"cmp","","",140,[[["clientoptions",3]],["ordering",4]]],[11,"fmt","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",41,[[["cycletimes",3]]]],[11,"ne","","",41,[[["cycletimes",3]]]],[11,"eq","","",48,[[["rawmidi",3]]]],[11,"ne","","",48,[[["rawmidi",3]]]],[11,"eq","","",141,[[["clientstatus",3]]]],[11,"ne","","",141,[[["clientstatus",3]]]],[11,"eq","","",151,[[["portflags",3]]]],[11,"ne","","",151,[[["portflags",3]]]],[11,"eq","","",150,[[["port",3]]]],[11,"eq","","",140,[[["clientoptions",3]]]],[11,"ne","","",140,[[["clientoptions",3]]]],[11,"eq","","",44,[[["control",4]]]],[11,"eq","","",45,[[["error",4]]]],[11,"ne","","",45,[[["error",4]]]],[11,"fmt","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",151,[[],["portflags",3]]],[11,"clone","","",148,[[],["midiout",3]]],[11,"clone","","",48,[[],["rawmidi",3]]],[11,"clone","","",41,[[],["cycletimes",3]]],[11,"clone","","",144,[[],["audioin",3]]],[11,"clone","","",145,[[],["audioout",3]]],[11,"clone","","",150,[[],[["port",3],["unowned",3]]]],[11,"clone","","",141,[[],["clientstatus",3]]],[11,"clone","","",147,[[],["midiiter",3]]],[11,"clone","","",44,[[],["control",4]]],[11,"clone","","",140,[[],["clientoptions",3]]],[11,"clone","","",46,[[],["latencytype",4]]],[11,"clone","","",45,[[],["error",4]]],[11,"clone","","",146,[[],["midiin",3]]],[11,"from_iter","","",140,[[],["clientoptions",3]]],[11,"from_iter","","",141,[[],["clientstatus",3]]],[11,"from_iter","","",151,[[],["portflags",3]]],[11,"fmt","","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",141,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",140,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",142,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",150,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",148,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",147,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"not","","Returns the complement of this set of flags.",151,[[],["portflags",3]]],[11,"not","","Returns the complement of this set of flags.",141,[[],["clientstatus",3]]],[11,"not","","Returns the complement of this set of flags.",140,[[],["clientoptions",3]]],[11,"default","","",144,[[],["audioin",3]]],[11,"default","","",145,[[],["audioout",3]]],[11,"default","","",152,[[],["unowned",3]]],[11,"default","","",48,[[],["rawmidi",3]]],[11,"default","","",148,[[],["midiout",3]]],[11,"default","","",44,[[],["control",4]]],[11,"default","","",146,[[],["midiin",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",140,[[["clientoptions",3]],["clientoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",141,[[["clientstatus",3]],["clientstatus",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",151,[[["portflags",3]],["portflags",3]]],[11,"hash","","",140,[[]]],[11,"hash","","",150,[[]]],[11,"hash","","",151,[[]]],[11,"hash","","",141,[[]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"jack_port_type","","",148,[[]]],[11,"jack_flags","","",148,[[],["portflags",3]]],[11,"jack_buffer_size","","",148,[[]]],[11,"jack_port_type","","Panics on call since the `Unowned` spec can\'t be used to…",152,[[]]],[11,"jack_flags","","Panics on call since the `Unowned` spec can\'t be used to…",152,[[],["portflags",3]]],[11,"jack_buffer_size","","Panics on call since the `Unowned` spec can\'t be used to…",152,[[]]],[11,"jack_port_type","","",146,[[]]],[11,"jack_flags","","",146,[[],["portflags",3]]],[11,"jack_buffer_size","","",146,[[]]],[11,"jack_port_type","","",144,[[]]],[11,"jack_flags","","",144,[[],["portflags",3]]],[11,"jack_buffer_size","","",144,[[]]],[11,"jack_port_type","","",145,[[]]],[11,"jack_flags","","",145,[[],["portflags",3]]],[11,"jack_buffer_size","","",145,[[]]],[11,"bitxor_assign","","Toggles the set of flags.",151,[[["portflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",140,[[["clientoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",141,[[["clientstatus",3]]]],[11,"next","","",147,[[],["option",4]]],[11,"size_hint","","",147,[[]]],[11,"count","","",147,[[]]],[11,"last","","",147,[[],["option",4]]],[11,"nth","","",147,[[],["option",4]]],[11,"partial_cmp","","",140,[[["clientoptions",3]],[["ordering",4],["option",4]]]],[11,"lt","","",140,[[["clientoptions",3]]]],[11,"le","","",140,[[["clientoptions",3]]]],[11,"gt","","",140,[[["clientoptions",3]]]],[11,"ge","","",140,[[["clientoptions",3]]]],[11,"partial_cmp","","",151,[[["portflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",151,[[["portflags",3]]]],[11,"le","","",151,[[["portflags",3]]]],[11,"gt","","",151,[[["portflags",3]]]],[11,"ge","","",151,[[["portflags",3]]]],[11,"partial_cmp","","",141,[[["clientstatus",3]],[["ordering",4],["option",4]]]],[11,"lt","","",141,[[["clientstatus",3]]]],[11,"le","","",141,[[["clientstatus",3]]]],[11,"gt","","",141,[[["clientstatus",3]]]],[11,"ge","","",141,[[["clientstatus",3]]]],[11,"partial_cmp","","",150,[[["port",3]],[["ordering",4],["option",4]]]],[11,"read","","",156,[[],[["error",3],["result",4]]]],[11,"write","","",157,[[],[["error",3],["result",4]]]],[11,"flush","","",157,[[],[["result",4],["error",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",140,[[["clientoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",141,[[["clientstatus",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",151,[[["portflags",3]]]],[11,"bitor","rsynth::backend::vst_backend::vst::api","Returns the union of the two sets of flags.",158,[[["channelflags",3]],["channelflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",162,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",159,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",161,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",160,[[["modifierkey",3]],["modifierkey",3]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"drop","rsynth::backend::vst_backend::vst::host","",172,[[]]],[11,"bitxor","rsynth::backend::vst_backend::vst::api","Returns the left flags, but with all the right flags…",162,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",161,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",158,[[["channelflags",3]],["channelflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",159,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",160,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",161,[[["midieventflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",159,[[["pluginflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",158,[[["channelflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",160,[[["modifierkey",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",162,[[["timeinfoflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",162,[[["timeinfoflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",161,[[["midieventflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",159,[[["pluginflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",160,[[["modifierkey",3]]]],[11,"bitor_assign","","Adds the set of flags.",158,[[["channelflags",3]]]],[11,"extend","","",160,[[]]],[11,"extend","","",158,[[]]],[11,"extend","","",161,[[]]],[11,"extend","","",162,[[]]],[11,"extend","","",159,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",75,[[]]],[11,"into","","",75,[[]]],[11,"into","","",76,[[]]],[11,"into","","",76,[[]]],[11,"into","","",75,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",82,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",76,[[]]],[11,"into","","",76,[[]]],[11,"into","","",75,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",82,[[]]],[11,"into","rsynth::backend::vst_backend::vst::api","Convert to integer ordinal for interop with VST api.",53,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",82,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",75,[[]]],[11,"into","","",75,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",82,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",75,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",82,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",76,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",82,[[]]],[11,"into","","",82,[[]]],[11,"into","","",82,[[]]],[11,"into","","",82,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",76,[[]]],[11,"into","","",76,[[]]],[11,"into","","",75,[[]]],[11,"into","","",76,[[]]],[11,"into","","",75,[[]]],[11,"into","rsynth::backend::vst_backend::vst::channels","Convert to VST API arrangement type.",72,[[],["speakerarrangementtype",4]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",75,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",82,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",76,[[]]],[11,"into","","",76,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",84,[[],["string",3]]],[11,"into","rsynth::backend::vst_backend::vst::channels","Convert to the VST api equivalent of this structure.",170,[[],["channelproperties",3]]],[11,"into_iter","rsynth::backend::vst_backend::vst::buffer","",165,[[]]],[11,"automate","rsynth::backend::vst_backend::vst::plugin","",174,[[]]],[11,"get_plugin_id","","",174,[[]]],[11,"idle","","",174,[[]]],[11,"get_info","","",174,[[]]],[11,"process_events","","Send events to the host.",174,[[["events",3]]]],[11,"get_time_info","","Request time information from Host.",174,[[],[["option",4],["timeinfo",3]]]],[11,"get_block_size","","Get block size.",174,[[]]],[11,"bitand","rsynth::backend::vst_backend::vst::api","Returns the intersection between the two sets of flags.",161,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",159,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",158,[[["channelflags",3]],["channelflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",160,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",162,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",76,[[],["key",4]]],[11,"from","","",75,[[],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",82,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",72,[[["channelproperties",3]],["speakerarrangementtype",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",75,[[],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",82,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",76,[[],["key",4]]],[11,"from","","",75,[[],["knobmode",4]]],[11,"from","","",76,[[],["key",4]]],[11,"from","","",75,[[],["knobmode",4]]],[11,"from","","",75,[[],["knobmode",4]]],[11,"from","","",76,[[],["key",4]]],[11,"from","","",76,[[],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",82,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",76,[[],["key",4]]],[11,"from","","",76,[[],["key",4]]],[11,"from","","",76,[[],["key",4]]],[11,"from","","",75,[[],["knobmode",4]]],[11,"from","","",76,[[],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",82,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",75,[[],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",82,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",76,[[],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",82,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",75,[[],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::event","",77,[[["event",3]],["event",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",82,[[],["category",4]]],[11,"from","","",82,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",170,[[["channelproperties",3]],["channelinfo",3]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",75,[[],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",82,[[],["category",4]]],[11,"from","","",82,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",75,[[],["knobmode",4]]],[11,"cmp","rsynth::backend::vst_backend::vst::api","",161,[[["midieventflags",3]],["ordering",4]]],[11,"cmp","","",159,[[["pluginflags",3]],["ordering",4]]],[11,"cmp","","",158,[[["channelflags",3]],["ordering",4]]],[11,"cmp","","",162,[[["timeinfoflags",3]],["ordering",4]]],[11,"cmp","","",160,[[["modifierkey",3]],["ordering",4]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"write_into","rsynth::backend::vst_backend::vst::event","",79,[[["sysexevent",3]]]],[11,"write_into","","",78,[[["sysexevent",3]]]],[11,"write_into","","",77,[[["sysexevent",3]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",161,[[["midieventflags",3]]]],[11,"ne","","",161,[[["midieventflags",3]]]],[11,"eq","","",160,[[["modifierkey",3]]]],[11,"ne","","",160,[[["modifierkey",3]]]],[11,"eq","","",162,[[["timeinfoflags",3]]]],[11,"ne","","",162,[[["timeinfoflags",3]]]],[11,"eq","","",158,[[["channelflags",3]]]],[11,"ne","","",158,[[["channelflags",3]]]],[11,"eq","","",159,[[["pluginflags",3]]]],[11,"ne","","",159,[[["pluginflags",3]]]],[11,"fmt","","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",76,[[],["key",4]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",158,[[],["channelflags",3]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",75,[[],["knobmode",4]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",52,[[],["speakerarrangementtype",4]]],[11,"clone","","",62,[[],["event",3]]],[11,"clone","","",162,[[],["timeinfoflags",3]]],[11,"clone","","",160,[[],["modifierkey",3]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",174,[[],["hostcallback",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",161,[[],["midieventflags",3]]],[11,"clone","rsynth::backend::vst_backend::vst::buffer","",165,[[],["inputs",3]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",79,[[],["sysexevent",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",65,[[],["timeinfo",3]]],[11,"clone","","",61,[[],["eventtype",4]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",83,[[],["info",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",64,[[],["sysexevent",3]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",78,[[],["midievent",3]]],[11,"clone","","",77,[[],["event",4]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",82,[[],["category",4]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",74,[[],["keycode",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",66,[[],["smpteframerate",4]]],[11,"clone","","",159,[[],["pluginflags",3]]],[11,"get_info","rsynth::backend::vst_backend::vst::host","",172,[[],["info",3]]],[11,"init","","",172,[[]]],[11,"set_sample_rate","","",172,[[]]],[11,"set_block_size","","",172,[[]]],[11,"resume","","",172,[[]]],[11,"suspend","","",172,[[]]],[11,"vendor_specific","","",172,[[]]],[11,"can_do","","",172,[[["cando",4]],["supported",4]]],[11,"get_tail_size","","",172,[[]]],[11,"process","","",172,[[["audiobuffer",3]]]],[11,"process_f64","","",172,[[["audiobuffer",3]]]],[11,"process_events","","",172,[[["events",3]]]],[11,"get_input_info","","",172,[[],["channelinfo",3]]],[11,"get_output_info","","",172,[[],["channelinfo",3]]],[11,"get_parameter_object","","",172,[[],[["arc",3],["pluginparameters",8]]]],[11,"index","rsynth::backend::vst_backend::vst::buffer","",167,[[]]],[11,"index","","",165,[[]]],[11,"from_iter","rsynth::backend::vst_backend::vst::api","",158,[[],["channelflags",3]]],[11,"from_iter","","",161,[[],["midieventflags",3]]],[11,"from_iter","","",160,[[],["modifierkey",3]]],[11,"from_iter","","",162,[[],["timeinfoflags",3]]],[11,"from_iter","","",159,[[],["pluginflags",3]]],[11,"fmt","rsynth::backend::vst_backend::vst::plugin","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::plugin","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::host","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::plugin","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"not","rsynth::backend::vst_backend::vst::api","Returns the complement of this set of flags.",161,[[],["midieventflags",3]]],[11,"not","","Returns the complement of this set of flags.",162,[[],["timeinfoflags",3]]],[11,"not","","Returns the complement of this set of flags.",158,[[],["channelflags",3]]],[11,"not","","Returns the complement of this set of flags.",159,[[],["pluginflags",3]]],[11,"not","","Returns the complement of this set of flags.",160,[[],["modifierkey",3]]],[11,"default","","",66,[[],["smpteframerate",4]]],[11,"default","rsynth::backend::vst_backend::vst::channels","",72,[[],["speakerarrangementtype",4]]],[11,"default","rsynth::backend::vst_backend::vst::plugin","",174,[[],["hostcallback",3]]],[11,"default","rsynth::backend::vst_backend::vst::buffer","",169,[[],["sendeventbuffer",3]]],[11,"default","rsynth::backend::vst_backend::vst::plugin","",83,[[],["info",3]]],[11,"default","rsynth::backend::vst_backend::vst::api","",65,[[],["timeinfo",3]]],[11,"default","rsynth::backend::vst_backend::vst::util","",176,[[],["parametertransfer",3]]],[11,"description","rsynth::backend::vst_backend::vst::host","",81,[[]]],[11,"sub","rsynth::backend::vst_backend::vst::api","Returns the set difference of the two sets of flags.",161,[[["midieventflags",3]],["midieventflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",160,[[["modifierkey",3]],["modifierkey",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",158,[[["channelflags",3]],["channelflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",162,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",159,[[["pluginflags",3]],["pluginflags",3]]],[11,"hash","","",161,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",162,[[]]],[11,"hash","","",159,[[]]],[11,"hash","","",158,[[]]],[11,"fmt","rsynth::backend::vst_backend::vst::host","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index_mut","rsynth::backend::vst_backend::vst::buffer","",167,[[]]],[11,"bitxor_assign","rsynth::backend::vst_backend::vst::api","Toggles the set of flags.",158,[[["channelflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",161,[[["midieventflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",162,[[["timeinfoflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",160,[[["modifierkey",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",159,[[["pluginflags",3]]]],[11,"next","rsynth::backend::vst_backend::vst::buffer","",164,[[],["option",4]]],[11,"next","","",166,[[],["option",4]]],[11,"next","rsynth::backend::vst_backend::vst::util","",177,[[],["option",4]]],[11,"next","rsynth::backend::vst_backend::vst::buffer","",168,[[],["option",4]]],[11,"partial_cmp","rsynth::backend::vst_backend::vst::api","",160,[[["modifierkey",3]],[["ordering",4],["option",4]]]],[11,"lt","","",160,[[["modifierkey",3]]]],[11,"le","","",160,[[["modifierkey",3]]]],[11,"gt","","",160,[[["modifierkey",3]]]],[11,"ge","","",160,[[["modifierkey",3]]]],[11,"partial_cmp","","",159,[[["pluginflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",159,[[["pluginflags",3]]]],[11,"le","","",159,[[["pluginflags",3]]]],[11,"gt","","",159,[[["pluginflags",3]]]],[11,"ge","","",159,[[["pluginflags",3]]]],[11,"partial_cmp","","",162,[[["timeinfoflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",162,[[["timeinfoflags",3]]]],[11,"le","","",162,[[["timeinfoflags",3]]]],[11,"gt","","",162,[[["timeinfoflags",3]]]],[11,"ge","","",162,[[["timeinfoflags",3]]]],[11,"partial_cmp","","",161,[[["midieventflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",161,[[["midieventflags",3]]]],[11,"le","","",161,[[["midieventflags",3]]]],[11,"gt","","",161,[[["midieventflags",3]]]],[11,"ge","","",161,[[["midieventflags",3]]]],[11,"partial_cmp","","",158,[[["channelflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",158,[[["channelflags",3]]]],[11,"le","","",158,[[["channelflags",3]]]],[11,"gt","","",158,[[["channelflags",3]]]],[11,"ge","","",158,[[["channelflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",158,[[["channelflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",162,[[["timeinfoflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",160,[[["modifierkey",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",159,[[["pluginflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",161,[[["midieventflags",3]]]],[11,"number_of_channels","rsynth::backend::combined::dummy","",5,[[]]],[11,"frames_per_second","","",5,[[]]],[11,"fill_buffer","","",5,[[["audiobufferout",3]],["result",4]]],[11,"number_of_channels","rsynth::backend::combined::hound","",8,[[]]],[11,"frames_per_second","","",8,[[]]],[11,"fill_buffer","","",8,[[["audiobufferout",3]],["result",4]]],[11,"number_of_channels","rsynth::backend::combined::memory","",10,[[]]],[11,"frames_per_second","","",10,[[]]],[11,"fill_buffer","","",10,[[["audiobufferout",3]],["result",4]]],[11,"number_of_channels","rsynth::backend::combined","",36,[[]]],[11,"frames_per_second","","",36,[[]]],[11,"fill_buffer","","",36,[[["audiobufferout",3]],["result",4]]],[11,"write_buffer","rsynth::backend::combined::dummy","",5,[[["audiobufferin",3]],["result",4]]],[11,"write_buffer","rsynth::backend::combined::hound","",9,[[["audiobufferin",3]],["result",4]]],[11,"specifies_number_of_channels","","",9,[[]]],[11,"number_of_channels","","",9,[[]]],[11,"write_buffer","rsynth::backend::combined::memory","",11,[[["audiobufferin",3]],["result",4]]],[11,"specifies_number_of_channels","","",11,[[]]],[11,"number_of_channels","","",11,[[]]],[11,"write_buffer","rsynth::backend::combined","",37,[[["audiobufferin",3]],["result",4]]],[11,"write_event","rsynth::backend::combined::dummy","",6,[[["deltaevent",3],["rawmidievent",3]]]],[11,"write_event","rsynth::backend::combined","",39,[[["deltaevent",3],["rawmidievent",3]]]],[11,"output_initialized","","",35,[[]]],[11,"stop","","",35,[[]]],[11,"output_initialized","rsynth::backend::jack_backend","",49,[[]]],[11,"stop","","",49,[[]]],[11,"output_initialized","rsynth::backend::vst_backend::vst::plugin","",174,[[]]],[11,"iter","rsynth::envelope::staircase_envelope","",179,[[]]],[11,"insert_event","","",179,[[["timed",3]]]],[11,"forget_past","","",179,[[]]],[11,"decide_on_collision","rsynth::event::event_queue","",180,[[],["eventcollisionhandling",4]]],[11,"decide_on_collision","","",181,[[],["eventcollisionhandling",4]]],[11,"decide_on_collision","","",182,[[],["eventcollisionhandling",4]]],[11,"decide_on_collision","","",183,[[],["eventcollisionhandling",4]]],[11,"handle_event","rsynth::backend::combined","",35,[[["rawmidievent",3],["timed",3]]]],[11,"handle_event","rsynth::backend::jack_backend","",49,[[["indexed",3],["timed",3]]]],[11,"handle_event","","",49,[[["timed",3],["indexed",3]]]],[11,"handle_event","rsynth::test_utilities","",186,[[]]],[11,"handle_event","","",108,[[]]],[11,"handle_event","","",186,[[]]],[11,"general","rsynth::meta","",102,[[]]],[11,"in_ports","","",102,[[]]],[11,"out_ports","","",102,[[]]],[11,"in_ports","","",102,[[]]],[11,"out_ports","","",102,[[]]],[11,"classify","rsynth::utilities::polyphony","",187,[[],["eventdispatchclass",4]]],[11,"classify","rsynth::utilities::polyphony::simple_event_dispatching","",113,[[],["eventdispatchclass",4]]],[11,"find_active_voice","","",113,[[],["option",4]]],[11,"find_idle_voice","","",113,[[]]],[11,"max_number_of_audio_inputs","rsynth::test_utilities","",108,[[]]],[11,"max_number_of_audio_outputs","","",108,[[]]],[11,"set_sample_rate","","",108,[[]]],[11,"render_buffer","","",108,[[["audiobufferinout",3]]]],[11,"as_mut","rsynth::event","",101,[[],["rawmidievent",3]]],[11,"as_mut","","",92,[[]]],[11,"as_mut","","",93,[[]]],[11,"as_ref","","",101,[[],["rawmidievent",3]]],[11,"as_ref","","",92,[[]]],[11,"as_ref","","",93,[[]]],[11,"from","rsynth::backend::combined::memory","",10,[[]]],[11,"from","rsynth::event","",101,[[["eventkind",4]]]],[11,"next","rsynth::buffer","",127,[[],["option",4]]],[11,"next","","",128,[[],["option",4]]],[11,"next","rsynth::backend::combined::dummy","",6,[[],["option",4]]],[11,"next","rsynth::backend::combined::midly","",31,[[],["option",4]]],[11,"next","rsynth::backend::combined","",38,[[],[["deltaevent",3],["option",4]]]],[11,"next","rsynth::envelope::staircase_envelope","",178,[[],["option",4]]],[11,"clone","rsynth::buffer","",0,[[],["audiobufferin",3]]],[11,"clone","","",3,[[],["audiochunk",3]]],[11,"clone","rsynth::envelope","",90,[[],["envelopeiteratoritem",3]]],[11,"clone","rsynth::event","",100,[[],["sysexevent",3]]],[11,"clone","","",101,[[],["rawmidievent",3]]],[11,"clone","","",92,[[]]],[11,"clone","","",93,[[]]],[11,"clone","","",94,[[],["deltaevent",3]]],[11,"clone","rsynth::utilities::polyphony","",109,[[],["toneidentifier",3]]],[11,"clone","","",111,[[],["voiceassignment",4]]],[11,"clone","rsynth::utilities::polyphony::simple_event_dispatching","",112,[[],["simplevoicestate",4]]],[11,"default","rsynth::utilities::polyphony","",187,[[],["rawmidieventtoneidentifierdispatchclassifier",3]]],[11,"default","rsynth::utilities::polyphony::simple_event_dispatching","",113,[[]]],[11,"eq","rsynth::buffer","",3,[[["audiochunk",3]]]],[11,"ne","","",3,[[["audiochunk",3]]]],[11,"eq","rsynth::envelope","",90,[[["envelopeiteratoritem",3]]]],[11,"ne","","",90,[[["envelopeiteratoritem",3]]]],[11,"eq","rsynth::event","",100,[[["sysexevent",3]]]],[11,"ne","","",100,[[["sysexevent",3]]]],[11,"eq","","",101,[[["rawmidievent",3]]]],[11,"ne","","",101,[[["rawmidievent",3]]]],[11,"eq","","",92,[[["timed",3]]]],[11,"ne","","",92,[[["timed",3]]]],[11,"eq","","",93,[[["indexed",3]]]],[11,"ne","","",93,[[["indexed",3]]]],[11,"eq","","",94,[[["deltaevent",3]]]],[11,"ne","","",94,[[["deltaevent",3]]]],[11,"eq","rsynth::utilities::polyphony","",109,[[["toneidentifier",3]]]],[11,"ne","","",109,[[["toneidentifier",3]]]],[11,"eq","","",111,[[["voiceassignment",4]]]],[11,"ne","","",111,[[["voiceassignment",4]]]],[11,"eq","rsynth::utilities::polyphony::simple_event_dispatching","",112,[[["simplevoicestate",4]]]],[11,"ne","","",112,[[["simplevoicestate",4]]]],[11,"deref","rsynth::event::event_queue","",97,[[]]],[11,"fmt","rsynth::buffer","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined::hound","",7,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined","",4,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::envelope","",90,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::event","",100,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",101,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::utilities::polyphony","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined::hound","",7,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined","",4,[[["formatter",3]],["result",6]]],[11,"index","rsynth::event::event_queue","",97,[[]]],[11,"index_mut","","",97,[[]]],[11,"source","rsynth::backend::combined::hound","",7,[[],[["option",4],["error",8]]]],[11,"source","rsynth::backend::combined","",4,[[],[["option",4],["error",8]]]],[11,"try_from","rsynth::backend::combined::midly::midly::number","",129,[[],[["option",4],["u14",3]]]],[11,"as_int","","",129,[[]]],[11,"try_from","","",130,[[],[["option",4],["u15",3]]]],[11,"as_int","","",130,[[]]],[11,"try_from","","",131,[[],[["option",4],["u24",3]]]],[11,"as_int","","",131,[[]]],[11,"try_from","","",132,[[],[["option",4],["u28",3]]]],[11,"as_int","","",132,[[]]],[11,"try_from","","",133,[[],[["option",4],["u4",3]]]],[11,"as_int","","",133,[[]]],[11,"try_from","","",134,[[],[["option",4],["u7",3]]]],[11,"as_int","","",134,[[]]],[11,"kind","rsynth::backend::combined::midly::midly","More information about the error itself.",135,[[],["errorkind",4]]],[11,"message","","Get the informative message on what exact part of the SMF…",12,[[]]],[11,"read","","Read an `Smf` track event from raw track data.",13,[[["option",4]],[["error",3],["event",3],["result",4]]]],[11,"parse","","Reads a single event from the given stream. Use this…",14,[[["option",4]],[["result",4],["eventkind",4],["error",3]]]],[11,"write","","Writes a single event to the given output writer.",14,[[["option",4]],[["result",4],["error",3]]]],[11,"read","","",25,[[],[["error",3],["result",4],["format",4]]]],[11,"encode","","",25,[[]]],[11,"from_code","","Does the conversion from a 2-bit fps code to an `Fps` value.",26,[[["u2",3]],["fps",4]]],[11,"as_code","","Does the conversion to a 2-bit fps code.",26,[[],["u2",3]]],[11,"from_int","","Converts an integer representing the semantic fps to an…",26,[[],[["fps",4],["option",4]]]],[11,"as_int","","Get the integral approximate fps out.",26,[[]]],[11,"as_f32","","Get the actual f32 fps out.",26,[[]]],[11,"new","","",136,[[["fps",4]],[["option",4],["smptetime",3]]]],[11,"hour","","",136,[[]]],[11,"minute","","",136,[[]]],[11,"second","","",136,[[]]],[11,"frame","","",136,[[]]],[11,"subframe","","",136,[[]]],[11,"fps","","",136,[[],["fps",4]]],[11,"second_f32","","",136,[[]]],[11,"read","","",136,[[],[["smptetime",3],["result",4],["error",3]]]],[11,"encode","","",136,[[]]],[11,"read","","",27,[[],[["error",3],["timing",4],["result",4]]]],[11,"encode","","",27,[[]]],[11,"new","","",28,[[["format",4],["timing",4]],["header",3]]],[11,"parse","","Preferred method to parse raw bytes into an `Smf` struct.",29,[[],[["error",3],["result",4],["smf",3]]]],[11,"parse_with_bytemap","","Parses tracks into events and additionally provides the…",29,[[],[["smf",3],["error",3],["result",4]]]],[11,"parse_lazy","","Does not parse events, only recognizes the file and splits…",29,[[],[["result",4],["smf",3],["error",3]]]],[11,"new","","Create a new SMF from its raw parts.",29,[[["vec",3],["header",3]],[["error",3],["smf",3],["result",4]]]],[11,"read","","Generic `read` method.",29,[[],[["error",3],["smf",3],["result",4]]]],[11,"write","","Encode and write the MIDI file into the given generic…",29,[[],[["result",4],["error",3]]]],[11,"save","","Encode and save the MIDI file to the given path.",29,[[],[["result",4],["error",3]]]],[11,"unread","","Get the remaining unread bytes.",137,[[]]],[11,"running_status","","Get the current running status of the track.",137,[[],["option",4]]],[11,"set_running_status","","Set the current running status of the track.",137,[[["option",4]]]],[11,"new","rsynth::backend::jack_backend::jack","Tell the JACK server that the program is ready to start…",138,[[["client",3]],[["error",4],["result",4],["asyncclient",3]]]],[11,"as_client","","Return the underlying `jack::Client`.",138,[[],["client",3]]],[11,"deactivate","","Tell the JACK server to remove this client from the…",138,[[],[["result",4],["error",4]]]],[11,"new","","Opens a JACK client with the given name and options. If…",139,[[["clientoptions",3]],[["result",4],["error",4]]]],[11,"activate_async","","Begin processing in real-time using the specified…",139,[[],[["error",4],["result",4],["asyncclient",3]]]],[11,"sample_rate","","The sample rate of the JACK system, as set by the user…",139,[[]]],[11,"cpu_load","","The current CPU load estimated by JACK. It is on a scale…",139,[[]]],[11,"name","","Get the name of the current client. This may differ from…",139,[[]]],[11,"buffer_size","","The current maximum size that will every be passed to the…",139,[[]]],[11,"set_buffer_size","","Change the buffer size passed to the process callback.",139,[[],[["result",4],["error",4]]]],[11,"ports","","Returns a vector of port names that match the specified…",139,[[["portflags",3],["option",4]],[["vec",3],["string",3]]]],[11,"register_port","","Create a new port for the client. This is an object used…",139,[[],[["result",4],["port",3],["error",4]]]],[11,"port_by_id","","Get a `Port` by its port id.",139,[[],[["port",3],["option",4]]]],[11,"port_by_name","","Get a `Port` by its port name.",139,[[],[["port",3],["option",4]]]],[11,"frames_since_cycle_start","","The estimated time in frames that has passed since the…",139,[[]]],[11,"frame_time","","The estimated current time in frames. This function is…",139,[[]]],[11,"frames_to_time","","The estimated time in microseconds of the specified frame…",139,[[]]],[11,"time_to_frames","","The estimated time in frames for the specified system time.",139,[[]]],[11,"is_mine","","Returns `true` if the port `port` belongs to this client.",139,[[["port",3]]]],[11,"request_monitor_by_name","","Toggle input monitoring for the port with name `port_name`.",139,[[],[["result",4],["error",4]]]],[11,"connect_ports_by_name","","Establish a connection between two ports by their full name.",139,[[],[["result",4],["error",4]]]],[11,"connect_ports","","Establish a connection between two ports.",139,[[["port",3],["port",3]],[["result",4],["error",4]]]],[11,"disconnect","","Remove all connections to/from the port.",139,[[["port",3]],[["result",4],["error",4]]]],[11,"unregister_port","","",139,[[["port",3]],[["result",4],["error",4]]]],[11,"disconnect_ports","","Remove a connection between two ports.",139,[[["port",3],["port",3]],[["result",4],["error",4]]]],[11,"disconnect_ports_by_name","","Remove a connection between two ports.",139,[[],[["result",4],["error",4]]]],[11,"type_buffer_size","","The buffer size of a port type",139,[[]]],[11,"raw","","Expose the underlying ffi pointer.",139,[[]]],[11,"from_raw","","Create a `Client` from an ffi pointer.",139,[[],["client",3]]],[18,"NO_START_SERVER","","Do not automatically start the JACK server when it is not…",140,null],[18,"USE_EXACT_NAME","","Use the exact client name requested. Otherwise, JACK…",140,null],[18,"SERVER_NAME","","Open with optional `server_name` parameter.",140,null],[18,"LOAD_NAME","","Load internal client from optional `load_name`, otherwise…",140,null],[18,"LOAD_INIT","","Pass optional `load_init` to `jack_initialize()` entry…",140,null],[18,"SESSION_ID","","Pass a SessionID token. This allows the session manager to…",140,null],[11,"empty","","Returns an empty set of flags",140,[[],["clientoptions",3]]],[11,"all","","Returns the set containing all flags.",140,[[],["clientoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",140,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",140,[[],[["clientoptions",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",140,[[],["clientoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",140,[[],["clientoptions",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",140,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",140,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",140,[[["clientoptions",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",140,[[["clientoptions",3]]]],[11,"insert","","Inserts the specified flags in-place.",140,[[["clientoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",140,[[["clientoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",140,[[["clientoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",140,[[["clientoptions",3]]]],[18,"FAILURE","","Overall operation failed. File an issue if you can get it…",141,null],[18,"INVALID_OPTION","","The operation contained an invalid or unsupported option.",141,null],[18,"NAME_NOT_UNIQUE","","The desired client name was not unique. With the…",141,null],[18,"SERVER_STARTED","","The JACK server was started as a result of this operation.…",141,null],[18,"SERVER_FAILED","","Unable to connect to the JACK server.",141,null],[18,"SERVER_ERROR","","Communication error with the JACK server.",141,null],[18,"NO_SUCH_CLIENT","","Requested client does not exist.",141,null],[18,"LOAD_FAILURE","","Unable to load internal client",141,null],[18,"INIT_FAILURE","","Unable to initialize client",141,null],[18,"SHM_FAILURE","","Unable to access shared memory",141,null],[18,"VERSION_ERROR","","Client\'s protocol version does not match",141,null],[18,"BACKEND_ERROR","","No documentation found. TODO: dig deeper",141,null],[18,"CLIENT_ZOMBIE","","No documentation found. TODO: dig deeper",141,null],[11,"empty","","Returns an empty set of flags",141,[[],["clientstatus",3]]],[11,"all","","Returns the set containing all flags.",141,[[],["clientstatus",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",141,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",141,[[],[["option",4],["clientstatus",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",141,[[],["clientstatus",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",141,[[],["clientstatus",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",141,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",141,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",141,[[["clientstatus",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",141,[[["clientstatus",3]]]],[11,"insert","","Inserts the specified flags in-place.",141,[[["clientstatus",3]]]],[11,"remove","","Removes the specified flags in-place.",141,[[["clientstatus",3]]]],[11,"toggle","","Toggles the specified flags in-place.",141,[[["clientstatus",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",141,[[["clientstatus",3]]]],[11,"new","","",40,[[],["closureprocesshandler",3]]],[11,"n_frames","","The number of frames in the current process cycle.",142,[[]]],[11,"last_frame_time","","The precise time at the start of the current process…",142,[[]]],[11,"frames_since_cycle_start","","The estimated time in frames that has passed since the…",142,[[]]],[11,"cycle_times","","Provides the internal cycle timing information as used by…",142,[[],[["result",4],["cycletimes",3],["error",4]]]],[11,"client_ptr","","Expose the `client_ptr` for low level purposes.",142,[[]]],[11,"from_raw","","Create a `ProcessScope` for the client with the given…",142,[[],["processscope",3]]],[11,"to_ffi","","",44,[[]]],[11,"to_ffi","","",46,[[]]],[11,"peek","","Return the next element without advancing the iterator.",147,[[],[["option",4],["rawmidi",3]]]],[11,"next_if","","Return the next element only if the message passes the…",147,[[],[["option",4],["rawmidi",3]]]],[11,"write","","Write an event into an event port buffer.",149,[[["rawmidi",3]],[["result",4],["error",4]]]],[11,"lost_count","","Get the number of events that could not be written to…",149,[[]]],[11,"max_event_size","","Get the size of the largest event that can be stored by…",149,[[]]],[11,"as_slice","","Read the received audio data.",150,[[["processscope",3]]]],[11,"as_mut_slice","","Get a slice to write audio data to.",150,[[["processscope",3]]]],[11,"iter","","Get an iterator over midi events.",150,[[["processscope",3]],["midiiter",3]]],[11,"writer","","Create a writer that can write midi events to the…",150,[[["processscope",3]],["midiwriter",3]]],[11,"spec","","Returns the spec that was used to create this port.",150,[[]]],[11,"clone_unowned","","Return a copy of port as an unowned port that can still be…",150,[[],[["port",3],["unowned",3]]]],[11,"name","","Returns the full name of the port, including the…",150,[[],[["result",4],["error",4],["string",3]]]],[11,"short_name","","Returns the short name of the port, it excludes the…",150,[[],[["result",4],["error",4],["string",3]]]],[11,"flags","","The flags for the port. These are set when the port is…",150,[[],["portflags",3]]],[11,"port_type","","The port type. JACK\'s built in types include `\\\"32 bit…",150,[[],[["result",4],["error",4],["string",3]]]],[11,"connected_count","","Number of ports connected to/from `&self`.",150,[[],[["result",4],["error",4]]]],[11,"is_connected_to","","Returns `true` if the port is directly connected to a port…",150,[[],[["result",4],["error",4]]]],[11,"aliases","","Get the alias names for `self`.",150,[[],[["error",4],["result",4],["vec",3]]]],[11,"is_monitoring_input","","Returns `true` if monitoring has been requested for `self`.",150,[[],[["result",4],["error",4]]]],[11,"request_monitor","","Turn input monitoring for the port on or off.",150,[[],[["result",4],["error",4]]]],[11,"ensure_monitor","","If the `CAN_MONITOR` flag is set for the port, then input…",150,[[],[["result",4],["error",4]]]],[11,"set_name","","Set\'s the short name of the port. If the full name is…",150,[[],[["result",4],["error",4]]]],[11,"set_alias","","Sets `alias` as an alias for `self`.",150,[[],[["result",4],["error",4]]]],[11,"unset_alias","","Remove `alias` as an alias for port. May be called at any…",150,[[],[["result",4],["error",4]]]],[11,"from_raw","","Create a Port from raw JACK pointers.",150,[[["weak",3]],["port",3]]],[11,"client_ptr","","Obtain the client pointer that spawned this port.",150,[[]]],[11,"raw","","Obtain the ffi port pointer.",150,[[]]],[11,"buffer","","Obtain the buffer that the Port is holding. For standard…",150,[[]]],[11,"set_latency_range","","Set the minimum and maximum latencies defined by mode for…",150,[[["latencytype",4]]]],[11,"get_latency_range","","Returns a tuple of the minimum and maximum latencies…",150,[[["latencytype",4]]]],[18,"IS_INPUT","","The port can receive data.",151,null],[18,"IS_OUTPUT","","Data can be read from the port.",151,null],[18,"IS_PHYSICAL","","Port corresponds to some kind of physical I/O connector.",151,null],[18,"CAN_MONITOR","","A call to `jack_port_request_monitor()` makes sense.",151,null],[18,"IS_TERMINAL","","For an input port, the data received by the port will not…",151,null],[11,"empty","","Returns an empty set of flags",151,[[],["portflags",3]]],[11,"all","","Returns the set containing all flags.",151,[[],["portflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",151,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",151,[[],[["portflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",151,[[],["portflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",151,[[],["portflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",151,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",151,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",151,[[["portflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",151,[[["portflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",151,[[["portflags",3]]]],[11,"remove","","Removes the specified flags in-place.",151,[[["portflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",151,[[["portflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",151,[[["portflags",3]]]],[11,"new","","Allocates a ringbuffer of a specified size.",155,[[],[["result",4],["ringbuffer",3]]]],[11,"mlock","","Lock a ringbuffer data block into memory.",155,[[]]],[11,"reset","","Resets the ring buffer, making an empty buffer.",155,[[]]],[11,"into_reader_writer","","Create a reader and writer, to use the ring buffer.",155,[[]]],[11,"from_reader_writer","","Re-create the ring buffer object from reader and writer.…",155,[[["ringbufferwriter",3],["ringbufferreader",3]],["ringbuffer",3]]],[11,"get_vector","","Fill a data structure with a description of the current…",156,[[]]],[11,"read_buffer","","Read data from the ringbuffer. Returns: the number of…",156,[[]]],[11,"peek","","Read data from the ringbuffer. Opposed to read_buffer()…",156,[[]]],[11,"advance","","Advance the read pointer. use this after peek/peek_iter or…",156,[[]]],[11,"space","","Return the number of bytes available for reading.",156,[[]]],[11,"peek_iter","","Iterator that goes over all the data available to read.",156,[[],[["iter",3],["chain",3]]]],[11,"write_buffer","","Write data into the ringbuffer. Returns: The number of…",157,[[]]],[11,"advance","","Advance the write pointer. use this after peek_iter or…",157,[[]]],[11,"space","","Return the number of bytes available for writing.",157,[[]]],[11,"get_vector","","Return a pair of slices of the current writable space in…",157,[[]]],[11,"peek_iter","","Iterator that goes over all the data available to write.",157,[[],[["chain",3],["itermut",3]]]],[11,"get_plugin","rsynth::backend::vst_backend::vst::api","Return handle to Plugin object. Only works for plugins…",50,[[],["box",3]]],[11,"drop_plugin","","Drop the Plugin object. Only works for plugins created…",50,[[]]],[11,"from","","Create a `Supported` value from an integer if possible.",53,[[],[["supported",4],["option",4]]]],[11,"events","","Use this in your impl of process_events() to process the…",60,[[]]],[18,"ACTIVE","","Indicates channel is active. Ignored by host.",158,null],[18,"STEREO","","Indicates channel is first of stereo pair.",158,null],[18,"SPEAKER","","Use channel\'s specified speaker_arrangement instead of…",158,null],[11,"empty","","Returns an empty set of flags",158,[[],["channelflags",3]]],[11,"all","","Returns the set containing all flags.",158,[[],["channelflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",158,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",158,[[],[["option",4],["channelflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",158,[[],["channelflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",158,[[],["channelflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",158,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",158,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",158,[[["channelflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",158,[[["channelflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",158,[[["channelflags",3]]]],[11,"remove","","Removes the specified flags in-place.",158,[[["channelflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",158,[[["channelflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",158,[[["channelflags",3]]]],[18,"HAS_EDITOR","","Plugin has an editor.",159,null],[18,"CAN_REPLACING","","Plugin can process 32 bit audio. (Mandatory in VST 2.4).",159,null],[18,"PROGRAM_CHUNKS","","Plugin preset data is handled in formatless chunks.",159,null],[18,"IS_SYNTH","","Plugin is a synth.",159,null],[18,"NO_SOUND_IN_STOP","","Plugin does not produce sound when all input is silence.",159,null],[18,"CAN_DOUBLE_REPLACING","","Supports 64 bit audio processing.",159,null],[11,"empty","","Returns an empty set of flags",159,[[],["pluginflags",3]]],[11,"all","","Returns the set containing all flags.",159,[[],["pluginflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",159,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",159,[[],[["option",4],["pluginflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",159,[[],["pluginflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",159,[[],["pluginflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",159,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",159,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",159,[[["pluginflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",159,[[["pluginflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",159,[[["pluginflags",3]]]],[11,"remove","","Removes the specified flags in-place.",159,[[["pluginflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",159,[[["pluginflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",159,[[["pluginflags",3]]]],[18,"SHIFT","","Shift key.",160,null],[18,"ALT","","Alt key.",160,null],[18,"COMMAND","","Control on mac.",160,null],[18,"CONTROL","","Command on mac, ctrl on other.",160,null],[11,"empty","","Returns an empty set of flags",160,[[],["modifierkey",3]]],[11,"all","","Returns the set containing all flags.",160,[[],["modifierkey",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",160,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",160,[[],[["modifierkey",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",160,[[],["modifierkey",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",160,[[],["modifierkey",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",160,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",160,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",160,[[["modifierkey",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",160,[[["modifierkey",3]]]],[11,"insert","","Inserts the specified flags in-place.",160,[[["modifierkey",3]]]],[11,"remove","","Removes the specified flags in-place.",160,[[["modifierkey",3]]]],[11,"toggle","","Toggles the specified flags in-place.",160,[[["modifierkey",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",160,[[["modifierkey",3]]]],[18,"REALTIME_EVENT","","This event is played live (not in playback from a…",161,null],[11,"empty","","Returns an empty set of flags",161,[[],["midieventflags",3]]],[11,"all","","Returns the set containing all flags.",161,[[],["midieventflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",161,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",161,[[],[["option",4],["midieventflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",161,[[],["midieventflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",161,[[],["midieventflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",161,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",161,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",161,[[["midieventflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",161,[[["midieventflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",161,[[["midieventflags",3]]]],[11,"remove","","Removes the specified flags in-place.",161,[[["midieventflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",161,[[["midieventflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",161,[[["midieventflags",3]]]],[18,"TRANSPORT_CHANGED","","Indicates that play, cycle or record state has changed.",162,null],[18,"TRANSPORT_PLAYING","","Set if Host sequencer is currently playing.",162,null],[18,"TRANSPORT_CYCLE_ACTIVE","","Set if Host sequencer is in cycle mode.",162,null],[18,"TRANSPORT_RECORDING","","Set if Host sequencer is in record mode.",162,null],[18,"AUTOMATION_WRITING","","Set if automation write mode active (record parameter…",162,null],[18,"AUTOMATION_READING","","Set if automation read mode active (play parameter changes).",162,null],[18,"NANOSECONDS_VALID","","Set if TimeInfo::nanoseconds is valid.",162,null],[18,"PPQ_POS_VALID","","Set if TimeInfo::ppq_pos is valid.",162,null],[18,"TEMPO_VALID","","Set if TimeInfo::tempo is valid.",162,null],[18,"BARS_VALID","","Set if TimeInfo::bar_start_pos is valid.",162,null],[18,"CYCLE_POS_VALID","","Set if both TimeInfo::cycle_start_pos and…",162,null],[18,"TIME_SIG_VALID","","Set if both TimeInfo::time_sig_numerator and…",162,null],[18,"SMPTE_VALID","","Set if both TimeInfo::smpte_offset and…",162,null],[18,"VST_CLOCK_VALID","","Set if TimeInfo::samples_to_next_clock is valid.",162,null],[11,"empty","","Returns an empty set of flags",162,[[],["timeinfoflags",3]]],[11,"all","","Returns the set containing all flags.",162,[[],["timeinfoflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",162,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",162,[[],[["option",4],["timeinfoflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",162,[[],["timeinfoflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",162,[[],["timeinfoflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",162,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",162,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",162,[[["timeinfoflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",162,[[["timeinfoflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",162,[[["timeinfoflags",3]]]],[11,"remove","","Removes the specified flags in-place.",162,[[["timeinfoflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",162,[[["timeinfoflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",162,[[["timeinfoflags",3]]]],[11,"from_raw","rsynth::backend::vst_backend::vst::buffer","Create an `AudioBuffer` from raw pointers. Only really…",163,[[],["audiobuffer",3]]],[11,"input_count","","The number of input channels that this buffer was created…",163,[[]]],[11,"output_count","","The number of output channels that this buffer was created…",163,[[]]],[11,"samples","","The number of samples in this buffer (same for all channels)",163,[[]]],[11,"split","","Split this buffer into separate inputs and outputs.",163,[[]]],[11,"zip","","Create an iterator over pairs of input buffers and output…",163,[[],["audiobufferiterator",3]]],[11,"len","","Number of channels",165,[[]]],[11,"is_empty","","Returns true if the buffer is empty",165,[[]]],[11,"get","","Access channel at the given index",165,[[]]],[11,"split_at","","Split borrowing at the given index, like for slices",165,[[]]],[11,"len","","Number of channels",167,[[]]],[11,"is_empty","","Returns true if the buffer is empty",167,[[]]],[11,"get","","Access channel at the given index",167,[[]]],[11,"get_mut","","Mutably access channel at the given index",167,[[]]],[11,"split_at_mut","","Split borrowing at the given index, like for slices",167,[[]]],[11,"new","","Creates a buffer for sending up to the given number of…",169,[[],["sendeventbuffer",3]]],[11,"send_events","","Sends events to the host. See the `fwd_midi` example.",169,[[["host",8]]]],[11,"send_events_to_plugin","","Sends events from the host to a plugin.",169,[[["plugin",8]]]],[11,"new","rsynth::backend::vst_backend::vst::channels","Construct a new `ChannelInfo` object.",170,[[["string",3],["speakerarrangementtype",4],["option",4],["option",4]],["channelinfo",3]]],[11,"is_speaker_type","","Determine whether this channel is part of a surround…",72,[[]]],[11,"is_left_stereo","","Determine whether this channel is the left speaker in a…",72,[[]]],[11,"load","rsynth::backend::vst_backend::vst::host","Load a plugin at the given path with the given host.",171,[[["path",3],["arc",3],["mutex",3]],[["result",4],["pluginloaderror",4],["pluginloader",3]]]],[11,"instance","","Try to create an instance of this VST plugin.",171,[[],[["plugininstance",3],["pluginloaderror",4],["result",4]]]],[11,"new","","Create a `HostBuffer` for a given number of input and…",173,[[],["hostbuffer",3]]],[11,"from_info","","Create a `HostBuffer` for the number of input and output…",173,[[["info",3]],["hostbuffer",3]]],[11,"bind","","Bind sample arrays to the `HostBuffer` to create an…",173,[[],["audiobuffer",3]]],[11,"input_count","","Number of input channels supported by this `HostBuffer`.",173,[[]]],[11,"output_count","","Number of output channels supported by this `HostBuffer`.",173,[[]]],[11,"from_str","rsynth::backend::vst_backend::vst::plugin","Converts a string to a `CanDo` instance. Any given string…",84,[[],["cando",4]]],[11,"vst_version","","Get the VST API version supported by the host e.g. `2400 =…",174,[[]]],[11,"raw_callback","","Get the callback for calling host-specific extensions",174,[[],["option",4]]],[11,"raw_effect","","Get the effect pointer for calling host-specific extensions",174,[[]]],[11,"new","rsynth::backend::vst_backend::vst::util","New atomic float with initial value `value`.",175,[[],["atomicfloat",3]]],[11,"get","","Get the current value of the atomic float.",175,[[]]],[11,"set","","Set the value of the atomic float to `value`.",175,[[]]],[11,"new","","Create a new parameter set with `parameter_count`…",176,[[],["parametertransfer",3]]],[11,"set_parameter","","Set the value of the parameter with index `index` to…",176,[[]]],[11,"get_parameter","","Get the current value of the parameter with index `index`.",176,[[]]],[11,"iterate","","Iterate over all parameters marked as changed. If…",176,[[],["parametertransferiterator",3]]],[11,"with_capacity","rsynth::vecstorage","",188,[[],["vecstorage",3]]],[11,"vec_guard","","Creates a new `VecGuard` using the memory allocated by…",188,[[],["vecguard",3]]]],"p":[[3,"AudioBufferIn"],[3,"AudioBufferOut"],[3,"AudioBufferInOut"],[3,"AudioChunk"],[4,"CombinedError"],[3,"AudioDummy"],[3,"MidiDummy"],[4,"HoundAudioError"],[3,"HoundAudioReader"],[3,"HoundAudioWriter"],[3,"AudioChunkReader"],[3,"AudioBufferWriter"],[4,"ErrorKind"],[3,"Event"],[4,"EventKind"],[13,"Midi"],[4,"MetaMessage"],[4,"MidiMessage"],[13,"NoteOff"],[13,"NoteOn"],[13,"Aftertouch"],[13,"Controller"],[13,"ProgramChange"],[13,"ChannelAftertouch"],[13,"PitchBend"],[4,"Format"],[4,"Fps"],[4,"Timing"],[3,"Header"],[3,"Smf"],[8,"TrackRepr"],[3,"MidlyMidiReader"],[8,"AudioReader"],[8,"AudioWriter"],[8,"MidiWriter"],[3,"MidiWriterWrapper"],[3,"TestAudioReader"],[3,"TestAudioWriter"],[3,"TestMidiReader"],[3,"TestMidiWriter"],[3,"ClosureProcessHandler"],[3,"CycleTimes"],[8,"NotificationHandler"],[8,"ProcessHandler"],[4,"Control"],[4,"Error"],[4,"LatencyType"],[8,"PortSpec"],[3,"RawMidi"],[3,"JackHost"],[3,"AEffect"],[3,"ChannelProperties"],[4,"SpeakerArrangementType"],[4,"Supported"],[4,"ProcessLevel"],[4,"HostLanguage"],[4,"FileSelectCommand"],[4,"FileSelectType"],[3,"FileType"],[3,"FileSelect"],[3,"Events"],[4,"EventType"],[3,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[3,"TimeInfo"],[4,"SmpteFrameRate"],[8,"WriteIntoPlaceholder"],[4,"ArrangementTarget"],[4,"StereoChannel"],[4,"StereoConfig"],[4,"SurroundConfig"],[4,"SpeakerArrangementType"],[8,"Editor"],[3,"KeyCode"],[4,"KnobMode"],[4,"Key"],[4,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[8,"Host"],[4,"PluginLoadError"],[4,"Category"],[3,"Info"],[4,"CanDo"],[8,"Plugin"],[8,"PluginParameters"],[8,"VstPluginMeta"],[3,"VstPluginWrapper"],[8,"HostInterface"],[3,"EnvelopeIteratorItem"],[8,"Envelope"],[3,"Timed"],[3,"Indexed"],[3,"DeltaEvent"],[4,"EventCollisionHandling"],[8,"HandleEventCollision"],[3,"EventQueue"],[8,"EventHandler"],[8,"ContextualEventHandler"],[3,"SysExEvent"],[3,"RawMidiEvent"],[3,"MetaData"],[3,"InOut"],[8,"Meta"],[8,"General"],[8,"Name"],[8,"Port"],[3,"TestPlugin"],[3,"ToneIdentifier"],[4,"EventDispatchClass"],[4,"VoiceAssignment"],[4,"SimpleVoiceState"],[3,"SimpleEventDispatcher"],[8,"EventDispatchClassifier"],[8,"Voice"],[8,"VoiceAssigner"],[8,"EventDispatcher"],[8,"ContextualEventDispatcher"],[8,"AudioHandlerMeta"],[8,"AudioHandler"],[8,"MidiHandlerMeta"],[8,"AudioRenderer"],[8,"ContextualAudioRenderer"],[8,"CommonPluginMeta"],[8,"CommonAudioPortMeta"],[8,"CommonMidiPortMeta"],[3,"AudioBufferOutChannelIteratorMut"],[3,"InterlacedSampleIterator"],[3,"u14"],[3,"u15"],[3,"u24"],[3,"u28"],[3,"u4"],[3,"u7"],[3,"Error"],[3,"SmpteTime"],[3,"TrackIter"],[3,"AsyncClient"],[3,"Client"],[3,"ClientOptions"],[3,"ClientStatus"],[3,"ProcessScope"],[3,"CLIENT_NAME_SIZE"],[3,"AudioIn"],[3,"AudioOut"],[3,"MidiIn"],[3,"MidiIter"],[3,"MidiOut"],[3,"MidiWriter"],[3,"Port"],[3,"PortFlags"],[3,"Unowned"],[3,"PORT_NAME_SIZE"],[3,"PORT_TYPE_SIZE"],[3,"RingBuffer"],[3,"RingBufferReader"],[3,"RingBufferWriter"],[3,"ChannelFlags"],[3,"PluginFlags"],[3,"ModifierKey"],[3,"MidiEventFlags"],[3,"TimeInfoFlags"],[3,"AudioBuffer"],[3,"AudioBufferIterator"],[3,"Inputs"],[3,"InputIterator"],[3,"Outputs"],[3,"OutputIterator"],[3,"SendEventBuffer"],[3,"ChannelInfo"],[3,"PluginLoader"],[3,"PluginInstance"],[3,"HostBuffer"],[3,"HostCallback"],[3,"AtomicFloat"],[3,"ParameterTransfer"],[3,"ParameterTransferIterator"],[3,"StairCaseEnvelopeIterator"],[3,"StairCaseEnvelope"],[3,"AlwaysInsertNewBeforeOld"],[3,"AlwaysInsertNewAfterOld"],[3,"AlwaysIgnoreNew"],[3,"AlwaysRemoveOld"],[3,"AudioPort"],[3,"MidiPort"],[3,"DummyEventHandler"],[3,"RawMidiEventToneIdentifierDispatchClassifier"],[3,"VecStorage"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);