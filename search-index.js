var N=null,E="",T="t",U="u",searchIndex={};
var R=["rsynth::dev_utilities","Re-usable memory for creating a vector of references.","This can be used as a vector of references.","with_capacity","vec_guard","rsynth","rsynth::backend","hostcallback","audiobuffer","channelinfo","rsynth::envelope","envelope","aftertouch","rsynth::middleware::envelope","rsynth::middleware","frame_counter","EventType","rsynth::middleware::polyphony","rsynth::middleware::polyphony::EventType","voicewithstate","set_sample_rate","rsynth::dev_utilities::vecstorage","try_from","try_into","borrow_mut","result","type_id","rsynth::backend::vst_backend","borrow","typeid","rsynth::envelope::staircase_envelope","to_owned","clone_into","rsynth::event","rsynth::middleware::envelope::aftertouch","rsynth::middleware::frame_counter","framecounter","rsynth::middleware::timesplit","rsynth::middleware::zero_init","rsynth::note","rsynth::output_mode","get_mut","insert_event","forget_past","handle_event","find_idle_voice","find_voice_playing_note","mark_voice_as_active","mark_voice_as_inactive","event_type","eventtype","audio_input_name","audio_output_name","render_buffer","context","string","envelopeiteratoritem","option","notedata","notestate","default","deref_mut","formatter","specialize","distinction","sysexevent","rawmidievent","Transparent","VecStorage","VecStorageMut","VstPlugin","VstPluginWrapper","WithHost","TransparentContext","EnvelopeIteratorItem","Envelope","EventHandler","SysExEvent","RawMidiEvent","AfterTouchEvent","EnvelopeContext","WithEnvelope","WithFrameCounter","FrameCounter","FrameCounterMiddleware","VoiceWithState","VoiceStealMode","PolyphonicEvent","Polyphonic","SimpleVoiceStealer","TimeSplit","ZeroInit","NoteData","NoteState","OutputMode","VecGuard","VecGuardMut","StairCaseEnvelopeIterator","StairCaseEnvelope","AfterTouchContext","AfterTouchMarker","EnvelopeContextWrapper","AfterTouchMiddleware","FrameCounterContext","Substitution"];

searchIndex["rsynth"]={"doc":"Rsynth The `rsynth` crate makes it easier to write…","i":[[0,"dev_utilities",R[5],"Utilities to be used when developing backends and…",N,N],[0,"transparent",R[0],E,N,N],[8,R[67],"rsynth::dev_utilities::transparent","A trait for defining middleware that can work with…",N,N],[16,"Inner",E,E,0,N],[10,"get",E,E,0,[[["self"]]]],[10,R[41],E,E,0,[[["self"]]]],[0,"vecstorage",R[0],"`VecStorage` and `VecStorageMut` Struct to be able to…",N,N],[3,R[68],R[21],R[1],N,N],[3,R[95],E,R[2],N,N],[3,R[69],E,R[1],N,N],[3,R[96],E,R[2],N,N],[11,R[3],E,E,1,[[["usize"]],["self"]]],[11,R[4],E,"Creates a new VecGuard using the memory allocated by…",1,[[["self"]],["vecguard"]]],[11,R[3],E,E,2,[[["usize"]],["self"]]],[11,R[4],E,"Creates a new VecGuardMut using the memory allocated by…",2,[[["self"]],["vecguardmut"]]],[0,"backend",R[5],"Defines the different backends.",N,N],[0,"jack_backend",R[6],"Wrapper for the [JACK] backend. Support is only enabled if…",N,N],[5,"run","rsynth::backend::jack_backend","Run the plugin until the user presses a key on the…",N,[[["p"]]]],[0,"vst_backend",R[6],"Wrapper for the VST backend.",N,N],[3,R[71],R[27],"A struct used internally by the `vst_init` macro.…",N,N],[8,R[70],E,"A VST plugin should implement this trait in addition to…",N,N],[18,"PLUGIN_ID",E,E,3,N],[18,"CATEGORY",E,E,3,N],[11,"get_info",E,E,4,[[["self"]],["info"]]],[11,"new",E,E,4,[[[R[7]],["p"]],["self"]]],[11,"host",E,E,4,[[["self"]],[R[7]]]],[11,"process",E,E,4,[[["self"],[R[8]]]]],[11,"process_f64",E,E,4,[[["self"],[R[8]]]]],[11,"get_input_info",E,E,4,[[["self"],["i32"]],[R[9]]]],[11,"get_output_info",E,E,4,[[["self"],["i32"]],[R[9]]]],[11,"process_events",E,E,4,[[["self"],["events"]]]],[11,R[20],E,E,4,[[["self"],["f64"]]]],[8,"HostInterface",R[6],"Defines an interface for communicating with the host or…",N,N],[8,R[72],E,"Interface that can be used to access the host from a…",N,N],[10,"host",E,E,5,[[["self"]],["h"]]],[0,R[54],R[5],"Traits and macros for working with context.",N,N],[8,R[73],"rsynth::context","Same as the `BorrowMut` trait from `std`, but without the…",N,N],[10,"get",E,E,6,[[["self"]],[T]]],[0,R[11],R[5],E,N,N],[3,R[74],R[10],E,N,N],[12,"item",E,E,7,N],[12,"has_updated",E,E,7,N],[0,"staircase_envelope",E,E,N,N],[3,R[97],R[30],E,N,N],[3,R[98],E,E,N,N],[8,R[75],R[10],"Defines the behaviour of an envelope. An envelope allows…",N,N],[16,"Iter",E,"The type of the iterator.",8,N],[16,R[16],E,E,8,N],[10,"iter",E,"Get the iterator.",8,[[["self"]]]],[10,R[42],E,E,8,[[["self"]]]],[10,R[43],E,E,8,[[["self"],["u32"]]]],[0,"event",R[5],"This module defines the `EventHandler` trait and some…",N,N],[3,R[77],R[33],"A System Exclusive (\"SysEx\") event.",N,N],[3,R[78],E,"A raw midi event.",N,N],[3,"Timed",E,"`Timed<E>` adds timing to an event.",N,N],[12,"time_in_frames",E,"The offset (in frames) of the event. E.g. when…",9,N],[12,"event",E,"The underlying event.",9,N],[8,R[76],E,"The trait that plugins should implement in order to handle…",N,N],[10,R[44],E,E,10,[[["self"],["c"],["e"]]]],[11,"new",E,"Create a new `SysExEvent` with the given `data`.",11,[[],["self"]]],[11,"data",E,"Get the data from the `SysExEvent`",11,[[["self"]]]],[11,"new",E,"Create a new `RawMidiEvent` with the given raw data.",12,[[],["self"]]],[11,"data",E,"Get the raw data from a `RawMidiEvent`.",12,[[["self"]]]],[11,"new",E,E,9,[[["u32"],["e"]],["self"]]],[0,"middleware",R[5],"Middleware like support for polyphony, ...",N,N],[0,R[11],R[14],E,N,N],[0,R[12],R[13],E,N,N],[3,R[99],R[34],E,N,N],[3,R[100],E,E,N,N],[3,R[101],E,E,N,N],[3,R[102],E,E,N,N],[8,R[79],E,E,N,N],[10,R[12],E,E,13,[[["self"]],[["u8"],[R[57],["u8"]]]]],[8,R[80],R[13],E,N,N],[16,"Marker",E,E,14,N],[16,"Data",E,E,14,N],[10,"data",E,E,14,[[["self"]]]],[8,R[81],E,E,N,N],[10,R[11],E,E,15,[[["self"]]]],[0,R[15],R[14],E,N,N],[3,R[83],R[35],"Example middleware to illustrate how middleware can…",N,N],[3,R[103],E,E,N,N],[3,R[84],E,E,N,N],[8,R[82],E,E,N,N],[10,R[15],E,E,16,[[["self"]],[R[36]]]],[11,"number_of_frames_rendered",E,E,17,[[["self"]],["usize"]]],[11,"new",E,E,18,[[["p"]],["self"]]],[0,"polyphony",R[14],E,N,N],[3,R[85],R[17],"A struct for communicating voices and states between…",N,N],[12,"voice",E,E,19,N],[12,"state",E,E,19,N],[3,R[88],E,"`Polyphonic` is middleware that adds polyphony by…",N,N],[3,R[89],E,"A simple voice stealer algorithm that just returns",N,N],[4,R[16],E,"This struct defines what should happen with an event in a…",N,N],[13,"Broadcast",E,"The event should be broadcasted to all voices.",20,N],[13,"VoiceSpecific",E,"The event is specific for the voice with the given tone.",20,N],[12,"tone",R[18],E,20,N],[13,"NewVoice",R[17],"The event indicates that a new voice should be created…",20,N],[12,"tone",R[18],E,20,N],[13,"ReleaseVoice",R[17],"The event indicates that the voice with the given tone…",20,N],[12,"tone",R[18],E,20,N],[8,"Voice",R[17],"Implement this trait if for a struct if you want to use it…",N,N],[10,"is_playing",E,"Return `false` when subsequent calls to `render_buffer`…",21,[[["self"]],["bool"]]],[8,R[86],E,"Implement this trait to define your own `VoiceStealMode`.",N,N],[16,"V",E,"The type of the voice (implementing the `Voice` trait)…",22,N],[16,"State",E,"A data type to store the state of the voice (idle, ...) if…",22,N],[10,R[45],E,"Decide which voice should handle a given note. This method…",22,[[["self"],["u8"]],[R[19]]]],[10,R[46],E,"Return the voice that is playing a given note, if any.",22,[[["self"],["u8"]],[[R[57],[R[19]]],[R[19]]]]],[10,R[47],E,"Mark this voice as \"active\".",22,[[["self"],["u8"],[R[19]]]]],[10,R[48],E,"Mark the given voice as \"inactive\".",22,[[["self"],[R[19]]]]],[8,R[87],E,"Implement this trait for an event so that `Polyphonic`…",N,N],[10,R[49],E,E,23,[[["self"]],[R[50]]]],[11,"new",E,"Create a new `Polyphonic` with the given voices and the…",24,[[["vsm"],["vec"]],["self"]]],[11,"new",E,E,25,[[],["self"]]],[0,"timesplit",R[14],E,N,N],[3,R[90],R[37],E,N,N],[11,"new",E,E,26,[[["usize"],["p"]],["self"]]],[0,"zero_init",R[14],"Middleware for initializing the output to zero before…",N,N],[3,R[91],R[38],"Set all output values to 0 before calling `render_buffer`…",N,N],[11,"new",E,"Create a new `ZeroInit` with the given \"child plugin\".",27,[[["p"]],["self"]]],[0,"note",R[5],E,N,N],[3,R[92],R[39],"Contains all data needed to play a note",N,N],[12,"note",E,"An integer from 0-127 defining what note to play based on…",28,N],[12,"velocity",E,"An 8-bit unsigned value that can be used for modulating…",28,N],[12,"state",E,"The On/Off state for a note",28,N],[12,"channel",E,"the intended channel",28,N],[4,R[93],E,"A more readable boolean for keeping track of a note's state",N,N],[13,"Nil",E,E,29,N],[13,"Off",E,"The note is off and should start `Releasing` a voice, if…",29,N],[13,"On",E,"The note is on",29,N],[11,"data",E,"Convert note data obtained from the host into a `NoteData`…",28,[[],[R[58]]]],[11,"state_and_channel",E,E,29,[[["u8"]]]],[0,"output_mode",R[5],"Utilities to handle both polyphonic and monophonic plugins.",N,N],[3,"Additive",R[40],"Output by adding the sample to what is already in the…",N,N],[3,R[104],E,"Output by replacing what is already in the output by the…",N,N],[8,R[94],E,"Defines a method to set an output sample.",N,N],[10,"set",E,E,30,[[["f"],["f"]]]],[8,"Plugin",R[5],"The trait that all plugins need to implement. The…",N,N],[18,"NAME",E,"The name of the plugin.",31,N],[18,"MAX_NUMBER_OF_AUDIO_INPUTS",E,"The maximum number of audio inputs.",31,N],[18,"MAX_NUMBER_OF_AUDIO_OUTPUTS",E,"The maximum number of audio outputs.",31,N],[10,R[51],E,"The name of the audio input with the given index. Note:…",31,[[["usize"]],[R[55]]]],[10,R[52],E,"The name of the audio output with the given index. Note:…",31,[[["usize"]],[R[55]]]],[10,R[20],E,"Called when the sample-rate changes. The backend should…",31,[[["self"],["f64"]]]],[10,R[53],E,"This function is the core of the plugin. It is called…",31,[[["self"],["c"]]]],[14,"macro_for_rsynth",E,E,N,N],[14,"macro_for_rsynth_feature_vst",E,E,N,N],[14,"macro_for_rsynth_feature_jack",E,E,N,N],[14,"macro_for_unpublished_crate",E,E,N,N],[14,"macro_for_application",E,E,N,N],[14,"vst_init",E,"A wrapper around the `plugin_main!` macro from the `vst`…",N,N],[14,"wrap_context",E,"`wrap_context!($wrapper_type, $type_name,…",N,N],[11,"from",R[21],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[22],E,E,1,[[[U]],[R[25]]]],[11,R[23],E,E,1,[[],[R[25]]]],[11,R[28],E,E,1,[[["self"]],[T]]],[11,R[24],E,E,1,[[["self"]],[T]]],[11,R[26],E,E,1,[[["self"]],[R[29]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[22],E,E,32,[[[U]],[R[25]]]],[11,R[23],E,E,32,[[],[R[25]]]],[11,R[28],E,E,32,[[["self"]],[T]]],[11,R[24],E,E,32,[[["self"]],[T]]],[11,R[26],E,E,32,[[["self"]],[R[29]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[22],E,E,2,[[[U]],[R[25]]]],[11,R[23],E,E,2,[[],[R[25]]]],[11,R[28],E,E,2,[[["self"]],[T]]],[11,R[24],E,E,2,[[["self"]],[T]]],[11,R[26],E,E,2,[[["self"]],[R[29]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[22],E,E,33,[[[U]],[R[25]]]],[11,R[23],E,E,33,[[],[R[25]]]],[11,R[28],E,E,33,[[["self"]],[T]]],[11,R[24],E,E,33,[[["self"]],[T]]],[11,R[26],E,E,33,[[["self"]],[R[29]]]],[11,"from",R[27],E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[22],E,E,4,[[[U]],[R[25]]]],[11,R[23],E,E,4,[[],[R[25]]]],[11,R[28],E,E,4,[[["self"]],[T]]],[11,R[24],E,E,4,[[["self"]],[T]]],[11,R[26],E,E,4,[[["self"]],[R[29]]]],[11,"from",R[10],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[31],E,E,7,[[["self"]],[T]]],[11,R[32],E,E,7,[[["self"],[T]]]],[11,R[22],E,E,7,[[[U]],[R[25]]]],[11,R[23],E,E,7,[[],[R[25]]]],[11,R[28],E,E,7,[[["self"]],[T]]],[11,R[24],E,E,7,[[["self"]],[T]]],[11,R[26],E,E,7,[[["self"]],[R[29]]]],[11,"from",R[30],E,34,[[[T]],[T]]],[11,"into",E,E,34,[[],[U]]],[11,"into_iter",E,E,34,[[],["i"]]],[11,R[22],E,E,34,[[[U]],[R[25]]]],[11,R[23],E,E,34,[[],[R[25]]]],[11,R[28],E,E,34,[[["self"]],[T]]],[11,R[24],E,E,34,[[["self"]],[T]]],[11,R[26],E,E,34,[[["self"]],[R[29]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,"into",E,E,35,[[],[U]]],[11,R[31],E,E,35,[[["self"]],[T]]],[11,R[32],E,E,35,[[["self"],[T]]]],[11,R[22],E,E,35,[[[U]],[R[25]]]],[11,R[23],E,E,35,[[],[R[25]]]],[11,R[28],E,E,35,[[["self"]],[T]]],[11,R[24],E,E,35,[[["self"]],[T]]],[11,R[26],E,E,35,[[["self"]],[R[29]]]],[11,"from",R[33],E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[31],E,E,11,[[["self"]],[T]]],[11,R[32],E,E,11,[[["self"],[T]]]],[11,R[22],E,E,11,[[[U]],[R[25]]]],[11,R[23],E,E,11,[[],[R[25]]]],[11,R[28],E,E,11,[[["self"]],[T]]],[11,R[24],E,E,11,[[["self"]],[T]]],[11,R[26],E,E,11,[[["self"]],[R[29]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[31],E,E,12,[[["self"]],[T]]],[11,R[32],E,E,12,[[["self"],[T]]]],[11,R[22],E,E,12,[[[U]],[R[25]]]],[11,R[23],E,E,12,[[],[R[25]]]],[11,R[28],E,E,12,[[["self"]],[T]]],[11,R[24],E,E,12,[[["self"]],[T]]],[11,R[26],E,E,12,[[["self"]],[R[29]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[31],E,E,9,[[["self"]],[T]]],[11,R[32],E,E,9,[[["self"],[T]]]],[11,R[22],E,E,9,[[[U]],[R[25]]]],[11,R[23],E,E,9,[[],[R[25]]]],[11,R[28],E,E,9,[[["self"]],[T]]],[11,R[24],E,E,9,[[["self"]],[T]]],[11,R[26],E,E,9,[[["self"]],[R[29]]]],[11,"from",R[34],E,36,[[[T]],[T]]],[11,"into",E,E,36,[[],[U]]],[11,R[22],E,E,36,[[[U]],[R[25]]]],[11,R[23],E,E,36,[[],[R[25]]]],[11,R[28],E,E,36,[[["self"]],[T]]],[11,R[24],E,E,36,[[["self"]],[T]]],[11,R[26],E,E,36,[[["self"]],[R[29]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,"into",E,E,37,[[],[U]]],[11,R[22],E,E,37,[[[U]],[R[25]]]],[11,R[23],E,E,37,[[],[R[25]]]],[11,R[28],E,E,37,[[["self"]],[T]]],[11,R[24],E,E,37,[[["self"]],[T]]],[11,R[26],E,E,37,[[["self"]],[R[29]]]],[11,"host",E,E,38,[[["self"]],["h"]]],[11,R[11],E,E,38,[[["self"]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,"into",E,E,38,[[],[U]]],[11,R[22],E,E,38,[[[U]],[R[25]]]],[11,R[23],E,E,38,[[],[R[25]]]],[11,R[28],E,E,38,[[["self"]],[T]]],[11,R[24],E,E,38,[[["self"]],[T]]],[11,R[26],E,E,38,[[["self"]],[R[29]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,"into",E,E,39,[[],[U]]],[11,R[22],E,E,39,[[[U]],[R[25]]]],[11,R[23],E,E,39,[[],[R[25]]]],[11,R[28],E,E,39,[[["self"]],[T]]],[11,R[24],E,E,39,[[["self"]],[T]]],[11,R[26],E,E,39,[[["self"]],[R[29]]]],[11,"from",R[35],E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[22],E,E,17,[[[U]],[R[25]]]],[11,R[23],E,E,17,[[],[R[25]]]],[11,R[28],E,E,17,[[["self"]],[T]]],[11,R[24],E,E,17,[[["self"]],[T]]],[11,R[26],E,E,17,[[["self"]],[R[29]]]],[11,"host",E,E,40,[[["self"]],["h"]]],[11,R[11],E,E,40,[[["self"]]]],[11,R[15],E,E,40,[[["self"]],[R[36]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,"into",E,E,40,[[],[U]]],[11,R[22],E,E,40,[[[U]],[R[25]]]],[11,R[23],E,E,40,[[],[R[25]]]],[11,R[28],E,E,40,[[["self"]],[T]]],[11,R[24],E,E,40,[[["self"]],[T]]],[11,R[26],E,E,40,[[["self"]],[R[29]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[22],E,E,18,[[[U]],[R[25]]]],[11,R[23],E,E,18,[[],[R[25]]]],[11,R[28],E,E,18,[[["self"]],[T]]],[11,R[24],E,E,18,[[["self"]],[T]]],[11,R[26],E,E,18,[[["self"]],[R[29]]]],[11,"from",R[17],E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[22],E,E,19,[[[U]],[R[25]]]],[11,R[23],E,E,19,[[],[R[25]]]],[11,R[28],E,E,19,[[["self"]],[T]]],[11,R[24],E,E,19,[[["self"]],[T]]],[11,R[26],E,E,19,[[["self"]],[R[29]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[22],E,E,24,[[[U]],[R[25]]]],[11,R[23],E,E,24,[[],[R[25]]]],[11,R[28],E,E,24,[[["self"]],[T]]],[11,R[24],E,E,24,[[["self"]],[T]]],[11,R[26],E,E,24,[[["self"]],[R[29]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[22],E,E,25,[[[U]],[R[25]]]],[11,R[23],E,E,25,[[],[R[25]]]],[11,R[28],E,E,25,[[["self"]],[T]]],[11,R[24],E,E,25,[[["self"]],[T]]],[11,R[26],E,E,25,[[["self"]],[R[29]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[31],E,E,20,[[["self"]],[T]]],[11,R[32],E,E,20,[[["self"],[T]]]],[11,R[22],E,E,20,[[[U]],[R[25]]]],[11,R[23],E,E,20,[[],[R[25]]]],[11,R[28],E,E,20,[[["self"]],[T]]],[11,R[24],E,E,20,[[["self"]],[T]]],[11,R[26],E,E,20,[[["self"]],[R[29]]]],[11,"from",R[37],E,26,[[[T]],[T]]],[11,"into",E,E,26,[[],[U]]],[11,R[22],E,E,26,[[[U]],[R[25]]]],[11,R[23],E,E,26,[[],[R[25]]]],[11,R[28],E,E,26,[[["self"]],[T]]],[11,R[24],E,E,26,[[["self"]],[T]]],[11,R[26],E,E,26,[[["self"]],[R[29]]]],[11,"from",R[38],E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[22],E,E,27,[[[U]],[R[25]]]],[11,R[23],E,E,27,[[],[R[25]]]],[11,R[28],E,E,27,[[["self"]],[T]]],[11,R[24],E,E,27,[[["self"]],[T]]],[11,R[26],E,E,27,[[["self"]],[R[29]]]],[11,"from",R[39],E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[31],E,E,28,[[["self"]],[T]]],[11,R[32],E,E,28,[[["self"],[T]]]],[11,R[22],E,E,28,[[[U]],[R[25]]]],[11,R[23],E,E,28,[[],[R[25]]]],[11,R[28],E,E,28,[[["self"]],[T]]],[11,R[24],E,E,28,[[["self"]],[T]]],[11,R[26],E,E,28,[[["self"]],[R[29]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,"into",E,E,29,[[],[U]]],[11,R[31],E,E,29,[[["self"]],[T]]],[11,R[32],E,E,29,[[["self"],[T]]]],[11,R[22],E,E,29,[[[U]],[R[25]]]],[11,R[23],E,E,29,[[],[R[25]]]],[11,R[28],E,E,29,[[["self"]],[T]]],[11,R[24],E,E,29,[[["self"]],[T]]],[11,R[26],E,E,29,[[["self"]],[R[29]]]],[11,"from",R[40],E,41,[[[T]],[T]]],[11,"into",E,E,41,[[],[U]]],[11,R[22],E,E,41,[[[U]],[R[25]]]],[11,R[23],E,E,41,[[],[R[25]]]],[11,R[28],E,E,41,[[["self"]],[T]]],[11,R[24],E,E,41,[[["self"]],[T]]],[11,R[26],E,E,41,[[["self"]],[R[29]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[22],E,E,42,[[[U]],[R[25]]]],[11,R[23],E,E,42,[[],[R[25]]]],[11,R[28],E,E,42,[[["self"]],[T]]],[11,R[24],E,E,42,[[["self"]],[T]]],[11,R[26],E,E,42,[[["self"]],[R[29]]]],[11,"get",R[34],E,39,[[["self"]]]],[11,R[41],E,E,39,[[["self"]]]],[11,"get",R[17],E,24,[[["self"]]]],[11,R[41],E,E,24,[[["self"]]]],[11,"get",R[37],E,26,[[["self"]],["p"]]],[11,R[41],E,E,26,[[["self"]],["p"]]],[11,"get",R[38],E,27,[[["self"]],["p"]]],[11,R[41],E,E,27,[[["self"]],["p"]]],[11,"get",R[34],E,38,[[["self"]],["aftertouchcontext"]]],[11,"get",E,E,38,[[["self"]],[T]]],[11,"get",R[35],E,40,[[["self"]],[R[36]]]],[11,"get",E,E,40,[[["self"]],[T]]],[11,"iter",R[30],E,35,[[["self"]]]],[11,R[42],E,E,35,[[["self"],["timed"]]]],[11,R[43],E,E,35,[[["self"],["u32"]]]],[11,R[44],R[34],E,39,[[["self"],[R[54]],["genericevent"]]]],[11,R[44],R[35],E,18,[[["self"],["c"],["e"]]]],[11,R[44],R[17],E,24,[[["self"],["c"],["ee"]]]],[11,R[44],R[37],E,26,[[["self"],["c"],["ee"]]]],[11,R[44],R[38],E,27,[[["self"],["c"],["e"]]]],[11,"data",R[34],E,36,[[["self"]]]],[11,R[12],R[33],E,12,[[["self"]],[["u8"],[R[57],["u8"]]]]],[11,R[45],R[17],E,25,[[["self"],["u8"]],[R[19]]]],[11,R[46],E,E,25,[[["self"],["u8"]],[[R[57],[R[19]]],[R[19]]]]],[11,R[47],E,E,25,[[["self"],["u8"],[R[19]]]]],[11,R[48],E,E,25,[[["self"],[R[19]]]]],[11,R[49],R[33],E,12,[[["self"]],[R[50]]]],[11,R[49],E,E,9,[[["self"]],[R[50]]]],[11,R[51],R[34],E,39,[[["usize"]],[R[55]]]],[11,R[52],E,E,39,[[["usize"]],[R[55]]]],[11,R[20],E,E,39,[[["self"],["f64"]]]],[11,R[53],E,E,39,[[["self"],[R[54]]]]],[11,R[51],R[35],E,18,[[["usize"]],[R[55]]]],[11,R[52],E,E,18,[[["usize"]],[R[55]]]],[11,R[20],E,E,18,[[["self"],["f64"]]]],[11,R[53],E,E,18,[[["self"],["c"]]]],[11,R[51],R[17],E,24,[[["usize"]],[R[55]]]],[11,R[52],E,E,24,[[["usize"]],[R[55]]]],[11,R[20],E,E,24,[[["self"],["f64"]]]],[11,R[53],E,E,24,[[["self"],["c"]]]],[11,R[51],R[37],E,26,[[["usize"]],[R[55]]]],[11,R[52],E,E,26,[[["usize"]],[R[55]]]],[11,R[20],E,E,26,[[["self"],["f64"]]]],[11,R[53],E,E,26,[[["self"],["c"]]]],[11,R[51],R[38],E,27,[[["usize"]],[R[55]]]],[11,R[52],E,E,27,[[["usize"]],[R[55]]]],[11,R[20],E,E,27,[[["self"],["f64"]]]],[11,R[53],E,E,27,[[["self"],["c"]]]],[11,"set",R[40],E,41,[[["f"],["f"]]]],[11,"set",E,E,42,[[["f"],["f"]]]],[11,"drop",R[21],E,32,[[["self"]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,33,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,"eq",R[10],E,7,[[["self"],[R[56]]],["bool"]]],[11,"ne",E,E,7,[[["self"],[R[56]]],["bool"]]],[11,"eq",R[33],E,9,[[["self"],["timed"]],["bool"]]],[11,"ne",E,E,9,[[["self"],["timed"]],["bool"]]],[11,"eq",R[17],E,19,[[["self"],[R[19]]],["bool"]]],[11,"ne",E,E,19,[[["self"],[R[19]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[50]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[50]]],["bool"]]],[11,"eq",R[39],E,29,[[["self"],[R[59]]],["bool"]]],[11,"next",R[30],E,34,[[["self"]],[R[57]]]],[11,"clone",R[10],E,7,[[["self"]],[R[56]]]],[11,"clone",R[30],E,35,[[["self"]],["staircaseenvelope"]]],[11,"clone",R[33],E,11,[[["self"]],[R[65]]]],[11,"clone",E,E,12,[[["self"]],[R[66]]]],[11,"clone",E,E,9,[[["self"]],["self"]]],[11,"clone",R[17],E,20,[[["self"]],[R[50]]]],[11,"clone",R[39],E,28,[[["self"]],[R[58]]]],[11,"clone",E,E,29,[[["self"]],[R[59]]]],[11,R[60],E,E,28,[[],[R[58]]]],[11,R[60],R[40],E,41,[[],["additive"]]],[11,R[60],E,E,42,[[],["substitution"]]],[11,R[61],R[21],E,32,[[["self"]],["vec"]]],[11,R[61],E,E,33,[[["self"]],["vec"]]],[11,"deref",E,E,32,[[["self"]],["vec"]]],[11,"deref",E,E,33,[[["self"]],["vec"]]],[11,"fmt",E,E,1,[[["self"],[R[62]]],[R[25]]]],[11,"fmt",E,E,2,[[["self"],[R[62]]],[R[25]]]],[11,"fmt",R[10],E,7,[[["self"],[R[62]]],[R[25]]]],[11,"fmt",R[33],E,9,[[["self"],[R[62]]],[R[25]]]],[11,"fmt",R[17],E,19,[[["self"],[R[62]]],[R[25]]]],[11,"fmt",E,E,20,[[["self"],[R[62]]],[R[25]]]],[11,R[63],R[35],E,17,[[],[[R[36]],[R[64],[R[36]]]]]],[11,R[63],E,E,17,[[],[R[64]]]],[11,R[63],R[33],E,9,[[],[[R[64],["timed"]],["timed"]]]],[11,R[63],E,E,11,[[],[[R[65]],[R[64],[R[65]]]]]],[11,R[63],E,E,11,[[],[R[64]]]],[11,R[63],E,E,11,[[],[[R[66]],[R[64],[R[66]]]]]],[11,R[63],E,E,11,[[],[["timed"],[R[64],["timed"]]]]],[11,R[63],E,E,12,[[],[[R[66]],[R[64],[R[66]]]]]],[11,R[63],E,E,12,[[],[R[64]]]],[11,R[63],E,E,12,[[],[[R[65]],[R[64],[R[65]]]]]],[11,R[63],E,E,12,[[],[["timed"],[R[64],["timed"]]]]],[11,R[63],E,E,9,[[],[R[64]]]],[11,R[63],E,E,9,[[],[[R[65]],[R[64],[R[65]]]]]],[11,R[63],E,E,9,[[],[[R[66]],[R[64],[R[66]]]]]]],"p":[[8,R[67]],[3,R[68]],[3,R[69]],[8,R[70]],[3,R[71]],[8,R[72]],[8,R[73]],[3,R[74]],[8,R[75]],[3,"Timed"],[8,R[76]],[3,R[77]],[3,R[78]],[8,R[79]],[8,R[80]],[8,R[81]],[8,R[82]],[3,R[83]],[3,R[84]],[3,R[85]],[4,R[16]],[8,"Voice"],[8,R[86]],[8,R[87]],[3,R[88]],[3,R[89]],[3,R[90]],[3,R[91]],[3,R[92]],[4,R[93]],[8,R[94]],[8,"Plugin"],[3,R[95]],[3,R[96]],[3,R[97]],[3,R[98]],[3,R[99]],[3,R[100]],[3,R[101]],[3,R[102]],[3,R[103]],[3,"Additive"],[3,R[104]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);