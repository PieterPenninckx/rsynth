var searchIndex = JSON.parse('{\
"rsynth":{"doc":"Rsynth An API abstraction for API\'s for audio plugins and…","i":[[0,"buffer","rsynth","Audio buffers.",null,null],[3,"AudioBufferIn","rsynth::buffer","Audio input buffer.",null,null],[3,"AudioBufferOut","","An audio output buffer.",null,null],[3,"AudioBufferOutChannelIteratorMut","","An iterator over the channels of an [`AudioBufferOut`].",null,null],[3,"AudioBufferInOut","","A buffer holding both input and output audio.",null,null],[3,"AudioChunk","","A buffer representing a fixed amount of samples for a…",null,null],[3,"InterlacedSampleIterator","","An iterator over the samples of an `AudioChunk`, operating…",null,null],[5,"buffers_as_slice","","",null,[[],["vec",3]]],[5,"buffers_as_mut_slice","","",null,[[],["vec",3]]],[11,"new","","Create a new audio input buffer.",0,[[]]],[11,"number_of_channels","","Get the number of channels.",0,[[]]],[11,"number_of_frames","","Get the number of frames.",0,[[]]],[11,"channels","","Get the channels as slices.",0,[[]]],[11,"index_frames","","Get an `AudioBufferIn` with all channels and the given…",0,[[["vec",3]],["audiobufferin",3]]],[11,"get_channel","","Get the channel with the given index.",0,[[],["option",4]]],[11,"index_channel","","Get the channel with the given index.",0,[[]]],[11,"new","","Create a new audio output buffer.",1,[[]]],[11,"number_of_channels","","Get the number of channels.",1,[[]]],[11,"number_of_frames","","Get the number of frames.",1,[[]]],[11,"channels","","Get the channels as slices.",1,[[]]],[11,"split_channels_at","","Split into two `AudioBufferOut`s. The first will contain…",1,[[]]],[11,"index_frames","","Get an `AdioBufferOut` with all channels and the given…",1,[[["vec",3]],["audiobufferout",3]]],[11,"get_channel","","Get the channel with the given index.",1,[[],["option",4]]],[11,"index_channel","","Get the channel with the given index.",1,[[]]],[11,"set","","Set all samples to the given value.",1,[[]]],[11,"channel_iter_mut","","Get an iterator over the channels.",1,[[],["audiobufferoutchanneliteratormut",3]]],[11,"as_audio_buffer_in","","Convert to an [`AudioBufferIn`].",1,[[["vec",3]],["audiobufferin",3]]],[11,"new","","Create a new `AudioBufferInOut`.",2,[[]]],[11,"number_of_frames","","Get the number of frames.",2,[[]]],[11,"number_of_input_channels","","Get the number of input channels.",2,[[]]],[11,"number_of_output_channels","","Get the number of output channels.",2,[[]]],[11,"split_output_channels_at","","Create two new `AUdioBufferInOut`s: one with all the input…",2,[[]]],[11,"get_input_channel","","Get the input channel with the given index.",2,[[],["option",4]]],[11,"index_input_channel","","Get the output channel with the given index.",2,[[]]],[11,"get_output_channel","","Get the output channel with the given index.",2,[[],["option",4]]],[11,"index_output_channel","","Get the output channel with the given index.",2,[[]]],[11,"index_frames","","Get an `AudioBufferInOut` with all channels and with the…",2,[[["vec",3],["vec",3]],["audiobufferinout",3]]],[11,"separate","","Separate the input channels from the output channels.",2,[[]]],[11,"inputs","","Get the input channels as an [`AudioBufferIn`].",2,[[],["audiobufferin",3]]],[11,"outputs","","Get the output channels as an [`AudioBufferOut`].",2,[[],["audiobufferout",3]]],[11,"new","","Create a new `AudioChunk`. # Panics Panics if…",3,[[]]],[11,"zero","","Note: cannot be used in a real-time context This method…",3,[[]]],[11,"from_channels","","",3,[[["vec",3],["vec",3]]]],[11,"from_interlaced_iterator","","Panics Panics if `number_of_channels == 0`. Panics if the…",3,[[]]],[11,"interlaced","","Create an interlaced iterator from an `AudioChunk` #…",3,[[],["interlacedsampleiterator",3]]],[11,"with_capacity","","Create a new `AudioChunk` in which each channel has the…",3,[[]]],[11,"channels","","",3,[[],["vec",3]]],[11,"number_of_channels","","Return the number of channels.",3,[[]]],[11,"append_sliced_chunk","","Note about using in a real-time context This method will…",3,[[]]],[11,"inner","","",3,[[],[["vec",3],["vec",3]]]],[11,"as_slices","","Note: cannot be used in a real-time context This method…",3,[[],["vec",3]]],[11,"as_mut_slices","","Note: cannot be used in a real-time context This method…",3,[[],["vec",3]]],[11,"split","","Note: cannot be used in a real-time context This method…",3,[[],["vec",3]]],[0,"backend","rsynth","Backends.",null,null],[0,"combined","rsynth::backend","Combine different back-ends for audio input, audio output…",null,null],[3,"MidiWriterWrapper","rsynth::backend::combined","A wrapper around a midi writer that implements…",null,null],[3,"TestAudioReader","","An audio reader, useful for testing.",null,null],[3,"TestAudioWriter","","An audio writer, useful for testing.",null,null],[3,"TestMidiReader","","A midi reader, useful for testing.",null,null],[3,"TestMidiWriter","","A midi writer, useful for testing.",null,null],[4,"CombinedError","","The error type that represents the errors you can get from…",null,null],[13,"AudioInError","","An error occurred when reading the audio.",4,null],[13,"AudioOutError","","An error occurred when writing the audio.",4,null],[5,"run","","Run an audio renderer with the given audio input, audio…",null,[[],[["combinederror",4],["result",4]]]],[0,"dummy","","Dummy backend that does nothing, useful for testing.",null,null],[3,"AudioDummy","rsynth::backend::combined::dummy","Dummy backend that does nothing, useful for testing and…",null,null],[3,"MidiDummy","","",null,null],[11,"with_sample_rate_and_length","","Create a new `AudioDummy` with the given sample rate, in…",5,[[]]],[11,"new","","Create a new `AudioDummy` with the \\\"default\\\" sample rate…",5,[[]]],[11,"new","","",6,[[]]],[0,"hound","rsynth::backend::combined","Backend for reading and writing `.wav` files, based on the…",null,null],[3,"HoundAudioReader","rsynth::backend::combined::hound","",null,null],[3,"HoundAudioWriter","","",null,null],[4,"HoundAudioError","","",null,null],[13,"UnsupportedAudioFormat","","",7,null],[11,"new","","",8,[[["wavreader",3]],[["result",4],["houndaudioerror",4]]]],[11,"new","","",9,[[["wavwriter",3]],[["result",4],["houndaudioerror",4]]]],[0,"memory","rsynth::backend::combined","In-memory backend, useful for testing.",null,null],[3,"AudioChunkReader","rsynth::backend::combined::memory","An [`AudioReader`] that reads from a given [`AudioChunk`].…",null,null],[3,"AudioBufferWriter","","An [`AudioWriter`] that appends to a given [`AudioChunk`].…",null,null],[6,"AudioBufferReader","","An [`AudioReader`] that reads from a given [`AudioChunk`].…",null,null],[11,"new","","Construct a new `AudioChunkReader` with the given…",10,[[]]],[11,"new","","",11,[[["audiochunk",3]]]],[0,"midly","rsynth::backend::combined","Read midi files.",null,null],[3,"MidlyMidiReader","rsynth::backend::combined::midly","Read from midi events as parsed by the `midly` crate.",null,null],[0,"midly","","Re-exports from the `midly` crate.",null,null],[3,"Event","rsynth::backend::combined::midly::midly","Represents a fully parsed track event, with delta time.",null,null],[12,"delta","","",12,null],[12,"kind","","",12,null],[11,"new","rsynth::backend::combined::midly","Create a new `MidlyMidiReader`.",13,[[["header",3]]]],[17,"MICROSECONDS_PER_SECOND","rsynth::backend::combined","",null,null],[8,"AudioReader","","Define how audio is read.",null,null],[16,"Err","","The type of the error that occurs when reading data.",14,null],[10,"number_of_channels","","The number of audio channels that can be read.",14,[[]]],[10,"frames_per_second","","The sampling frequency in frames per second.",14,[[]]],[10,"fill_buffer","","Fill the buffers. Return the number of frames that have…",14,[[["audiobufferout",3]],["result",4]]],[8,"AudioWriter","","Define how audio is written.",null,null],[16,"Err","","The type of the error that occurs when reading data.",15,null],[10,"write_buffer","","Write to the specified audio buffer.",15,[[["audiobufferin",3]],["result",4]]],[11,"specifies_number_of_channels","","Return `true` if this `AudioWriter` is responsible for…",15,[[]]],[11,"number_of_channels","","Return the number of channels. This method is only called…",15,[[]]],[8,"MidiWriter","","Define how midi is written. Note: there is no…",null,null],[10,"write_event","","",16,[[["deltaevent",3],["rawmidievent",3]]]],[11,"new","","",17,[[]]],[11,"step_frames","","",17,[[]]],[11,"new","","Create a new `TestAudioReader`. The newly created…",18,[[["vec",3],["audiobufferreader",6]]]],[11,"new","","Create a new `TestAudioWriter`. The newly created will…",19,[[["vec",3],["audiochunk",3]]]],[11,"new","","Create a new `TestMidiReader` that will return the…",20,[[["deltaevent",3],["vec",3]]]],[11,"new","","Create a new `TestMidiWriter` that will panic when the…",21,[[["deltaevent",3],["vec",3]]]],[11,"check_last","","",21,[[]]],[0,"jack_backend","rsynth::backend","Wrapper for the [JACK] backend (behind the `backend-jack`…",null,null],[3,"JackHost","rsynth::backend::jack_backend","Used to communicate with `Jack`.",null,null],[5,"run","","Run the plugin until the user presses a key on the…",null,[[],[["error",4],["result",4]]]],[0,"jack","","Re-exports of the `jack` crate. Use this so that your code…",null,null],[5,"get_time","rsynth::backend::jack_backend::jack","Return JACK\'s current system time in microseconds, using…",null,[[]]],[3,"AsyncClient","","A JACK client that is processing data asynchronously, in…",null,null],[3,"Client","","A client to interact with a JACK server.",null,null],[3,"ClientOptions","","Option flags for opening a JACK client.",null,null],[3,"ClientStatus","","Status flags for JACK clients.",null,null],[3,"ClosureProcessHandler","","Wrap a closure that can handle the `process` callback.…",null,null],[12,"process_fn","","",22,null],[3,"CycleTimes","","Internal cycle timing information.",null,null],[12,"current_frames","","",23,null],[12,"current_usecs","","",23,null],[12,"next_usecs","","",23,null],[12,"period_usecs","","",23,null],[8,"NotificationHandler","","Specifies callbacks for JACK.",null,null],[11,"thread_init","","Called just once after the creation of the thread in which…",24,[[["client",3]]]],[11,"shutdown","","Called when the JACK server shuts down the client thread.…",24,[[["clientstatus",3]]]],[11,"freewheel","","Called whenever \\\"freewheel\\\" mode is entered or leaving.",24,[[["client",3]]]],[11,"buffer_size","","Called whenever the size of the buffer that will be passed…",24,[[["client",3]],["control",4]]],[11,"sample_rate","","Called whenever the system sample rate changes.",24,[[["client",3]],["control",4]]],[11,"client_registration","","Called whenever a client is registered or unregistered",24,[[["client",3]]]],[11,"port_registration","","Called whenever a port is registered or unregistered",24,[[["client",3]]]],[11,"port_rename","","Called whenever a port is renamed.",24,[[["client",3]],["control",4]]],[11,"ports_connected","","Called whenever ports are connected/disconnected to/from…",24,[[["client",3]]]],[11,"graph_reorder","","Called whenever the processing graph is reordered.",24,[[["client",3]],["control",4]]],[11,"xrun","","Called whenever an xrun occurs.",24,[[["client",3]],["control",4]]],[11,"latency","","Called whenever it is necessary to recompute the latencies…",24,[[["client",3],["latencytype",4]]]],[8,"ProcessHandler","","Specifies real-time processing.",null,null],[10,"process","","Called whenever there is work to be done.",25,[[["client",3],["processscope",3]],["control",4]]],[3,"ProcessScope","","`ProcessScope` provides information on the client and…",null,null],[3,"CLIENT_NAME_SIZE","","The maximum string length for port names.",null,null],[4,"Control","","Specify an option, either to continue processing, or to…",null,null],[13,"Continue","","Continue processing.",26,null],[13,"Quit","","Stop processing.",26,null],[4,"Error","","An error that can occur in JACK.",null,null],[13,"CallbackDeregistrationError","","",27,null],[13,"CallbackRegistrationError","","",27,null],[13,"ClientActivationError","","",27,null],[13,"ClientDeactivationError","","",27,null],[13,"ClientError","","",27,null],[13,"FreewheelError","","",27,null],[13,"InvalidDeactivation","","",27,null],[13,"NotEnoughSpace","","",27,null],[13,"PortAliasError","","",27,null],[13,"PortAlreadyConnected","","",27,null],[13,"PortConnectionError","","",27,null],[13,"PortDisconnectionError","","",27,null],[13,"PortMonitorError","","",27,null],[13,"PortNamingError","","",27,null],[13,"PortRegistrationError","","",27,null],[13,"SetBufferSizeError","","",27,null],[13,"TimeError","","",27,null],[13,"WeakFunctionNotFound","","",27,null],[13,"ClientIsNoLongerAlive","","",27,null],[13,"UnknownError","","",27,null],[4,"LatencyType","","Used by `NotificationHandler::latency()`.",null,null],[13,"Capture","","",28,null],[13,"Playback","","",28,null],[5,"error_callback","","Get the error callback that was set using…",null,[[],["option",4]]],[5,"info_callback","","Resets the JACK info callback to use stdio. Get the info…",null,[[],["option",4]]],[5,"reset_error_callback","","Restores the JACK info callback to the JACK default, which…",null,[[]]],[5,"reset_info_callback","","Restores the JACK info callback to the JACK default, which…",null,[[]]],[5,"set_error_callback","","Set the global JACK info callback. It is recommended to…",null,[[]]],[5,"set_info_callback","","Set the global JACK info callback. It is recommended to…",null,[[]]],[3,"AudioIn","","`AudioIn` implements the `PortSpec` trait which, defines…",null,null],[3,"AudioOut","","`AudioOut` implements the `PortSpec` trait, which defines…",null,null],[3,"MidiIn","","`MidiIn` implements the `PortSpec` trait, which defines an…",null,null],[3,"MidiIter","","Iterate through Midi Messages within a `Port<MidiIn>`.",null,null],[3,"MidiOut","","`MidiOut` implements the `PortSpec` trait, which defines…",null,null],[3,"MidiWriter","","Write midi events to an output midi port.",null,null],[3,"Port","","An endpoint to interact with JACK data streams, for audio,…",null,null],[3,"PortFlags","","Flags for specifying port options.",null,null],[8,"PortSpec","","Defines the configuration for a certain port to JACK, ie…",null,null],[10,"jack_port_type","","String used by JACK upon port creation to identify the…",29,[[]]],[10,"jack_flags","","Flags used by jack upon port creation.",29,[[],["portflags",3]]],[10,"jack_buffer_size","","Size used by jack upon port creation.",29,[[]]],[3,"RawMidi","","Contains 8bit raw midi information along with a timestamp…",null,null],[12,"time","","The amount of time passed, in frames, relative to the…",30,null],[12,"bytes","","Midi data",30,null],[3,"Unowned","","`PortSpec` for a port that holds has no readable or…",null,null],[3,"PORT_NAME_SIZE","","The maximum string length for port names.",null,null],[3,"PORT_TYPE_SIZE","","The maximum string length for jack type names.",null,null],[6,"Frames","","Type used to represent sample frame counts.",null,null],[6,"PortId","","Ports have unique ids. A port registration callback is the…",null,null],[6,"Time","","Type used to represent the value of free running monotonic…",null,null],[3,"RingBuffer","","A lock-free ringbuffer. The key attribute of a ringbuffer…",null,null],[3,"RingBufferReader","","Read end of the ring buffer. Can only be used from one…",null,null],[3,"RingBufferWriter","","Write end of the ring buffer. Can only be used from one…",null,null],[11,"client","rsynth::backend::jack_backend","Get access to the underlying [`Client`] so that you can…",31,[[],["client",3]]],[0,"vst_backend","rsynth::backend","Wrapper for the VST backend (behind the `backend-vst`…",null,null],[3,"VstPluginWrapper","rsynth::backend::vst_backend","A struct used internally by the [`vst_init`] macro.…",null,null],[0,"vst","","Re-exports from the `vst-rs` crate. Use this in libraries…",null,null],[0,"api","rsynth::backend::vst_backend::vst","Structures and types for interfacing with the VST 2.4 API.",null,null],[0,"consts","rsynth::backend::vst_backend::vst::api","Constant values",null,null],[17,"MAX_PRESET_NAME_LEN","rsynth::backend::vst_backend::vst::api::consts","",null,null],[17,"MAX_PARAM_STR_LEN","","",null,null],[17,"MAX_LABEL","","",null,null],[17,"MAX_SHORT_LABEL","","",null,null],[17,"MAX_PRODUCT_STR_LEN","","",null,null],[17,"MAX_VENDOR_STR_LEN","","",null,null],[17,"VST_MAGIC","","VST plugins are identified by a magic number. This…",null,null],[6,"PluginMain","rsynth::backend::vst_backend::vst::api","`VSTPluginMain` function signature.",null,null],[6,"HostCallbackProc","","Host callback function passed to plugin. Can be used to…",null,null],[6,"DispatcherProc","","Dispatcher function used to process opcodes. Called by host.",null,null],[6,"ProcessProc","","Process function used to process 32 bit floating point…",null,null],[6,"ProcessProcF64","","Process function used to process 64 bit floating point…",null,null],[6,"SetParameterProc","","Callback function used to set parameter values. Called by…",null,null],[6,"GetParameterProc","","Callback function used to get parameter values. Called by…",null,null],[3,"AEffect","","Used with the VST API to pass around plugin information.",null,null],[12,"magic","","Magic number. Must be `[\'V\', \'S\', \'T\', \'P\']`.",32,null],[12,"dispatcher","","Host to plug-in dispatcher.",32,null],[12,"_process","","Accumulating process mode is deprecated in VST 2.4! Use…",32,null],[12,"setParameter","","Set value of automatable parameter.",32,null],[12,"getParameter","","Get value of automatable parameter.",32,null],[12,"numPrograms","","Number of programs (Presets).",32,null],[12,"numParams","","Number of parameters. All programs are assumed to have…",32,null],[12,"numInputs","","Number of audio inputs.",32,null],[12,"numOutputs","","Number of audio outputs.",32,null],[12,"flags","","Bitmask made of values from `api::PluginFlags`.",32,null],[12,"reserved1","","Reserved for host, must be 0.",32,null],[12,"reserved2","","Reserved for host, must be 0.",32,null],[12,"initialDelay","","For algorithms which need input in the first place (Group…",32,null],[12,"_realQualities","","Deprecated unused member.",32,null],[12,"_offQualities","","Deprecated unused member.",32,null],[12,"_ioRatio","","Deprecated unused member.",32,null],[12,"object","","Void pointer usable by api to store object data.",32,null],[12,"user","","User defined pointer.",32,null],[12,"uniqueId","","Registered unique identifier (register it at Steinberg 3rd…",32,null],[12,"version","","Plug-in version (e.g. 1100 for v1.1.0.0).",32,null],[12,"processReplacing","","Process audio samples in replacing mode.",32,null],[12,"processReplacingF64","","Process double-precision audio samples in replacing mode.",32,null],[12,"future","","Reserved for future use (please zero).",32,null],[3,"ChannelProperties","","Information about a channel. Only some hosts use this…",null,null],[12,"name","","Channel name.",33,null],[12,"flags","","Flags found in `ChannelFlags`.",33,null],[12,"arrangement_type","","Type of speaker arrangement this channel is a part of.",33,null],[12,"short_name","","Name of channel (recommended: 6 characters + delimiter).",33,null],[12,"future","","Reserved for future use.",33,null],[4,"SpeakerArrangementType","","Tells the host how the channels are intended to be used in…",null,null],[13,"Custom","","User defined arrangement.",34,null],[13,"Empty","","Empty arrangement.",34,null],[13,"Mono","","Mono.",34,null],[13,"Stereo","","L R",34,null],[13,"StereoSurround","","Ls Rs",34,null],[13,"StereoCenter","","Lc Rc",34,null],[13,"StereoSide","","Sl Sr",34,null],[13,"StereoCLfe","","C Lfe",34,null],[13,"Cinema30","","L R C",34,null],[13,"Music30","","L R S",34,null],[13,"Cinema31","","L R C Lfe",34,null],[13,"Music31","","L R Lfe S",34,null],[13,"Cinema40","","L R C S (LCRS)",34,null],[13,"Music40","","L R Ls Rs (Quadro)",34,null],[13,"Cinema41","","L R C Lfe S (LCRS + Lfe)",34,null],[13,"Music41","","L R Lfe Ls Rs (Quadro + Lfe)",34,null],[13,"Surround50","","L R C Ls Rs",34,null],[13,"Surround51","","L R C Lfe Ls Rs",34,null],[13,"Cinema60","","L R C Ls  Rs Cs",34,null],[13,"Music60","","L R Ls Rs  Sl Sr",34,null],[13,"Cinema61","","L R C Lfe Ls Rs Cs",34,null],[13,"Music61","","L R Lfe Ls Rs Sl Sr",34,null],[13,"Cinema70","","L R C Ls Rs Lc Rc",34,null],[13,"Music70","","L R C Ls Rs Sl Sr",34,null],[13,"Cinema71","","L R C Lfe Ls Rs Lc Rc",34,null],[13,"Music71","","L R C Lfe Ls Rs Sl Sr",34,null],[13,"Cinema80","","L R C Ls Rs Lc Rc Cs",34,null],[13,"Music80","","L R C Ls Rs Cs Sl Sr",34,null],[13,"Cinema81","","L R C Lfe Ls Rs Lc Rc Cs",34,null],[13,"Music81","","L R C Lfe Ls Rs Cs Sl Sr",34,null],[13,"Surround102","","L R C Lfe Ls Rs Tfl Tfc Tfr Trl Trr Lfe2",34,null],[4,"Supported","","Used to specify whether functionality is supported.",null,null],[13,"Yes","","",35,null],[13,"Maybe","","",35,null],[13,"No","","",35,null],[4,"ProcessLevel","","Denotes in which thread the host is in.",null,null],[13,"Unknown","","Unsupported by host.",36,null],[13,"User","","GUI thread.",36,null],[13,"Realtime","","Audio process thread.",36,null],[13,"Prefetch","","Sequence thread (MIDI, etc).",36,null],[13,"Offline","","Offline processing thread (therefore GUI/user thread).",36,null],[4,"HostLanguage","","Language that the host is using.",null,null],[13,"English","","",37,null],[13,"German","","",37,null],[13,"French","","",37,null],[13,"Italian","","",37,null],[13,"Spanish","","",37,null],[13,"Japanese","","",37,null],[4,"FileSelectCommand","","The file operation to perform.",null,null],[13,"Load","","Load a file.",38,null],[13,"Save","","Save a file.",38,null],[13,"LoadMultipleFiles","","Load multiple files simultaneously.",38,null],[13,"SelectDirectory","","Choose a directory.",38,null],[4,"FileSelectType","","Format to select files.",null,null],[13,"Regular","","Regular file selector.",39,null],[3,"FileType","","File type descriptor.",null,null],[12,"name","","Display name of file type.",40,null],[12,"osx_type","","OS X file type.",40,null],[12,"win_type","","Windows file type.",40,null],[12,"nix_type","","Unix file type.",40,null],[12,"mime_type_1","","MIME type.",40,null],[12,"mime_type_2","","Additional MIME type.",40,null],[3,"FileSelect","","File selector descriptor used in…",null,null],[12,"command","","The type of file selection to perform.",41,null],[12,"select_type","","The file selector to open.",41,null],[12,"mac_creator","","Unknown. 0 = no creator.",41,null],[12,"num_types","","Number of file types.",41,null],[12,"file_types","","List of file types to show.",41,null],[12,"title","","File selector\'s title.",41,null],[12,"initial_path","","Initial path.",41,null],[12,"return_path","","Used when operation returns a single path.",41,null],[12,"size_return_path","","Size of the path buffer in bytes.",41,null],[12,"return_multiple_paths","","Used when operation returns multiple paths.",41,null],[12,"num_paths","","Number of paths returned.",41,null],[12,"reserved","","Reserved by host.",41,null],[12,"future","","Reserved for future use.",41,null],[3,"Events","","A struct which contains events.",null,null],[12,"num_events","","Number of events.",42,null],[12,"_reserved","","Reserved for future use. Should be 0.",42,null],[12,"events","","Variable-length array of pointers to `api::Event` objects.",42,null],[4,"EventType","","The type of event that has occured. See…",null,null],[13,"Midi","","Midi event. See `api::MidiEvent`.",43,null],[13,"_Audio","","Deprecated.",43,null],[13,"_Video","","Deprecated.",43,null],[13,"_Parameter","","Deprecated.",43,null],[13,"_Trigger","","Deprecated.",43,null],[13,"SysEx","","System exclusive event. See `api::SysExEvent`.",43,null],[3,"Event","","A VST event intended to be casted to a corresponding type.",null,null],[12,"event_type","","The type of event. This lets you know which event this…",44,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<Event>()`.",44,null],[12,"delta_frames","","Number of samples into the current processing block that…",44,null],[12,"_flags","","Generic flags, none defined in VST api yet.",44,null],[12,"_reserved","","The `Event` type is cast appropriately, so this acts as…",44,null],[3,"MidiEvent","","A midi event.",null,null],[12,"event_type","","Should be `EventType::Midi`.",45,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<MidiEvent>()`.",45,null],[12,"delta_frames","","Number of samples into the current processing block that…",45,null],[12,"flags","","See `MidiEventFlags`.",45,null],[12,"note_length","","Length in sample frames of entire note if available,…",45,null],[12,"note_offset","","Offset in samples into note from start if available,…",45,null],[12,"midi_data","","1 to 3 midi bytes. TODO: Doc",45,null],[12,"_midi_reserved","","Reserved midi byte (0).",45,null],[12,"detune","","Detuning between -63 and +64 cents, for scales other than…",45,null],[12,"note_off_velocity","","Note off velocity between 0 and 127.",45,null],[12,"_reserved1","","Reserved for future use. Should be 0.",45,null],[12,"_reserved2","","Reserved for future use. Should be 0.",45,null],[3,"SysExEvent","","A midi system exclusive event.",null,null],[12,"event_type","","Should be `EventType::SysEx`.",46,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<SysExEvent>()`.",46,null],[12,"delta_frames","","Number of samples into the current processing block that…",46,null],[12,"_flags","","Generic flags, none defined in VST api yet.",46,null],[12,"data_size","","Size of payload in bytes.",46,null],[12,"_reserved1","","Reserved for future use. Should be 0.",46,null],[12,"system_data","","Pointer to payload.",46,null],[12,"_reserved2","","Reserved for future use. Should be 0.",46,null],[3,"TimeInfo","","Describes the time at the start of the block currently…",null,null],[12,"sample_pos","","current Position in audio samples (always valid)",47,null],[12,"sample_rate","","current Sample Rate in Hertz (always valid)",47,null],[12,"nanoseconds","","System Time in nanoseconds (10^-9 second)",47,null],[12,"ppq_pos","","Musical Position, in Quarter Note (1.0 equals 1 Quarter…",47,null],[12,"tempo","","current Tempo in BPM (Beats Per Minute)",47,null],[12,"bar_start_pos","","last Bar Start Position, in Quarter Note",47,null],[12,"cycle_start_pos","","Cycle Start (left locator), in Quarter Note",47,null],[12,"cycle_end_pos","","Cycle End (right locator), in Quarter Note",47,null],[12,"time_sig_numerator","","Time Signature Numerator (e.g. 3 for 3/4)",47,null],[12,"time_sig_denominator","","Time Signature Denominator (e.g. 4 for 3/4)",47,null],[12,"smpte_offset","","SMPTE offset in SMPTE subframes (bits; 1/80 of a frame).…",47,null],[12,"smpte_frame_rate","","See `SmpteFrameRate`",47,null],[12,"samples_to_next_clock","","MIDI Clock Resolution (24 Per Quarter Note), can be…",47,null],[12,"flags","","See `TimeInfoFlags`",47,null],[4,"SmpteFrameRate","","SMPTE Frame Rates.",null,null],[13,"Smpte24fps","","24 fps",48,null],[13,"Smpte25fps","","25 fps",48,null],[13,"Smpte2997fps","","29.97 fps",48,null],[13,"Smpte30fps","","30 fps",48,null],[13,"Smpte2997dfps","","29.97 drop",48,null],[13,"Smpte30dfps","","30 drop",48,null],[13,"SmpteFilm16mm","","Film 16mm",48,null],[13,"SmpteFilm35mm","","Film 35mm",48,null],[13,"Smpte239fps","","HDTV: 23.976 fps",48,null],[13,"Smpte249fps","","HDTV: 24.976 fps",48,null],[13,"Smpte599fps","","HDTV: 59.94 fps",48,null],[13,"Smpte60fps","","HDTV: 60 fps",48,null],[3,"ChannelFlags","","Flags for VST channels.",null,null],[3,"PluginFlags","","Flags for VST plugins.",null,null],[3,"ModifierKey","","Cross platform modifier key flags.",null,null],[3,"MidiEventFlags","","MIDI event flags.",null,null],[3,"TimeInfoFlags","","Used in the `flags` field of `TimeInfo`, and for querying…",null,null],[0,"buffer","rsynth::backend::vst_backend::vst","Buffers to safely work with audio samples.",null,null],[3,"AudioBuffer","rsynth::backend::vst_backend::vst::buffer","`AudioBuffer` contains references to the audio buffers for…",null,null],[3,"AudioBufferIterator","","Iterator over pairs of buffers of input channels and…",null,null],[3,"Inputs","","Wrapper type to access the buffers for the input channels…",null,null],[3,"InputIterator","","Iterator over buffers for input channels of an…",null,null],[3,"Outputs","","Wrapper type to access the buffers for the output channels…",null,null],[3,"OutputIterator","","Iterator over buffers for output channels of an…",null,null],[6,"PlaceholderEvent","","This is used as a placeholder to pre-allocate space for a…",null,null],[8,"WriteIntoPlaceholder","","This trait is used by `SendEventBuffer::send_events` to…",null,null],[10,"write_into","","writes an event into the given placeholder memory location",49,[[["sysexevent",3]]]],[3,"SendEventBuffer","","This buffer is used for sending midi events through the…",null,null],[0,"channels","rsynth::backend::vst_backend::vst","Meta data for dealing with input / output channels. Not…",null,null],[3,"ChannelInfo","rsynth::backend::vst_backend::vst::channels","Information about an input / output channel. This isn\'t…",null,null],[4,"ArrangementTarget","","Target for Speaker arrangement type. Can be a cinema…",null,null],[13,"Music","","Music arrangement. Technically identical to Cinema.",50,null],[13,"Cinema","","Cinematic arrangement. Technically identical to Music.",50,null],[4,"StereoChannel","","An enum for all channels in a stereo configuration.",null,null],[13,"Left","","Left channel.",51,null],[13,"Right","","Right channel.",51,null],[4,"StereoConfig","","Possible stereo speaker configurations.",null,null],[13,"L_R","","Regular.",52,null],[13,"Ls_Rs","","Left surround, right surround.",52,null],[13,"Lc_Rc","","Left center, right center.",52,null],[13,"Sl_Sr","","Side left, side right.",52,null],[13,"C_Lfe","","Center, low frequency effects.",52,null],[4,"SurroundConfig","","Possible surround speaker configurations.",null,null],[13,"S3_0","","3.0 surround sound. Cinema: L R C Music: L R S",53,null],[13,"S3_1","","3.1 surround sound. Cinema: L R C Lfe Music: L R Lfe S",53,null],[13,"S4_0","","4.0 surround sound. Cinema: L R C S (LCRS) Music: L R Ls…",53,null],[13,"S4_1","","4.1 surround sound. Cinema: L R C Lfe S (LCRS + Lfe)…",53,null],[13,"S5_0","","5.0 surround sound. Cinema and music: L R C Ls Rs",53,null],[13,"S5_1","","5.1 surround sound. Cinema and music: L R C Lfe Ls Rs",53,null],[13,"S6_0","","6.0 surround sound. Cinema: L R C Ls Rs Cs Music: L R Ls…",53,null],[13,"S6_1","","6.1 surround sound. Cinema: L R C Lfe Ls Rs Cs Music: L R…",53,null],[13,"S7_0","","7.0 surround sound. Cinema: L R C Ls Rs Lc Rc Music: L R C…",53,null],[13,"S7_1","","7.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Music: L…",53,null],[13,"S8_0","","8.0 surround sound. Cinema: L R C Ls Rs Lc Rc Cs Music: L…",53,null],[13,"S8_1","","8.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Cs…",53,null],[13,"S10_2","","10.2 surround sound. Cinema + Music: L R C Lfe Ls Rs Tfl…",53,null],[4,"SpeakerArrangementType","","Type representing how a channel is used. Only useful for…",null,null],[13,"Custom","","Custom arrangement not specified to host.",54,null],[13,"Empty","","Empty arrangement.",54,null],[13,"Mono","","Mono channel.",54,null],[13,"Stereo","","Stereo channel. Contains type of stereo arrangement and…",54,null],[13,"Surround","","Surround channel. Contains surround arrangement and target…",54,null],[0,"editor","rsynth::backend::vst_backend::vst","All VST plugin editor related functionality.",null,null],[8,"Editor","rsynth::backend::vst_backend::vst::editor","Implemented by plugin editors.",null,null],[10,"size","","Get the size of the editor window.",55,[[]]],[10,"position","","Get the coordinates of the editor window.",55,[[]]],[11,"idle","","Editor idle call. Called by host.",55,[[]]],[11,"close","","Called when the editor window is closed.",55,[[]]],[10,"open","","Called when the editor window is opened.",55,[[]]],[10,"is_open","","Return whether the window is currently open.",55,[[]]],[11,"set_knob_mode","","Set the knob mode for this editor (if supported by host).",55,[[["knobmode",4]]]],[11,"key_up","","Receive key up event. Return `true` if the key was used.",55,[[["keycode",3]]]],[11,"key_down","","Receive key down event. Return `true` if the key was used.",55,[[["keycode",3]]]],[3,"KeyCode","","A platform independent key code. Includes modifier keys.",null,null],[12,"character","","ASCII character for key pressed (if applicable).",56,null],[12,"key","","Key pressed. See `enums::Key`.",56,null],[12,"modifier","","Modifier key bitflags. See `enums::flags::modifier_key`.",56,null],[4,"KnobMode","","Allows host to set how a parameter knob works.",null,null],[13,"Circular","","",57,null],[13,"CircularRelative","","",57,null],[13,"Linear","","",57,null],[4,"Key","","Platform independent key codes.",null,null],[13,"Back","","",58,null],[13,"Tab","","",58,null],[13,"Clear","","",58,null],[13,"Return","","",58,null],[13,"Pause","","",58,null],[13,"Escape","","",58,null],[13,"Space","","",58,null],[13,"Next","","",58,null],[13,"End","","",58,null],[13,"Home","","",58,null],[13,"Left","","",58,null],[13,"Up","","",58,null],[13,"Right","","",58,null],[13,"Down","","",58,null],[13,"PageUp","","",58,null],[13,"PageDown","","",58,null],[13,"Select","","",58,null],[13,"Print","","",58,null],[13,"Enter","","",58,null],[13,"Snapshot","","",58,null],[13,"Insert","","",58,null],[13,"Delete","","",58,null],[13,"Help","","",58,null],[13,"Numpad0","","",58,null],[13,"Numpad1","","",58,null],[13,"Numpad2","","",58,null],[13,"Numpad3","","",58,null],[13,"Numpad4","","",58,null],[13,"Numpad5","","",58,null],[13,"Numpad6","","",58,null],[13,"Numpad7","","",58,null],[13,"Numpad8","","",58,null],[13,"Numpad9","","",58,null],[13,"Multiply","","",58,null],[13,"Add","","",58,null],[13,"Separator","","",58,null],[13,"Subtract","","",58,null],[13,"Decimal","","",58,null],[13,"Divide","","",58,null],[13,"F1","","",58,null],[13,"F2","","",58,null],[13,"F3","","",58,null],[13,"F4","","",58,null],[13,"F5","","",58,null],[13,"F6","","",58,null],[13,"F7","","",58,null],[13,"F8","","",58,null],[13,"F9","","",58,null],[13,"F10","","",58,null],[13,"F11","","",58,null],[13,"F12","","",58,null],[13,"Numlock","","",58,null],[13,"Scroll","","",58,null],[13,"Shift","","",58,null],[13,"Control","","",58,null],[13,"Alt","","",58,null],[13,"Equals","","",58,null],[0,"event","rsynth::backend::vst_backend::vst","Interfaces to VST events.",null,null],[4,"Event","rsynth::backend::vst_backend::vst::event","A VST event.",null,null],[13,"Midi","","A midi event.",59,null],[13,"SysEx","","A system exclusive event.",59,null],[13,"Deprecated","","A deprecated event.",59,null],[3,"MidiEvent","","A midi event.",null,null],[12,"data","","The raw midi data associated with this event.",60,null],[12,"delta_frames","","Number of samples into the current processing block that…",60,null],[12,"live","","This midi event was created live as opposed to being…",60,null],[12,"note_length","","The length of the midi note associated with this event, if…",60,null],[12,"note_offset","","Offset in samples into note from note start, if available.",60,null],[12,"detune","","Detuning between -63 and +64 cents.",60,null],[12,"note_off_velocity","","Note off velocity between 0 and 127.",60,null],[3,"SysExEvent","","A system exclusive event.",null,null],[12,"payload","","The SysEx payload.",61,null],[12,"delta_frames","","Number of samples into the current processing block that…",61,null],[0,"host","rsynth::backend::vst_backend::vst","Host specific structures.",null,null],[8,"Host","rsynth::backend::vst_backend::vst::host","Implemented by all VST hosts.",null,null],[11,"automate","","Automate a parameter; the value has been changed.",62,[[]]],[11,"get_plugin_id","","Get the plugin ID of the currently loading plugin.",62,[[]]],[11,"idle","","An idle call.",62,[[]]],[11,"get_info","","Get vendor and product information.",62,[[]]],[11,"process_events","","Handle incoming events from the plugin.",62,[[["events",3]]]],[11,"get_time_info","","Get time information.",62,[[],[["option",4],["timeinfo",3]]]],[11,"get_block_size","","Get block size.",62,[[]]],[4,"PluginLoadError","","All possible errors that can occur when loading a VST…",null,null],[13,"InvalidPath","","Could not load given path.",63,null],[13,"NotAPlugin","","Given path is not a VST plugin.",63,null],[13,"InstanceFailed","","Failed to create an instance of this plugin.",63,null],[13,"InvalidApiVersion","","The API version which the plugin used is not supported by…",63,null],[3,"PluginLoader","","Wrapper for an externally loaded VST plugin.",null,null],[3,"PluginInstance","","An instance of an externally loaded VST plugin.",null,null],[3,"HostBuffer","","Used for constructing `AudioBuffer` instances on the host.",null,null],[0,"plugin","rsynth::backend::vst_backend::vst","Plugin specific structures.",null,null],[4,"Category","rsynth::backend::vst_backend::vst::plugin","Plugin type. Generally either Effect or Synth.",null,null],[13,"Unknown","","Unknown / not implemented",64,null],[13,"Effect","","Any effect",64,null],[13,"Synth","","VST instrument",64,null],[13,"Analysis","","Scope, tuner, spectrum analyser, etc.",64,null],[13,"Mastering","","Dynamics, etc.",64,null],[13,"Spacializer","","Panners, etc.",64,null],[13,"RoomFx","","Delays and Reverbs",64,null],[13,"SurroundFx","","Dedicated surround processor.",64,null],[13,"Restoration","","Denoiser, etc.",64,null],[13,"OfflineProcess","","Offline processing.",64,null],[13,"Shell","","Contains other plugins.",64,null],[13,"Generator","","Tone generator, etc.",64,null],[3,"Info","","A structure representing static plugin information.",null,null],[12,"name","","Plugin Name.",65,null],[12,"vendor","","Plugin Vendor.",65,null],[12,"presets","","Number of different presets.",65,null],[12,"parameters","","Number of parameters.",65,null],[12,"inputs","","Number of inputs.",65,null],[12,"outputs","","Number of outputs.",65,null],[12,"midi_inputs","","Number of MIDI input channels (1-16), or 0 for the default…",65,null],[12,"midi_outputs","","Number of MIDI output channels (1-16), or 0 for the…",65,null],[12,"unique_id","","Unique plugin ID. Can be registered with Steinberg to…",65,null],[12,"version","","Plugin version (e.g. 0001 = `v0.0.0.1`, 1283 = `v1.2.8.3`).",65,null],[12,"category","","Plugin category. Possible values are found in…",65,null],[12,"initial_delay","","Latency of the plugin in samples.",65,null],[12,"preset_chunks","","Indicates that preset data is handled in formatless chunks.",65,null],[12,"f64_precision","","Indicates whether this plugin can process f64 based…",65,null],[12,"silent_when_stopped","","If this is true, the plugin will not produce sound when…",65,null],[4,"CanDo","","Features which are optionally supported by a plugin. These…",null,null],[13,"SendEvents","","",66,null],[13,"SendMidiEvent","","",66,null],[13,"ReceiveEvents","","",66,null],[13,"ReceiveMidiEvent","","",66,null],[13,"ReceiveTimeInfo","","",66,null],[13,"Offline","","",66,null],[13,"MidiProgramNames","","",66,null],[13,"Bypass","","",66,null],[13,"ReceiveSysExEvent","","",66,null],[13,"MidiSingleNoteTuningChange","","",66,null],[13,"MidiKeyBasedInstrumentControl","","",66,null],[13,"Other","","",66,null],[8,"Plugin","","Must be implemented by all VST plugins.",null,null],[10,"get_info","","This method must return an `Info` struct.",67,[[],["info",3]]],[11,"new","","Called during initialization to pass a `HostCallback` to…",67,[[["hostcallback",3]]]],[11,"init","","Called when plugin is fully initialized.",67,[[]]],[11,"set_sample_rate","","Called when sample rate is changed by host.",67,[[]]],[11,"set_block_size","","Called when block size is changed by host.",67,[[]]],[11,"resume","","Called to transition the plugin into the resumed state.",67,[[]]],[11,"suspend","","Called to transition the plugin into the suspended state.",67,[[]]],[11,"vendor_specific","","Vendor specific handling.",67,[[]]],[11,"can_do","","Return whether plugin supports specified action.",67,[[["cando",4]],["supported",4]]],[11,"get_tail_size","","Get the tail size of plugin when it is stopped. Used in…",67,[[]]],[11,"process","","Process an audio buffer containing `f32` values.",67,[[["audiobuffer",3]]]],[11,"process_f64","","Process an audio buffer containing `f64` values.",67,[[["audiobuffer",3]]]],[11,"process_events","","Handle incoming events sent from the host.",67,[[["events",3]]]],[11,"get_parameter_object","","Get a reference to the shared parameter object.",67,[[],[["pluginparameters",8],["arc",3]]]],[11,"get_input_info","","Get information about an input channel. Only used by some…",67,[[],["channelinfo",3]]],[11,"get_output_info","","Get information about an output channel. Only used by some…",67,[[],["channelinfo",3]]],[11,"start_process","","Called one time before the start of process call.",67,[[]]],[11,"stop_process","","Called after the stop of process call.",67,[[]]],[11,"get_editor","","Return handle to plugin editor if supported. The method…",67,[[],[["box",3],["option",4]]]],[8,"PluginParameters","","Parameter object shared between the UI and processing…",null,null],[11,"change_preset","","Set the current preset to the index specified by `preset`.",68,[[]]],[11,"get_preset_num","","Get the current preset index.",68,[[]]],[11,"set_preset_name","","Set the current preset name.",68,[[["string",3]]]],[11,"get_preset_name","","Get the name of the preset at the index specified by…",68,[[],["string",3]]],[11,"get_parameter_label","","Get parameter label for parameter at `index` (e.g. \\\"db\\\",…",68,[[],["string",3]]],[11,"get_parameter_text","","Get the parameter value for parameter at `index` (e.g.…",68,[[],["string",3]]],[11,"get_parameter_name","","Get the name of parameter at `index`.",68,[[],["string",3]]],[11,"get_parameter","","Get the value of paramater at `index`. Should be value…",68,[[]]],[11,"set_parameter","","Set the value of parameter at `index`. `value` is between…",68,[[]]],[11,"can_be_automated","","Return whether parameter at `index` can be automated.",68,[[]]],[11,"string_to_parameter","","Use String as input for parameter value. Used by host to…",68,[[["string",3]]]],[11,"get_preset_data","","If `preset_chunks` is set to true in plugin info, this…",68,[[],["vec",3]]],[11,"get_bank_data","","If `preset_chunks` is set to true in plugin info, this…",68,[[],["vec",3]]],[11,"load_preset_data","","If `preset_chunks` is set to true in plugin info, this…",68,[[]]],[11,"load_bank_data","","If `preset_chunks` is set to true in plugin info, this…",68,[[]]],[3,"HostCallback","","A reference to the host which allows the plugin to call…",null,null],[0,"util","rsynth::backend::vst_backend::vst","Structures for easing the implementation of VST plugins.",null,null],[3,"AtomicFloat","rsynth::backend::vst_backend::vst::util","Simple atomic floating point variable with relaxed ordering.",null,null],[3,"ParameterTransfer","","A set of parameters that can be shared between threads.",null,null],[3,"ParameterTransferIterator","","An iterator over changed parameters. Returned by `iterate`.",null,null],[14,"plugin_main","rsynth::backend::vst_backend::vst","Exports the necessary symbols for the plugin to be used by…",null,null],[8,"VstPluginMeta","rsynth::backend::vst_backend","A VST plugin should implement this trait in addition to…",null,null],[10,"plugin_id","","",69,[[]]],[10,"category","","",69,[[],["category",4]]],[11,"get_info","","",70,[[],["info",3]]],[11,"new","","Create a new `VstPluginWrapper`. Note Normally, plugin\'s…",70,[[["hostcallback",3]]]],[11,"host","","",70,[[],["hostcallback",3]]],[11,"process","","",70,[[["audiobuffer",3]]]],[11,"process_f64","","",70,[[["audiobuffer",3]]]],[11,"get_input_info","","",70,[[],["channelinfo",3]]],[11,"get_output_info","","",70,[[],["channelinfo",3]]],[11,"process_events","","",70,[[["events",3]]]],[11,"set_sample_rate","","",70,[[]]],[8,"HostInterface","rsynth::backend","Defines an interface for communicating with the host or…",null,null],[10,"output_initialized","","Return whether the output buffers are zero-initialized.…",71,[[]]],[11,"stop","","Stop processing. For backends that do not support…",71,[[]]],[8,"Stop","","A marker trait that indicates that the backend can be…",null,null],[0,"envelope","rsynth","This module has not been thoroughly tested, so expect some…",null,null],[3,"EnvelopeIteratorItem","rsynth::envelope","",null,null],[12,"item","","",72,null],[12,"has_updated","","",72,null],[0,"staircase_envelope","","",null,null],[3,"StairCaseEnvelopeIterator","rsynth::envelope::staircase_envelope","",null,null],[3,"StairCaseEnvelope","","",null,null],[8,"Envelope","rsynth::envelope","Defines the behaviour of an envelope. An envelope allows…",null,null],[16,"Iter","","The type of the iterator.",73,null],[16,"EventType","","",73,null],[10,"iter","","Get the iterator.",73,[[]]],[10,"insert_event","","",73,[[]]],[10,"forget_past","","",73,[[]]],[0,"event","rsynth","Event handling",null,null],[3,"SysExEvent","rsynth::event","A System Exclusive (\\\"SysEx\\\") event.",null,null],[3,"RawMidiEvent","","A raw midi event.",null,null],[3,"Timed","","`Timed<E>` adds timing to an event.",null,null],[12,"time_in_frames","","The offset (in frames) of the event relative to the start…",74,null],[12,"event","","The underlying event.",74,null],[3,"Indexed","","`Indexed<E>` adds an index to an event.",null,null],[12,"index","","The index of the event",75,null],[12,"event","","The underlying event.",75,null],[3,"DeltaEvent","","",null,null],[12,"microseconds_since_previous_event","","",76,null],[12,"event","","",76,null],[0,"event_queue","","",null,null],[3,"EventQueue","rsynth::event::event_queue","",null,null],[3,"AlwaysInsertNewBeforeOld","","",null,null],[3,"AlwaysInsertNewAfterOld","","",null,null],[3,"AlwaysIgnoreNew","","",null,null],[3,"AlwaysRemoveOld","","",null,null],[4,"EventCollisionHandling","","",null,null],[13,"InsertNewBeforeOld","","",77,null],[13,"InsertNewAfterOld","","",77,null],[13,"IgnoreNew","","",77,null],[13,"RemoveOld","","",77,null],[8,"HandleEventCollision","","",null,null],[10,"decide_on_collision","","",78,[[],["eventcollisionhandling",4]]],[11,"new","","Panics Panics if `capacity == 0`.",79,[[]]],[11,"queue_event","","Queue a new event. When the buffer is full, an element may…",79,[[["timed",3]],[["option",4],["timed",3]]]],[11,"forget_before","","Remove all events before, but not on, this threshold.",79,[[]]],[11,"clear","","Remove all events from the queue.",79,[[]]],[11,"shift_time","","Shift time forward by `new_zero_time` frames.",79,[[]]],[11,"get_last_before","","",79,[[],[["timed",3],["option",4]]]],[11,"first","","",79,[[],[["timed",3],["option",4]]]],[11,"split","","",79,[[["vecstorage",3],["vecstorage",3],["audiobufferinout",3]]]],[8,"EventHandler","rsynth::event","The trait that plugins should implement in order to handle…",null,null],[10,"handle_event","","",80,[[]]],[8,"ContextualEventHandler","","The trait that plugins should implement in order to handle…",null,null],[10,"handle_event","","",81,[[]]],[11,"new","","Create a new `SysExEvent` with the given `data`.",82,[[]]],[11,"data","","Get the data from the `SysExEvent`",82,[[]]],[11,"new","","Create a new `RawMidiEvent` with the given raw data.",83,[[]]],[11,"try_new","","Try to create a new `RawMidiEvent` with the given raw…",83,[[],["option",4]]],[11,"data","","Get the raw data from a `RawMidiEvent`.",83,[[]]],[11,"new","","",74,[[]]],[11,"new","","",75,[[]]],[0,"meta","rsynth","Mechanisms for defining the meta-data of a plugin or…",null,null],[3,"AudioPort","rsynth::meta","A \\\"marker\\\" struct to be used as a type parameter for the…",null,null],[3,"MidiPort","","A \\\"marker\\\" struct to be used as a type parameter for the…",null,null],[3,"MetaData","","Represents general-purpose meta-data of an audio…",null,null],[12,"general_meta","","The meta-data about the application or plugin as a whole.",84,null],[12,"audio_port_meta","","Meta-data about the audio ports.",84,null],[12,"midi_port_meta","","Meta-data about the midi ports.",84,null],[3,"InOut","","Represents meta-data about a input and output ports.",null,null],[12,"inputs","","Meta-data of the input ports.",85,null],[12,"outputs","","Meta-data of the output ports.",85,null],[8,"Meta","","Define the meta-data for an application or plug-in.",null,null],[16,"MetaData","","The data-type that represents the meta-data.",86,null],[10,"meta","","Get the meta-data.",86,[[]]],[8,"General","","Define meta-data of an application or plugin as a whole.",null,null],[16,"GeneralData","","The data-type of the general meta-data.",87,null],[10,"general","","Get the general meta-data.",87,[[]]],[8,"Name","","Implement this trait to indicate that a type can be used…",null,null],[10,"name","","Get the name.",88,[[]]],[8,"Port","","Define meta-data for input ports and output ports.",null,null],[16,"PortData","","",89,null],[10,"in_ports","","",89,[[]]],[10,"out_ports","","",89,[[]]],[0,"test_utilities","rsynth","Utilities for testing.",null,null],[3,"DummyEventHandler","rsynth::test_utilities","",null,null],[3,"TestPlugin","","A plugin useful for writing automated tests.",null,null],[11,"new","","",90,[[["audiochunk",3],["vec",3],["vec",3],["vec",3]]]],[11,"check_last","","",90,[[]]],[0,"utilities","rsynth","",null,null],[0,"polyphony","rsynth::utilities","Utility to facilitate genarating different sounds at the…",null,null],[3,"ToneIdentifier","rsynth::utilities::polyphony","Used to dispatch polyphonic event to the correct voice,…",null,null],[12,"0","","",91,null],[3,"RawMidiEventToneIdentifierDispatchClassifier","","",null,null],[4,"EventDispatchClass","","",null,null],[13,"Broadcast","","",92,null],[13,"AssignNewVoice","","",92,null],[13,"VoiceSpecific","","",92,null],[13,"ReleaseVoice","","",92,null],[4,"VoiceAssignment","","",null,null],[13,"None","","",93,null],[13,"All","","",93,null],[13,"Some","","",93,null],[0,"simple_event_dispatching","","Some basic event dispatching.",null,null],[3,"SimpleEventDispatcher","rsynth::utilities::polyphony::simple_event_dispatching","A simple event dispatcher.",null,null],[4,"SimpleVoiceState","","A simple voice state",null,null],[13,"Idle","","The voice is idle (in other words: doing nothing).",94,null],[13,"Releasing","","The voice has received a signal to stop, but is still…",94,null],[13,"Active","","The voice has not yet received a signal to stop and is…",94,null],[11,"new","","",95,[[]]],[8,"EventDispatchClassifier","rsynth::utilities::polyphony","",null,null],[16,"VoiceIdentifier","","",96,null],[10,"classify","","",96,[[],["eventdispatchclass",4]]],[8,"Voice","","Implement this trait to inform the polyphonic event…",null,null],[10,"state","","",97,[[]]],[8,"VoiceAssigner","","",null,null],[16,"Voice","","",98,null],[11,"assign_event","","",98,[[],["voiceassignment",4]]],[10,"find_active_voice","","",98,[[],["option",4]]],[10,"find_idle_voice","","",98,[[]]],[8,"EventDispatcher","","",null,null],[11,"dispatch_event","","",99,[[]]],[8,"ContextualEventDispatcher","","",null,null],[11,"dispatch_contextual_event","","Dispatch an event to the voice or voices that should…",100,[[]]],[8,"AudioHandlerMeta","rsynth","Define the maximum number of audio inputs and the maximum…",null,null],[10,"max_number_of_audio_inputs","","The maximum number of audio inputs supported. This method…",101,[[]]],[10,"max_number_of_audio_outputs","","The maximum number of audio outputs supported. This method…",101,[[]]],[8,"AudioHandler","","Define how sample-rate changes are handled.",null,null],[10,"set_sample_rate","","Called when the sample-rate changes. The backend should…",102,[[]]],[8,"MidiHandlerMeta","","Define the maximum number of midi inputs and the maximum…",null,null],[10,"max_number_of_midi_inputs","","The maximum number of midi inputs supported. This method…",103,[[]]],[10,"max_number_of_midi_outputs","","The maximum number of midi outputs supported. This method…",103,[[]]],[8,"AudioRenderer","","Defines how audio is rendered.",null,null],[10,"render_buffer","","This method is called repeatedly for subsequent audio…",104,[[["audiobufferinout",3]]]],[8,"ContextualAudioRenderer","","Defines how audio is rendered, similar to the…",null,null],[10,"render_buffer","","This method called repeatedly for subsequent buffers.",105,[[["audiobufferinout",3]]]],[8,"CommonPluginMeta","","Provides common meta-data of the plugin or application to…",null,null],[10,"name","","The name of the plugin or application.",106,[[]]],[8,"CommonAudioPortMeta","","Provides some meta-data of the audio-ports used by the…",null,null],[11,"audio_input_name","","The name of the audio input with the given index. You can…",107,[[],["string",3]]],[11,"audio_output_name","","The name of the audio output with the given index. You can…",107,[[],["string",3]]],[8,"CommonMidiPortMeta","","Provides some meta-data of the midi-ports used by the…",null,null],[11,"midi_input_name","","The name of the midi input with the given index. You can…",108,[[],["string",3]]],[11,"midi_output_name","","The name of the midi output with the given index. You can…",108,[[],["string",3]]],[14,"audio_chunk","","Create an audio chunk. ## Example `// Create an audio…",null,null],[14,"vst_init","","A wrapper around the `plugin_main!` macro from the `vst`…",null,null],[11,"from","rsynth::buffer","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from_sample_","","",0,[[]]],[11,"to_sample_","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from_sample_","","",1,[[]]],[11,"to_sample_","","",1,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"into_iter","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from_sample_","","",109,[[]]],[11,"to_sample_","","",109,[[]]],[11,"par_bridge","","",109,[[],["iterbridge",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from_sample_","","",2,[[]]],[11,"to_sample_","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from_sample_","","",3,[[]]],[11,"to_sample_","","",3,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"into_iter","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from_sample_","","",110,[[]]],[11,"to_sample_","","",110,[[]]],[11,"par_bridge","","",110,[[],["iterbridge",3]]],[11,"from","rsynth::backend::combined","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from_sample_","","",17,[[]]],[11,"to_sample_","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from_sample_","","",18,[[]]],[11,"to_sample_","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from_sample_","","",19,[[]]],[11,"to_sample_","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from_sample_","","",20,[[]]],[11,"to_sample_","","",20,[[]]],[11,"par_bridge","","",20,[[],["iterbridge",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from_sample_","","",21,[[]]],[11,"to_sample_","","",21,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from_sample_","","",4,[[]]],[11,"to_sample_","","",4,[[]]],[11,"as_fail","","",4,[[],["fail",8]]],[11,"from","rsynth::backend::combined::dummy","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from_sample_","","",5,[[]]],[11,"to_sample_","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from_sample_","","",6,[[]]],[11,"to_sample_","","",6,[[]]],[11,"par_bridge","","",6,[[],["iterbridge",3]]],[11,"from","rsynth::backend::combined::hound","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from_sample_","","",8,[[]]],[11,"to_sample_","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from_sample_","","",9,[[]]],[11,"to_sample_","","",9,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from_sample_","","",7,[[]]],[11,"to_sample_","","",7,[[]]],[11,"as_fail","","",7,[[],["fail",8]]],[11,"from","rsynth::backend::combined::memory","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from_sample_","","",10,[[]]],[11,"to_sample_","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from_sample_","","",11,[[]]],[11,"to_sample_","","",11,[[]]],[11,"from","rsynth::backend::combined::midly","",13,[[]]],[11,"into","","",13,[[]]],[11,"into_iter","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from_sample_","","",13,[[]]],[11,"to_sample_","","",13,[[]]],[11,"par_bridge","","",13,[[],["iterbridge",3]]],[11,"from","rsynth::backend::combined::midly::midly","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from_sample_","","",12,[[]]],[11,"to_sample_","","",12,[[]]],[11,"from","rsynth::backend::jack_backend","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from_sample_","","",31,[[]]],[11,"to_sample_","","",31,[[]]],[11,"from","rsynth::backend::jack_backend::jack","",111,[[]]],[11,"into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from_sample_","","",111,[[]]],[11,"to_sample_","","",111,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from_sample_","","",112,[[]]],[11,"to_sample_","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from_sample_","","",113,[[]]],[11,"to_sample_","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from_sample_","","",114,[[]]],[11,"to_sample_","","",114,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from_sample_","","",22,[[]]],[11,"to_sample_","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from_sample_","","",23,[[]]],[11,"to_sample_","","",23,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from_sample_","","",115,[[]]],[11,"to_sample_","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from_sample_","","",116,[[]]],[11,"to_sample_","","",116,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from_sample_","","",26,[[]]],[11,"to_sample_","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from_sample_","","",27,[[]]],[11,"to_sample_","","",27,[[]]],[11,"as_fail","","",27,[[],["fail",8]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from_sample_","","",28,[[]]],[11,"to_sample_","","",28,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from_sample_","","",117,[[]]],[11,"to_sample_","","",117,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from_sample_","","",118,[[]]],[11,"to_sample_","","",118,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from_sample_","","",119,[[]]],[11,"to_sample_","","",119,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"into_iter","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from_sample_","","",120,[[]]],[11,"to_sample_","","",120,[[]]],[11,"par_bridge","","",120,[[],["iterbridge",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from_sample_","","",121,[[]]],[11,"to_sample_","","",121,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from_sample_","","",122,[[]]],[11,"to_sample_","","",122,[[]]],[11,"from","","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from_sample_","","",123,[[]]],[11,"to_sample_","","",123,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from_sample_","","",124,[[]]],[11,"to_sample_","","",124,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from_sample_","","",30,[[]]],[11,"to_sample_","","",30,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from_sample_","","",125,[[]]],[11,"to_sample_","","",125,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from_sample_","","",126,[[]]],[11,"to_sample_","","",126,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from_sample_","","",127,[[]]],[11,"to_sample_","","",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from_sample_","","",128,[[]]],[11,"to_sample_","","",128,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from_sample_","","",129,[[]]],[11,"to_sample_","","",129,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from_sample_","","",130,[[]]],[11,"to_sample_","","",130,[[]]],[11,"from","rsynth::backend::vst_backend","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from_sample_","","",70,[[]]],[11,"to_sample_","","",70,[[]]],[11,"from","rsynth::backend::vst_backend::vst::api","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from_sample_","","",32,[[]]],[11,"to_sample_","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from_sample_","","",33,[[]]],[11,"to_sample_","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from_sample_","","",34,[[]]],[11,"to_sample_","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from_sample_","","",35,[[]]],[11,"to_sample_","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from_sample_","","",36,[[]]],[11,"to_sample_","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from_sample_","","",37,[[]]],[11,"to_sample_","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from_sample_","","",38,[[]]],[11,"to_sample_","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from_sample_","","",39,[[]]],[11,"to_sample_","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from_sample_","","",40,[[]]],[11,"to_sample_","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from_sample_","","",41,[[]]],[11,"to_sample_","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from_sample_","","",42,[[]]],[11,"to_sample_","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from_sample_","","",43,[[]]],[11,"to_sample_","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from_sample_","","",44,[[]]],[11,"to_sample_","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from_sample_","","",45,[[]]],[11,"to_sample_","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from_sample_","","",46,[[]]],[11,"to_sample_","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from_sample_","","",47,[[]]],[11,"to_sample_","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from_sample_","","",48,[[]]],[11,"to_sample_","","",48,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from_sample_","","",131,[[]]],[11,"to_sample_","","",131,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from_sample_","","",132,[[]]],[11,"to_sample_","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from_sample_","","",133,[[]]],[11,"to_sample_","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from_sample_","","",134,[[]]],[11,"to_sample_","","",134,[[]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from_sample_","","",135,[[]]],[11,"to_sample_","","",135,[[]]],[11,"from","rsynth::backend::vst_backend::vst::buffer","",136,[[]]],[11,"into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from_sample_","","",136,[[]]],[11,"to_sample_","","",136,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"into_iter","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from_sample_","","",137,[[]]],[11,"to_sample_","","",137,[[]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"into_iter","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"from_sample_","","",138,[[]]],[11,"to_sample_","","",138,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"into_iter","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from_sample_","","",139,[[]]],[11,"to_sample_","","",139,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from_sample_","","",140,[[]]],[11,"to_sample_","","",140,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"into_iter","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from_sample_","","",141,[[]]],[11,"to_sample_","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from_sample_","","",142,[[]]],[11,"to_sample_","","",142,[[]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",143,[[]]],[11,"into","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from_sample_","","",143,[[]]],[11,"to_sample_","","",143,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from_sample_","","",50,[[]]],[11,"to_sample_","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from_sample_","","",51,[[]]],[11,"to_sample_","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from_sample_","","",52,[[]]],[11,"to_sample_","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from_sample_","","",53,[[]]],[11,"to_sample_","","",53,[[]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from_sample_","","",54,[[]]],[11,"to_sample_","","",54,[[]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from_sample_","","",56,[[]]],[11,"to_sample_","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from_sample_","","",57,[[]]],[11,"to_sample_","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from_sample_","","",58,[[]]],[11,"to_sample_","","",58,[[]]],[11,"from","rsynth::backend::vst_backend::vst::event","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from_sample_","","",59,[[]]],[11,"to_sample_","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from_sample_","","",60,[[]]],[11,"to_sample_","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from_sample_","","",61,[[]]],[11,"to_sample_","","",61,[[]]],[11,"from","rsynth::backend::vst_backend::vst::host","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from_sample_","","",63,[[]]],[11,"to_sample_","","",63,[[]]],[11,"as_fail","","",63,[[],["fail",8]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from_sample_","","",144,[[]]],[11,"to_sample_","","",144,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from_sample_","","",145,[[]]],[11,"to_sample_","","",145,[[]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from_sample_","","",146,[[]]],[11,"to_sample_","","",146,[[]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from_sample_","","",64,[[]]],[11,"to_sample_","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from_sample_","","",65,[[]]],[11,"to_sample_","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from_sample_","","",66,[[]]],[11,"to_sample_","","",66,[[]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from_sample_","","",147,[[]]],[11,"to_sample_","","",147,[[]]],[11,"from","rsynth::backend::vst_backend::vst::util","",148,[[]]],[11,"into","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from_sample_","","",148,[[]]],[11,"to_sample_","","",148,[[]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from_sample_","","",149,[[]]],[11,"to_sample_","","",149,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"into_iter","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from_sample_","","",150,[[]]],[11,"to_sample_","","",150,[[]]],[11,"par_bridge","","",150,[[],["iterbridge",3]]],[11,"from","rsynth::envelope","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from_sample_","","",72,[[]]],[11,"to_sample_","","",72,[[]]],[11,"from","rsynth::envelope::staircase_envelope","",151,[[]]],[11,"into","","",151,[[]]],[11,"into_iter","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from_sample_","","",151,[[]]],[11,"to_sample_","","",151,[[]]],[11,"par_bridge","","",151,[[],["iterbridge",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from_sample_","","",152,[[]]],[11,"to_sample_","","",152,[[]]],[11,"from","rsynth::event","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from_sample_","","",82,[[]]],[11,"to_sample_","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from_sample_","","",83,[[]]],[11,"to_sample_","","",83,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from_sample_","","",74,[[]]],[11,"to_sample_","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from_sample_","","",75,[[]]],[11,"to_sample_","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from_sample_","","",76,[[]]],[11,"to_sample_","","",76,[[]]],[11,"from","rsynth::event::event_queue","",79,[[]]],[11,"into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from_sample_","","",79,[[]]],[11,"to_sample_","","",79,[[]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from_sample_","","",153,[[]]],[11,"to_sample_","","",153,[[]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from_sample_","","",154,[[]]],[11,"to_sample_","","",154,[[]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from_sample_","","",155,[[]]],[11,"to_sample_","","",155,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from_sample_","","",156,[[]]],[11,"to_sample_","","",156,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from_sample_","","",77,[[]]],[11,"to_sample_","","",77,[[]]],[11,"from","rsynth::meta","",157,[[]]],[11,"into","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from_sample_","","",157,[[]]],[11,"to_sample_","","",157,[[]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from_sample_","","",158,[[]]],[11,"to_sample_","","",158,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from_sample_","","",84,[[]]],[11,"to_sample_","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from_sample_","","",85,[[]]],[11,"to_sample_","","",85,[[]]],[11,"from","rsynth::test_utilities","",159,[[]]],[11,"into","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from_sample_","","",159,[[]]],[11,"to_sample_","","",159,[[]]],[11,"max_number_of_audio_inputs","","",90,[[]]],[11,"max_number_of_audio_outputs","","",90,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from_sample_","","",90,[[]]],[11,"to_sample_","","",90,[[]]],[11,"from","rsynth::utilities::polyphony","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from_sample_","","",91,[[]]],[11,"to_sample_","","",91,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from_sample_","","",160,[[]]],[11,"to_sample_","","",160,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from_sample_","","",92,[[]]],[11,"to_sample_","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from_sample_","","",93,[[]]],[11,"to_sample_","","",93,[[]]],[11,"from","rsynth::utilities::polyphony::simple_event_dispatching","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from_sample_","","",95,[[]]],[11,"to_sample_","","",95,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from_sample_","","",94,[[]]],[11,"to_sample_","","",94,[[]]],[11,"clone","rsynth::backend::combined::midly::midly","",12,[[],["event",3]]],[11,"eq","","",12,[[["event",3]]]],[11,"ne","","",12,[[["event",3]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitxor_assign","rsynth::backend::jack_backend::jack","Toggles the set of flags.",113,[[["clientoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",124,[[["portflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",114,[[["clientstatus",3]]]],[11,"process","","",22,[[["client",3],["processscope",3]],["control",4]]],[11,"not","","Returns the complement of this set of flags.",113,[[],["clientoptions",3]]],[11,"not","","Returns the complement of this set of flags.",124,[[],["portflags",3]]],[11,"not","","Returns the complement of this set of flags.",114,[[],["clientstatus",3]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","Returns the set difference of the two sets of flags.",124,[[["portflags",3]],["portflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",114,[[["clientstatus",3]],["clientstatus",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",113,[[["clientoptions",3]],["clientoptions",3]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",114,[[],["clientstatus",3]]],[11,"clone","","",118,[[],["audioout",3]]],[11,"clone","","",26,[[],["control",4]]],[11,"clone","","",121,[[],["midiout",3]]],[11,"clone","","",23,[[],["cycletimes",3]]],[11,"clone","","",124,[[],["portflags",3]]],[11,"clone","","",117,[[],["audioin",3]]],[11,"clone","","",113,[[],["clientoptions",3]]],[11,"clone","","",123,[[],[["unowned",3],["port",3]]]],[11,"clone","","",28,[[],["latencytype",4]]],[11,"clone","","",27,[[],["error",4]]],[11,"clone","","",119,[[],["midiin",3]]],[11,"clone","","",120,[[],["midiiter",3]]],[11,"clone","","",30,[[],["rawmidi",3]]],[11,"read","","",129,[[],[["error",3],["result",4]]]],[11,"extend","","",124,[[]]],[11,"extend","","",114,[[]]],[11,"extend","","",113,[[]]],[11,"default","","",121,[[],["midiout",3]]],[11,"default","","",30,[[],["rawmidi",3]]],[11,"default","","",125,[[],["unowned",3]]],[11,"default","","",117,[[],["audioin",3]]],[11,"default","","",118,[[],["audioout",3]]],[11,"default","","",119,[[],["midiin",3]]],[11,"default","","",26,[[],["control",4]]],[11,"fmt","","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",122,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",123,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",125,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",112,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","","",120,[[],["option",4]]],[11,"size_hint","","",120,[[]]],[11,"count","","",120,[[]]],[11,"last","","",120,[[],["option",4]]],[11,"nth","","",120,[[],["option",4]]],[11,"deref","","",126,[[]]],[11,"deref","","",127,[[]]],[11,"deref","","",116,[[]]],[11,"hash","","",113,[[]]],[11,"hash","","",124,[[]]],[11,"hash","","",123,[[]]],[11,"hash","","",114,[[]]],[11,"write","","",130,[[],[["error",3],["result",4]]]],[11,"flush","","",130,[[],[["error",3],["result",4]]]],[11,"fmt","","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitor","","Returns the union of the two sets of flags.",114,[[["clientstatus",3]],["clientstatus",3]]],[11,"bitor","","Returns the union of the two sets of flags.",124,[[["portflags",3]],["portflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",113,[[["clientoptions",3]],["clientoptions",3]]],[11,"partial_cmp","","",124,[[["portflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",124,[[["portflags",3]]]],[11,"le","","",124,[[["portflags",3]]]],[11,"gt","","",124,[[["portflags",3]]]],[11,"ge","","",124,[[["portflags",3]]]],[11,"partial_cmp","","",114,[[["clientstatus",3]],[["option",4],["ordering",4]]]],[11,"lt","","",114,[[["clientstatus",3]]]],[11,"le","","",114,[[["clientstatus",3]]]],[11,"gt","","",114,[[["clientstatus",3]]]],[11,"ge","","",114,[[["clientstatus",3]]]],[11,"partial_cmp","","",113,[[["clientoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",113,[[["clientoptions",3]]]],[11,"le","","",113,[[["clientoptions",3]]]],[11,"gt","","",113,[[["clientoptions",3]]]],[11,"ge","","",113,[[["clientoptions",3]]]],[11,"partial_cmp","","",123,[[["port",3]],[["option",4],["ordering",4]]]],[11,"from_iter","","",113,[[],["clientoptions",3]]],[11,"from_iter","","",114,[[],["clientstatus",3]]],[11,"from_iter","","",124,[[],["portflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",114,[[["clientstatus",3]],["clientstatus",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",124,[[["portflags",3]],["portflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",113,[[["clientoptions",3]],["clientoptions",3]]],[11,"bitor_assign","","Adds the set of flags.",114,[[["clientstatus",3]]]],[11,"bitor_assign","","Adds the set of flags.",113,[[["clientoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",124,[[["portflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",124,[[["portflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",113,[[["clientoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",114,[[["clientstatus",3]]]],[11,"initialize","","",116,[[["client_name_size",3]]]],[11,"initialize","","",127,[[["port_type_size",3]]]],[11,"initialize","","",126,[[["port_name_size",3]]]],[11,"eq","","",27,[[["error",4]]]],[11,"ne","","",27,[[["error",4]]]],[11,"eq","","",26,[[["control",4]]]],[11,"eq","","",123,[[["port",3]]]],[11,"eq","","",124,[[["portflags",3]]]],[11,"ne","","",124,[[["portflags",3]]]],[11,"eq","","",30,[[["rawmidi",3]]]],[11,"ne","","",30,[[["rawmidi",3]]]],[11,"eq","","",113,[[["clientoptions",3]]]],[11,"ne","","",113,[[["clientoptions",3]]]],[11,"eq","","",114,[[["clientstatus",3]]]],[11,"ne","","",114,[[["clientstatus",3]]]],[11,"eq","","",23,[[["cycletimes",3]]]],[11,"ne","","",23,[[["cycletimes",3]]]],[11,"cmp","","",113,[[["clientoptions",3]],["ordering",4]]],[11,"cmp","","",123,[[["port",3]],["ordering",4]]],[11,"cmp","","",124,[[["portflags",3]],["ordering",4]]],[11,"cmp","","",114,[[["clientstatus",3]],["ordering",4]]],[11,"fmt","","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",124,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",114,[[["clientstatus",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",113,[[["clientoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",124,[[["portflags",3]]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",124,[[["portflags",3]],["portflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",114,[[["clientstatus",3]],["clientstatus",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",113,[[["clientoptions",3]],["clientoptions",3]]],[11,"drop","","",129,[[]]],[11,"drop","","",128,[[]]],[11,"drop","","",130,[[]]],[11,"drop","","Deactivate and close the client.",111,[[]]],[11,"drop","","",112,[[]]],[11,"jack_port_type","","Panics on call since the `Unowned` spec can\'t be used to…",125,[[]]],[11,"jack_flags","","Panics on call since the `Unowned` spec can\'t be used to…",125,[[],["portflags",3]]],[11,"jack_buffer_size","","Panics on call since the `Unowned` spec can\'t be used to…",125,[[]]],[11,"jack_port_type","","",118,[[]]],[11,"jack_flags","","",118,[[],["portflags",3]]],[11,"jack_buffer_size","","",118,[[]]],[11,"jack_port_type","","",121,[[]]],[11,"jack_flags","","",121,[[],["portflags",3]]],[11,"jack_buffer_size","","",121,[[]]],[11,"jack_port_type","","",117,[[]]],[11,"jack_flags","","",117,[[],["portflags",3]]],[11,"jack_buffer_size","","",117,[[]]],[11,"jack_port_type","","",119,[[]]],[11,"jack_flags","","",119,[[],["portflags",3]]],[11,"jack_buffer_size","","",119,[[]]],[11,"description","rsynth::backend::vst_backend::vst::host","",63,[[]]],[11,"into_iter","rsynth::backend::vst_backend::vst::buffer","",138,[[]]],[11,"bitxor_assign","rsynth::backend::vst_backend::vst::api","Toggles the set of flags.",131,[[["channelflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",132,[[["pluginflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",135,[[["timeinfoflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",133,[[["modifierkey",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",134,[[["midieventflags",3]]]],[11,"not","","Returns the complement of this set of flags.",135,[[],["timeinfoflags",3]]],[11,"not","","Returns the complement of this set of flags.",131,[[],["channelflags",3]]],[11,"not","","Returns the complement of this set of flags.",134,[[],["midieventflags",3]]],[11,"not","","Returns the complement of this set of flags.",133,[[],["modifierkey",3]]],[11,"not","","Returns the complement of this set of flags.",132,[[],["pluginflags",3]]],[11,"fmt","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","Returns the set difference of the two sets of flags.",134,[[["midieventflags",3]],["midieventflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",131,[[["channelflags",3]],["channelflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",133,[[["modifierkey",3]],["modifierkey",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",135,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",132,[[["pluginflags",3]],["pluginflags",3]]],[11,"fmt","","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index_mut","rsynth::backend::vst_backend::vst::buffer","",140,[[]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",57,[[],["knobmode",4]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",48,[[],["smpteframerate",4]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",61,[[],["sysexevent",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",44,[[],["event",3]]],[11,"clone","","",131,[[],["channelflags",3]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",58,[[],["key",4]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",132,[[],["pluginflags",3]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",60,[[],["midievent",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",135,[[],["timeinfoflags",3]]],[11,"clone","rsynth::backend::vst_backend::vst::buffer","",138,[[],["inputs",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",47,[[],["timeinfo",3]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",64,[[],["category",4]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",59,[[],["event",4]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",147,[[],["hostcallback",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",134,[[],["midieventflags",3]]],[11,"clone","","",46,[[],["sysexevent",3]]],[11,"clone","","",133,[[],["modifierkey",3]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",65,[[],["info",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",34,[[],["speakerarrangementtype",4]]],[11,"clone","","",43,[[],["eventtype",4]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",56,[[],["keycode",3]]],[11,"automate","rsynth::backend::vst_backend::vst::plugin","",147,[[]]],[11,"get_plugin_id","","",147,[[]]],[11,"idle","","",147,[[]]],[11,"get_info","","",147,[[]]],[11,"process_events","","Send events to the host.",147,[[["events",3]]]],[11,"get_time_info","","Request time information from Host.",147,[[],[["option",4],["timeinfo",3]]]],[11,"get_block_size","","Get block size.",147,[[]]],[11,"extend","rsynth::backend::vst_backend::vst::api","",132,[[]]],[11,"extend","","",135,[[]]],[11,"extend","","",134,[[]]],[11,"extend","","",131,[[]]],[11,"extend","","",133,[[]]],[11,"default","rsynth::backend::vst_backend::vst::util","",149,[[],["parametertransfer",3]]],[11,"default","rsynth::backend::vst_backend::vst::api","",48,[[],["smpteframerate",4]]],[11,"default","rsynth::backend::vst_backend::vst::buffer","",142,[[],["sendeventbuffer",3]]],[11,"default","rsynth::backend::vst_backend::vst::channels","",54,[[],["speakerarrangementtype",4]]],[11,"default","rsynth::backend::vst_backend::vst::api","",47,[[],["timeinfo",3]]],[11,"default","rsynth::backend::vst_backend::vst::plugin","",65,[[],["info",3]]],[11,"default","","",147,[[],["hostcallback",3]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::plugin","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::plugin","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::host","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","rsynth::backend::vst_backend::vst::buffer","",139,[[],["option",4]]],[11,"next","rsynth::backend::vst_backend::vst::util","",150,[[],["option",4]]],[11,"next","rsynth::backend::vst_backend::vst::buffer","",137,[[],["option",4]]],[11,"next","","",141,[[],["option",4]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",58,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",64,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",58,[[]]],[11,"into","","",57,[[]]],[11,"into","","",57,[[]]],[11,"into","","",58,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",64,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",58,[[]]],[11,"into","","",57,[[]]],[11,"into","","",58,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",64,[[]]],[11,"into","","",66,[[],["string",3]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",58,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",64,[[]]],[11,"into","","",64,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",57,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",64,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",57,[[]]],[11,"into","rsynth::backend::vst_backend::vst::api","Convert to integer ordinal for interop with VST api.",35,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",58,[[]]],[11,"into","","",58,[[]]],[11,"into","","",58,[[]]],[11,"into","rsynth::backend::vst_backend::vst::channels","Convert to VST API arrangement type.",54,[[],["speakerarrangementtype",4]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",57,[[]]],[11,"into","","",57,[[]]],[11,"into","","",57,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",64,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",57,[[]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",64,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",58,[[]]],[11,"into","rsynth::backend::vst_backend::vst::channels","Convert to the VST api equivalent of this structure.",143,[[],["channelproperties",3]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",64,[[]]],[11,"into","","",64,[[]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",57,[[]]],[11,"hash","rsynth::backend::vst_backend::vst::api","",135,[[]]],[11,"hash","","",134,[[]]],[11,"hash","","",133,[[]]],[11,"hash","","",131,[[]]],[11,"hash","","",132,[[]]],[11,"get_info","rsynth::backend::vst_backend::vst::host","",145,[[],["info",3]]],[11,"init","","",145,[[]]],[11,"set_sample_rate","","",145,[[]]],[11,"set_block_size","","",145,[[]]],[11,"resume","","",145,[[]]],[11,"suspend","","",145,[[]]],[11,"vendor_specific","","",145,[[]]],[11,"can_do","","",145,[[["cando",4]],["supported",4]]],[11,"get_tail_size","","",145,[[]]],[11,"process","","",145,[[["audiobuffer",3]]]],[11,"process_f64","","",145,[[["audiobuffer",3]]]],[11,"process_events","","",145,[[["events",3]]]],[11,"get_input_info","","",145,[[],["channelinfo",3]]],[11,"get_output_info","","",145,[[],["channelinfo",3]]],[11,"get_parameter_object","","",145,[[],[["pluginparameters",8],["arc",3]]]],[11,"write_into","rsynth::backend::vst_backend::vst::event","",60,[[["sysexevent",3]]]],[11,"write_into","","",59,[[["sysexevent",3]]]],[11,"write_into","","",61,[[["sysexevent",3]]]],[11,"index","rsynth::backend::vst_backend::vst::buffer","",140,[[]]],[11,"index","","",138,[[]]],[11,"fmt","rsynth::backend::vst_backend::vst::host","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitor","rsynth::backend::vst_backend::vst::api","Returns the union of the two sets of flags.",133,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitor","","Returns the union of the two sets of flags.",134,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",135,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",131,[[["channelflags",3]],["channelflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",132,[[["pluginflags",3]],["pluginflags",3]]],[11,"partial_cmp","","",135,[[["timeinfoflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",135,[[["timeinfoflags",3]]]],[11,"le","","",135,[[["timeinfoflags",3]]]],[11,"gt","","",135,[[["timeinfoflags",3]]]],[11,"ge","","",135,[[["timeinfoflags",3]]]],[11,"partial_cmp","","",133,[[["modifierkey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",133,[[["modifierkey",3]]]],[11,"le","","",133,[[["modifierkey",3]]]],[11,"gt","","",133,[[["modifierkey",3]]]],[11,"ge","","",133,[[["modifierkey",3]]]],[11,"partial_cmp","","",132,[[["pluginflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",132,[[["pluginflags",3]]]],[11,"le","","",132,[[["pluginflags",3]]]],[11,"gt","","",132,[[["pluginflags",3]]]],[11,"ge","","",132,[[["pluginflags",3]]]],[11,"partial_cmp","","",131,[[["channelflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",131,[[["channelflags",3]]]],[11,"le","","",131,[[["channelflags",3]]]],[11,"gt","","",131,[[["channelflags",3]]]],[11,"ge","","",131,[[["channelflags",3]]]],[11,"partial_cmp","","",134,[[["midieventflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",134,[[["midieventflags",3]]]],[11,"le","","",134,[[["midieventflags",3]]]],[11,"gt","","",134,[[["midieventflags",3]]]],[11,"ge","","",134,[[["midieventflags",3]]]],[11,"from_iter","","",131,[[],["channelflags",3]]],[11,"from_iter","","",132,[[],["pluginflags",3]]],[11,"from_iter","","",135,[[],["timeinfoflags",3]]],[11,"from_iter","","",134,[[],["midieventflags",3]]],[11,"from_iter","","",133,[[],["modifierkey",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",133,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",135,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",134,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",131,[[["channelflags",3]],["channelflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",132,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitor_assign","","Adds the set of flags.",134,[[["midieventflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",132,[[["pluginflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",131,[[["channelflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",135,[[["timeinfoflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",133,[[["modifierkey",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",135,[[["timeinfoflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",132,[[["pluginflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",131,[[["channelflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",133,[[["modifierkey",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",134,[[["midieventflags",3]]]],[11,"eq","","",134,[[["midieventflags",3]]]],[11,"ne","","",134,[[["midieventflags",3]]]],[11,"eq","","",135,[[["timeinfoflags",3]]]],[11,"ne","","",135,[[["timeinfoflags",3]]]],[11,"eq","","",133,[[["modifierkey",3]]]],[11,"ne","","",133,[[["modifierkey",3]]]],[11,"eq","","",131,[[["channelflags",3]]]],[11,"ne","","",131,[[["channelflags",3]]]],[11,"eq","","",132,[[["pluginflags",3]]]],[11,"ne","","",132,[[["pluginflags",3]]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",58,[[],["key",4]]],[11,"from","","",58,[[],["key",4]]],[11,"from","","",57,[[],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::event","",59,[[["event",3]],["event",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",64,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",57,[[],["knobmode",4]]],[11,"from","","",58,[[],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",64,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",58,[[],["key",4]]],[11,"from","","",58,[[],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",64,[[],["category",4]]],[11,"from","","",64,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",57,[[],["knobmode",4]]],[11,"from","","",57,[[],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",64,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",54,[[["channelproperties",3]],["speakerarrangementtype",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",58,[[],["key",4]]],[11,"from","","",58,[[],["key",4]]],[11,"from","","",57,[[],["knobmode",4]]],[11,"from","","",57,[[],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",64,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",57,[[],["knobmode",4]]],[11,"from","","",58,[[],["key",4]]],[11,"from","","",57,[[],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",64,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",58,[[],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",64,[[],["category",4]]],[11,"from","","",64,[[],["category",4]]],[11,"from","","",64,[[],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",143,[[["channelproperties",3]],["channelinfo",3]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",58,[[],["key",4]]],[11,"from","","",57,[[],["knobmode",4]]],[11,"from","","",57,[[],["knobmode",4]]],[11,"cmp","rsynth::backend::vst_backend::vst::api","",133,[[["modifierkey",3]],["ordering",4]]],[11,"cmp","","",132,[[["pluginflags",3]],["ordering",4]]],[11,"cmp","","",134,[[["midieventflags",3]],["ordering",4]]],[11,"cmp","","",131,[[["channelflags",3]],["ordering",4]]],[11,"cmp","","",135,[[["timeinfoflags",3]],["ordering",4]]],[11,"fmt","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",132,[[["pluginflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",135,[[["timeinfoflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",131,[[["channelflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",133,[[["modifierkey",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",134,[[["midieventflags",3]]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",131,[[["channelflags",3]],["channelflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",133,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",135,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",134,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",132,[[["pluginflags",3]],["pluginflags",3]]],[11,"drop","rsynth::backend::vst_backend::vst::host","",145,[[]]],[11,"number_of_channels","rsynth::backend::combined::dummy","",5,[[]]],[11,"frames_per_second","","",5,[[]]],[11,"fill_buffer","","",5,[[["audiobufferout",3]],["result",4]]],[11,"number_of_channels","rsynth::backend::combined::hound","",8,[[]]],[11,"frames_per_second","","",8,[[]]],[11,"fill_buffer","","",8,[[["audiobufferout",3]],["result",4]]],[11,"number_of_channels","rsynth::backend::combined::memory","",10,[[]]],[11,"frames_per_second","","",10,[[]]],[11,"fill_buffer","","",10,[[["audiobufferout",3]],["result",4]]],[11,"number_of_channels","rsynth::backend::combined","",18,[[]]],[11,"frames_per_second","","",18,[[]]],[11,"fill_buffer","","",18,[[["audiobufferout",3]],["result",4]]],[11,"write_buffer","rsynth::backend::combined::dummy","",5,[[["audiobufferin",3]],["result",4]]],[11,"write_buffer","rsynth::backend::combined::hound","",9,[[["audiobufferin",3]],["result",4]]],[11,"specifies_number_of_channels","","",9,[[]]],[11,"number_of_channels","","",9,[[]]],[11,"write_buffer","rsynth::backend::combined::memory","",11,[[["audiobufferin",3]],["result",4]]],[11,"specifies_number_of_channels","","",11,[[]]],[11,"number_of_channels","","",11,[[]]],[11,"write_buffer","rsynth::backend::combined","",19,[[["audiobufferin",3]],["result",4]]],[11,"write_event","rsynth::backend::combined::dummy","",6,[[["deltaevent",3],["rawmidievent",3]]]],[11,"write_event","rsynth::backend::combined","",21,[[["deltaevent",3],["rawmidievent",3]]]],[11,"output_initialized","","",17,[[]]],[11,"stop","","",17,[[]]],[11,"output_initialized","rsynth::backend::jack_backend","",31,[[]]],[11,"stop","","",31,[[]]],[11,"output_initialized","rsynth::backend::vst_backend::vst::plugin","",147,[[]]],[11,"iter","rsynth::envelope::staircase_envelope","",152,[[]]],[11,"insert_event","","",152,[[["timed",3]]]],[11,"forget_past","","",152,[[]]],[11,"decide_on_collision","rsynth::event::event_queue","",153,[[],["eventcollisionhandling",4]]],[11,"decide_on_collision","","",154,[[],["eventcollisionhandling",4]]],[11,"decide_on_collision","","",155,[[],["eventcollisionhandling",4]]],[11,"decide_on_collision","","",156,[[],["eventcollisionhandling",4]]],[11,"handle_event","rsynth::backend::combined","",17,[[["timed",3],["rawmidievent",3]]]],[11,"handle_event","rsynth::backend::jack_backend","",31,[[["timed",3],["indexed",3]]]],[11,"handle_event","","",31,[[["indexed",3],["timed",3]]]],[11,"handle_event","rsynth::test_utilities","",159,[[]]],[11,"handle_event","","",90,[[]]],[11,"handle_event","","",159,[[]]],[11,"general","rsynth::meta","",84,[[]]],[11,"in_ports","","",84,[[]]],[11,"out_ports","","",84,[[]]],[11,"in_ports","","",84,[[]]],[11,"out_ports","","",84,[[]]],[11,"classify","rsynth::utilities::polyphony","",160,[[],["eventdispatchclass",4]]],[11,"classify","rsynth::utilities::polyphony::simple_event_dispatching","",95,[[],["eventdispatchclass",4]]],[11,"find_active_voice","","",95,[[],["option",4]]],[11,"find_idle_voice","","",95,[[]]],[11,"max_number_of_audio_inputs","rsynth::test_utilities","",90,[[]]],[11,"max_number_of_audio_outputs","","",90,[[]]],[11,"set_sample_rate","","",90,[[]]],[11,"render_buffer","","",90,[[["audiobufferinout",3]]]],[11,"as_mut","rsynth::event","",83,[[],["rawmidievent",3]]],[11,"as_mut","","",74,[[]]],[11,"as_mut","","",75,[[]]],[11,"as_ref","","",83,[[],["rawmidievent",3]]],[11,"as_ref","","",74,[[]]],[11,"as_ref","","",75,[[]]],[11,"from","rsynth::backend::combined::memory","",10,[[]]],[11,"from","rsynth::event","",83,[[["eventkind",4]]]],[11,"next","rsynth::buffer","",109,[[],["option",4]]],[11,"next","","",110,[[],["option",4]]],[11,"next","rsynth::backend::combined::dummy","",6,[[],["option",4]]],[11,"next","rsynth::backend::combined::midly","",13,[[],["option",4]]],[11,"next","rsynth::backend::combined","",20,[[],[["deltaevent",3],["option",4]]]],[11,"next","rsynth::envelope::staircase_envelope","",151,[[],["option",4]]],[11,"clone","rsynth::buffer","",0,[[],["audiobufferin",3]]],[11,"clone","","",3,[[],["audiochunk",3]]],[11,"clone","rsynth::envelope","",72,[[],["envelopeiteratoritem",3]]],[11,"clone","rsynth::event","",82,[[],["sysexevent",3]]],[11,"clone","","",83,[[],["rawmidievent",3]]],[11,"clone","","",74,[[]]],[11,"clone","","",75,[[]]],[11,"clone","","",76,[[],["deltaevent",3]]],[11,"clone","rsynth::utilities::polyphony","",91,[[],["toneidentifier",3]]],[11,"clone","","",93,[[],["voiceassignment",4]]],[11,"clone","rsynth::utilities::polyphony::simple_event_dispatching","",94,[[],["simplevoicestate",4]]],[11,"default","rsynth::utilities::polyphony","",160,[[],["rawmidieventtoneidentifierdispatchclassifier",3]]],[11,"default","rsynth::utilities::polyphony::simple_event_dispatching","",95,[[]]],[11,"eq","rsynth::buffer","",3,[[["audiochunk",3]]]],[11,"ne","","",3,[[["audiochunk",3]]]],[11,"eq","rsynth::envelope","",72,[[["envelopeiteratoritem",3]]]],[11,"ne","","",72,[[["envelopeiteratoritem",3]]]],[11,"eq","rsynth::event","",82,[[["sysexevent",3]]]],[11,"ne","","",82,[[["sysexevent",3]]]],[11,"eq","","",83,[[["rawmidievent",3]]]],[11,"ne","","",83,[[["rawmidievent",3]]]],[11,"eq","","",74,[[["timed",3]]]],[11,"ne","","",74,[[["timed",3]]]],[11,"eq","","",75,[[["indexed",3]]]],[11,"ne","","",75,[[["indexed",3]]]],[11,"eq","","",76,[[["deltaevent",3]]]],[11,"ne","","",76,[[["deltaevent",3]]]],[11,"eq","rsynth::utilities::polyphony","",91,[[["toneidentifier",3]]]],[11,"ne","","",91,[[["toneidentifier",3]]]],[11,"eq","","",93,[[["voiceassignment",4]]]],[11,"ne","","",93,[[["voiceassignment",4]]]],[11,"eq","rsynth::utilities::polyphony::simple_event_dispatching","",94,[[["simplevoicestate",4]]]],[11,"ne","","",94,[[["simplevoicestate",4]]]],[11,"deref","rsynth::event::event_queue","",79,[[]]],[11,"fmt","rsynth::buffer","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined::hound","",7,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined","",4,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::envelope","",72,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::event","",82,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",83,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::utilities::polyphony","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined::hound","",7,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined","",4,[[["formatter",3]],["result",6]]],[11,"index","rsynth::event::event_queue","",79,[[]]],[11,"index_mut","","",79,[[]]],[11,"source","rsynth::backend::combined::hound","",7,[[],[["error",8],["option",4]]]],[11,"source","rsynth::backend::combined","",4,[[],[["error",8],["option",4]]]],[11,"read","rsynth::backend::combined::midly::midly","Read an `Smf` track event from raw track data.",12,[[["option",4]],[["result",4],["error",3],["event",3]]]],[11,"new","rsynth::backend::jack_backend::jack","Tell the JACK server that the program is ready to start…",111,[[["client",3]],[["result",4],["asyncclient",3],["error",4]]]],[11,"as_client","","Return the underlying `jack::Client`.",111,[[],["client",3]]],[11,"deactivate","","Tell the JACK server to remove this client from the…",111,[[],[["result",4],["error",4]]]],[11,"new","","Opens a JACK client with the given name and options. If…",112,[[["clientoptions",3]],[["error",4],["result",4]]]],[11,"activate_async","","Begin processing in real-time using the specified…",112,[[],[["result",4],["asyncclient",3],["error",4]]]],[11,"sample_rate","","The sample rate of the JACK system, as set by the user…",112,[[]]],[11,"cpu_load","","The current CPU load estimated by JACK. It is on a scale…",112,[[]]],[11,"name","","Get the name of the current client. This may differ from…",112,[[]]],[11,"buffer_size","","The current maximum size that will every be passed to the…",112,[[]]],[11,"set_buffer_size","","Change the buffer size passed to the process callback.",112,[[],[["result",4],["error",4]]]],[11,"ports","","Returns a vector of port names that match the specified…",112,[[["portflags",3],["option",4]],[["string",3],["vec",3]]]],[11,"register_port","","Create a new port for the client. This is an object used…",112,[[],[["result",4],["port",3],["error",4]]]],[11,"port_by_id","","Get a `Port` by its port id.",112,[[],[["option",4],["port",3]]]],[11,"port_by_name","","Get a `Port` by its port name.",112,[[],[["option",4],["port",3]]]],[11,"frames_since_cycle_start","","The estimated time in frames that has passed since the…",112,[[]]],[11,"frame_time","","The estimated current time in frames. This function is…",112,[[]]],[11,"frames_to_time","","The estimated time in microseconds of the specified frame…",112,[[]]],[11,"time_to_frames","","The estimated time in frames for the specified system time.",112,[[]]],[11,"is_mine","","Returns `true` if the port `port` belongs to this client.",112,[[["port",3]]]],[11,"request_monitor_by_name","","Toggle input monitoring for the port with name `port_name`.",112,[[],[["result",4],["error",4]]]],[11,"connect_ports_by_name","","Establish a connection between two ports by their full name.",112,[[],[["result",4],["error",4]]]],[11,"connect_ports","","Establish a connection between two ports.",112,[[["port",3],["port",3]],[["result",4],["error",4]]]],[11,"disconnect","","Remove all connections to/from the port.",112,[[["port",3]],[["result",4],["error",4]]]],[11,"unregister_port","","",112,[[["port",3]],[["result",4],["error",4]]]],[11,"disconnect_ports","","Remove a connection between two ports.",112,[[["port",3],["port",3]],[["result",4],["error",4]]]],[11,"disconnect_ports_by_name","","Remove a connection between two ports.",112,[[],[["result",4],["error",4]]]],[11,"type_buffer_size","","The buffer size of a port type",112,[[]]],[11,"raw","","Expose the underlying ffi pointer.",112,[[]]],[11,"from_raw","","Create a `Client` from an ffi pointer.",112,[[],["client",3]]],[18,"NO_START_SERVER","","Do not automatically start the JACK server when it is not…",113,null],[18,"USE_EXACT_NAME","","Use the exact client name requested. Otherwise, JACK…",113,null],[18,"SERVER_NAME","","Open with optional `server_name` parameter.",113,null],[18,"LOAD_NAME","","Load internal client from optional `load_name`, otherwise…",113,null],[18,"LOAD_INIT","","Pass optional `load_init` to `jack_initialize()` entry…",113,null],[18,"SESSION_ID","","Pass a SessionID token. This allows the session manager to…",113,null],[11,"empty","","Returns an empty set of flags",113,[[],["clientoptions",3]]],[11,"all","","Returns the set containing all flags.",113,[[],["clientoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",113,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",113,[[],[["option",4],["clientoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",113,[[],["clientoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",113,[[],["clientoptions",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",113,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",113,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",113,[[["clientoptions",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",113,[[["clientoptions",3]]]],[11,"insert","","Inserts the specified flags in-place.",113,[[["clientoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",113,[[["clientoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",113,[[["clientoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",113,[[["clientoptions",3]]]],[18,"FAILURE","","Overall operation failed. File an issue if you can get it…",114,null],[18,"INVALID_OPTION","","The operation contained an invalid or unsupported option.",114,null],[18,"NAME_NOT_UNIQUE","","The desired client name was not unique. With the…",114,null],[18,"SERVER_STARTED","","The JACK server was started as a result of this operation.…",114,null],[18,"SERVER_FAILED","","Unable to connect to the JACK server.",114,null],[18,"SERVER_ERROR","","Communication error with the JACK server.",114,null],[18,"NO_SUCH_CLIENT","","Requested client does not exist.",114,null],[18,"LOAD_FAILURE","","Unable to load internal client",114,null],[18,"INIT_FAILURE","","Unable to initialize client",114,null],[18,"SHM_FAILURE","","Unable to access shared memory",114,null],[18,"VERSION_ERROR","","Client\'s protocol version does not match",114,null],[18,"BACKEND_ERROR","","No documentation found. TODO: dig deeper",114,null],[18,"CLIENT_ZOMBIE","","No documentation found. TODO: dig deeper",114,null],[11,"empty","","Returns an empty set of flags",114,[[],["clientstatus",3]]],[11,"all","","Returns the set containing all flags.",114,[[],["clientstatus",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",114,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",114,[[],[["clientstatus",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",114,[[],["clientstatus",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",114,[[],["clientstatus",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",114,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",114,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",114,[[["clientstatus",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",114,[[["clientstatus",3]]]],[11,"insert","","Inserts the specified flags in-place.",114,[[["clientstatus",3]]]],[11,"remove","","Removes the specified flags in-place.",114,[[["clientstatus",3]]]],[11,"toggle","","Toggles the specified flags in-place.",114,[[["clientstatus",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",114,[[["clientstatus",3]]]],[11,"new","","",22,[[],["closureprocesshandler",3]]],[11,"n_frames","","The number of frames in the current process cycle.",115,[[]]],[11,"last_frame_time","","The precise time at the start of the current process…",115,[[]]],[11,"frames_since_cycle_start","","The estimated time in frames that has passed since the…",115,[[]]],[11,"cycle_times","","Provides the internal cycle timing information as used by…",115,[[],[["error",4],["result",4],["cycletimes",3]]]],[11,"client_ptr","","Expose the `client_ptr` for low level purposes.",115,[[]]],[11,"from_raw","","Create a `ProcessScope` for the client with the given…",115,[[],["processscope",3]]],[11,"to_ffi","","",26,[[]]],[11,"to_ffi","","",28,[[]]],[11,"peek","","Return the next element without advancing the iterator.",120,[[],[["rawmidi",3],["option",4]]]],[11,"next_if","","Return the next element only if the message passes the…",120,[[],[["rawmidi",3],["option",4]]]],[11,"write","","Write an event into an event port buffer.",122,[[["rawmidi",3]],[["result",4],["error",4]]]],[11,"lost_count","","Get the number of events that could not be written to…",122,[[]]],[11,"max_event_size","","Get the size of the largest event that can be stored by…",122,[[]]],[11,"as_slice","","Read the received audio data.",123,[[["processscope",3]]]],[11,"as_mut_slice","","Get a slice to write audio data to.",123,[[["processscope",3]]]],[11,"iter","","Get an iterator over midi events.",123,[[["processscope",3]],["midiiter",3]]],[11,"writer","","Create a writer that can write midi events to the…",123,[[["processscope",3]],["midiwriter",3]]],[11,"spec","","Returns the spec that was used to create this port.",123,[[]]],[11,"clone_unowned","","Return a copy of port as an unowned port that can still be…",123,[[],[["unowned",3],["port",3]]]],[11,"name","","Returns the full name of the port, including the…",123,[[],[["error",4],["result",4],["string",3]]]],[11,"short_name","","Returns the short name of the port, it excludes the…",123,[[],[["error",4],["result",4],["string",3]]]],[11,"flags","","The flags for the port. These are set when the port is…",123,[[],["portflags",3]]],[11,"port_type","","The port type. JACK\'s built in types include `\\\"32 bit…",123,[[],[["error",4],["result",4],["string",3]]]],[11,"connected_count","","Number of ports connected to/from `&self`.",123,[[],[["error",4],["result",4]]]],[11,"is_connected_to","","Returns `true` if the port is directly connected to a port…",123,[[],[["error",4],["result",4]]]],[11,"aliases","","Get the alias names for `self`.",123,[[],[["error",4],["result",4],["vec",3]]]],[11,"is_monitoring_input","","Returns `true` if monitoring has been requested for `self`.",123,[[],[["error",4],["result",4]]]],[11,"request_monitor","","Turn input monitoring for the port on or off.",123,[[],[["result",4],["error",4]]]],[11,"ensure_monitor","","If the `CAN_MONITOR` flag is set for the port, then input…",123,[[],[["result",4],["error",4]]]],[11,"set_name","","Set\'s the short name of the port. If the full name is…",123,[[],[["result",4],["error",4]]]],[11,"set_alias","","Sets `alias` as an alias for `self`.",123,[[],[["result",4],["error",4]]]],[11,"unset_alias","","Remove `alias` as an alias for port. May be called at any…",123,[[],[["result",4],["error",4]]]],[11,"from_raw","","Create a Port from raw JACK pointers.",123,[[["weak",3]],["port",3]]],[11,"client_ptr","","Obtain the client pointer that spawned this port.",123,[[]]],[11,"raw","","Obtain the ffi port pointer.",123,[[]]],[11,"buffer","","Obtain the buffer that the Port is holding. For standard…",123,[[]]],[11,"set_latency_range","","Set the minimum and maximum latencies defined by mode for…",123,[[["latencytype",4]]]],[11,"get_latency_range","","Returns a tuple of the minimum and maximum latencies…",123,[[["latencytype",4]]]],[18,"IS_INPUT","","The port can receive data.",124,null],[18,"IS_OUTPUT","","Data can be read from the port.",124,null],[18,"IS_PHYSICAL","","Port corresponds to some kind of physical I/O connector.",124,null],[18,"CAN_MONITOR","","A call to `jack_port_request_monitor()` makes sense.",124,null],[18,"IS_TERMINAL","","For an input port, the data received by the port will not…",124,null],[11,"empty","","Returns an empty set of flags",124,[[],["portflags",3]]],[11,"all","","Returns the set containing all flags.",124,[[],["portflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",124,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",124,[[],[["portflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",124,[[],["portflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",124,[[],["portflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",124,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",124,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",124,[[["portflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",124,[[["portflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",124,[[["portflags",3]]]],[11,"remove","","Removes the specified flags in-place.",124,[[["portflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",124,[[["portflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",124,[[["portflags",3]]]],[11,"new","","Allocates a ringbuffer of a specified size.",128,[[],[["result",4],["ringbuffer",3]]]],[11,"mlock","","Lock a ringbuffer data block into memory.",128,[[]]],[11,"reset","","Resets the ring buffer, making an empty buffer.",128,[[]]],[11,"into_reader_writer","","Create a reader and writer, to use the ring buffer.",128,[[]]],[11,"from_reader_writer","","Re-create the ring buffer object from reader and writer.…",128,[[["ringbufferwriter",3],["ringbufferreader",3]],["ringbuffer",3]]],[11,"get_vector","","Fill a data structure with a description of the current…",129,[[]]],[11,"read_buffer","","Read data from the ringbuffer. Returns: the number of…",129,[[]]],[11,"peek","","Read data from the ringbuffer. Opposed to read_buffer()…",129,[[]]],[11,"advance","","Advance the read pointer. use this after peek/peek_iter or…",129,[[]]],[11,"space","","Return the number of bytes available for reading.",129,[[]]],[11,"peek_iter","","Iterator that goes over all the data available to read.",129,[[],[["iter",3],["chain",3]]]],[11,"write_buffer","","Write data into the ringbuffer. Returns: The number of…",130,[[]]],[11,"advance","","Advance the write pointer. use this after peek_iter or…",130,[[]]],[11,"space","","Return the number of bytes available for writing.",130,[[]]],[11,"get_vector","","Return a pair of slices of the current writable space in…",130,[[]]],[11,"peek_iter","","Iterator that goes over all the data available to write.",130,[[],[["itermut",3],["chain",3]]]],[11,"get_plugin","rsynth::backend::vst_backend::vst::api","Return handle to Plugin object. Only works for plugins…",32,[[],["box",3]]],[11,"drop_plugin","","Drop the Plugin object. Only works for plugins created…",32,[[]]],[11,"from","","Create a `Supported` value from an integer if possible.",35,[[],[["supported",4],["option",4]]]],[11,"events","","Use this in your impl of process_events() to process the…",42,[[]]],[18,"ACTIVE","","Indicates channel is active. Ignored by host.",131,null],[18,"STEREO","","Indicates channel is first of stereo pair.",131,null],[18,"SPEAKER","","Use channel\'s specified speaker_arrangement instead of…",131,null],[11,"empty","","Returns an empty set of flags",131,[[],["channelflags",3]]],[11,"all","","Returns the set containing all flags.",131,[[],["channelflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",131,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",131,[[],[["channelflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",131,[[],["channelflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",131,[[],["channelflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",131,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",131,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",131,[[["channelflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",131,[[["channelflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",131,[[["channelflags",3]]]],[11,"remove","","Removes the specified flags in-place.",131,[[["channelflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",131,[[["channelflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",131,[[["channelflags",3]]]],[18,"HAS_EDITOR","","Plugin has an editor.",132,null],[18,"CAN_REPLACING","","Plugin can process 32 bit audio. (Mandatory in VST 2.4).",132,null],[18,"PROGRAM_CHUNKS","","Plugin preset data is handled in formatless chunks.",132,null],[18,"IS_SYNTH","","Plugin is a synth.",132,null],[18,"NO_SOUND_IN_STOP","","Plugin does not produce sound when all input is silence.",132,null],[18,"CAN_DOUBLE_REPLACING","","Supports 64 bit audio processing.",132,null],[11,"empty","","Returns an empty set of flags",132,[[],["pluginflags",3]]],[11,"all","","Returns the set containing all flags.",132,[[],["pluginflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",132,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",132,[[],[["option",4],["pluginflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",132,[[],["pluginflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",132,[[],["pluginflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",132,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",132,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",132,[[["pluginflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",132,[[["pluginflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",132,[[["pluginflags",3]]]],[11,"remove","","Removes the specified flags in-place.",132,[[["pluginflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",132,[[["pluginflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",132,[[["pluginflags",3]]]],[18,"SHIFT","","Shift key.",133,null],[18,"ALT","","Alt key.",133,null],[18,"COMMAND","","Control on mac.",133,null],[18,"CONTROL","","Command on mac, ctrl on other.",133,null],[11,"empty","","Returns an empty set of flags",133,[[],["modifierkey",3]]],[11,"all","","Returns the set containing all flags.",133,[[],["modifierkey",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",133,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",133,[[],[["option",4],["modifierkey",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",133,[[],["modifierkey",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",133,[[],["modifierkey",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",133,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",133,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",133,[[["modifierkey",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",133,[[["modifierkey",3]]]],[11,"insert","","Inserts the specified flags in-place.",133,[[["modifierkey",3]]]],[11,"remove","","Removes the specified flags in-place.",133,[[["modifierkey",3]]]],[11,"toggle","","Toggles the specified flags in-place.",133,[[["modifierkey",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",133,[[["modifierkey",3]]]],[18,"REALTIME_EVENT","","This event is played live (not in playback from a…",134,null],[11,"empty","","Returns an empty set of flags",134,[[],["midieventflags",3]]],[11,"all","","Returns the set containing all flags.",134,[[],["midieventflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",134,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",134,[[],[["option",4],["midieventflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",134,[[],["midieventflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",134,[[],["midieventflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",134,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",134,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",134,[[["midieventflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",134,[[["midieventflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",134,[[["midieventflags",3]]]],[11,"remove","","Removes the specified flags in-place.",134,[[["midieventflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",134,[[["midieventflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",134,[[["midieventflags",3]]]],[18,"TRANSPORT_CHANGED","","Indicates that play, cycle or record state has changed.",135,null],[18,"TRANSPORT_PLAYING","","Set if Host sequencer is currently playing.",135,null],[18,"TRANSPORT_CYCLE_ACTIVE","","Set if Host sequencer is in cycle mode.",135,null],[18,"TRANSPORT_RECORDING","","Set if Host sequencer is in record mode.",135,null],[18,"AUTOMATION_WRITING","","Set if automation write mode active (record parameter…",135,null],[18,"AUTOMATION_READING","","Set if automation read mode active (play parameter changes).",135,null],[18,"NANOSECONDS_VALID","","Set if TimeInfo::nanoseconds is valid.",135,null],[18,"PPQ_POS_VALID","","Set if TimeInfo::ppq_pos is valid.",135,null],[18,"TEMPO_VALID","","Set if TimeInfo::tempo is valid.",135,null],[18,"BARS_VALID","","Set if TimeInfo::bar_start_pos is valid.",135,null],[18,"CYCLE_POS_VALID","","Set if both TimeInfo::cycle_start_pos and…",135,null],[18,"TIME_SIG_VALID","","Set if both TimeInfo::time_sig_numerator and…",135,null],[18,"SMPTE_VALID","","Set if both TimeInfo::smpte_offset and…",135,null],[18,"VST_CLOCK_VALID","","Set if TimeInfo::samples_to_next_clock is valid.",135,null],[11,"empty","","Returns an empty set of flags",135,[[],["timeinfoflags",3]]],[11,"all","","Returns the set containing all flags.",135,[[],["timeinfoflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",135,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",135,[[],[["option",4],["timeinfoflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",135,[[],["timeinfoflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",135,[[],["timeinfoflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",135,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",135,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",135,[[["timeinfoflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",135,[[["timeinfoflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",135,[[["timeinfoflags",3]]]],[11,"remove","","Removes the specified flags in-place.",135,[[["timeinfoflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",135,[[["timeinfoflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",135,[[["timeinfoflags",3]]]],[11,"from_raw","rsynth::backend::vst_backend::vst::buffer","Create an `AudioBuffer` from raw pointers. Only really…",136,[[],["audiobuffer",3]]],[11,"input_count","","The number of input channels that this buffer was created…",136,[[]]],[11,"output_count","","The number of output channels that this buffer was created…",136,[[]]],[11,"samples","","The number of samples in this buffer (same for all channels)",136,[[]]],[11,"split","","Split this buffer into separate inputs and outputs.",136,[[]]],[11,"zip","","Create an iterator over pairs of input buffers and output…",136,[[],["audiobufferiterator",3]]],[11,"len","","Number of channels",138,[[]]],[11,"is_empty","","Returns true if the buffer is empty",138,[[]]],[11,"get","","Access channel at the given index",138,[[]]],[11,"split_at","","Split borrowing at the given index, like for slices",138,[[]]],[11,"len","","Number of channels",140,[[]]],[11,"is_empty","","Returns true if the buffer is empty",140,[[]]],[11,"get","","Access channel at the given index",140,[[]]],[11,"get_mut","","Mutably access channel at the given index",140,[[]]],[11,"split_at_mut","","Split borrowing at the given index, like for slices",140,[[]]],[11,"new","","Creates a buffer for sending up to the given number of…",142,[[],["sendeventbuffer",3]]],[11,"send_events","","Sends events to the host. See the `fwd_midi` example.",142,[[["host",8]]]],[11,"send_events_to_plugin","","Sends events from the host to a plugin.",142,[[["plugin",8]]]],[11,"new","rsynth::backend::vst_backend::vst::channels","Construct a new `ChannelInfo` object.",143,[[["speakerarrangementtype",4],["option",4],["option",4],["string",3]],["channelinfo",3]]],[11,"is_speaker_type","","Determine whether this channel is part of a surround…",54,[[]]],[11,"is_left_stereo","","Determine whether this channel is the left speaker in a…",54,[[]]],[11,"load","rsynth::backend::vst_backend::vst::host","Load a plugin at the given path with the given host.",144,[[["arc",3],["mutex",3],["path",3]],[["result",4],["pluginloader",3],["pluginloaderror",4]]]],[11,"instance","","Try to create an instance of this VST plugin.",144,[[],[["result",4],["plugininstance",3],["pluginloaderror",4]]]],[11,"new","","Create a `HostBuffer` for a given number of input and…",146,[[],["hostbuffer",3]]],[11,"from_info","","Create a `HostBuffer` for the number of input and output…",146,[[["info",3]],["hostbuffer",3]]],[11,"bind","","Bind sample arrays to the `HostBuffer` to create an…",146,[[],["audiobuffer",3]]],[11,"input_count","","Number of input channels supported by this `HostBuffer`.",146,[[]]],[11,"output_count","","Number of output channels supported by this `HostBuffer`.",146,[[]]],[11,"from_str","rsynth::backend::vst_backend::vst::plugin","Converts a string to a `CanDo` instance. Any given string…",66,[[],["cando",4]]],[11,"vst_version","","Get the VST API version supported by the host e.g. `2400 =…",147,[[]]],[11,"raw_callback","","Get the callback for calling host-specific extensions",147,[[],["option",4]]],[11,"raw_effect","","Get the effect pointer for calling host-specific extensions",147,[[]]],[11,"new","rsynth::backend::vst_backend::vst::util","New atomic float with initial value `value`.",148,[[],["atomicfloat",3]]],[11,"get","","Get the current value of the atomic float.",148,[[]]],[11,"set","","Set the value of the atomic float to `value`.",148,[[]]],[11,"new","","Create a new parameter set with `parameter_count`…",149,[[],["parametertransfer",3]]],[11,"set_parameter","","Set the value of the parameter with index `index` to…",149,[[]]],[11,"get_parameter","","Get the current value of the parameter with index `index`.",149,[[]]],[11,"iterate","","Iterate over all parameters marked as changed. If…",149,[[],["parametertransferiterator",3]]]],"p":[[3,"AudioBufferIn"],[3,"AudioBufferOut"],[3,"AudioBufferInOut"],[3,"AudioChunk"],[4,"CombinedError"],[3,"AudioDummy"],[3,"MidiDummy"],[4,"HoundAudioError"],[3,"HoundAudioReader"],[3,"HoundAudioWriter"],[3,"AudioChunkReader"],[3,"AudioBufferWriter"],[3,"Event"],[3,"MidlyMidiReader"],[8,"AudioReader"],[8,"AudioWriter"],[8,"MidiWriter"],[3,"MidiWriterWrapper"],[3,"TestAudioReader"],[3,"TestAudioWriter"],[3,"TestMidiReader"],[3,"TestMidiWriter"],[3,"ClosureProcessHandler"],[3,"CycleTimes"],[8,"NotificationHandler"],[8,"ProcessHandler"],[4,"Control"],[4,"Error"],[4,"LatencyType"],[8,"PortSpec"],[3,"RawMidi"],[3,"JackHost"],[3,"AEffect"],[3,"ChannelProperties"],[4,"SpeakerArrangementType"],[4,"Supported"],[4,"ProcessLevel"],[4,"HostLanguage"],[4,"FileSelectCommand"],[4,"FileSelectType"],[3,"FileType"],[3,"FileSelect"],[3,"Events"],[4,"EventType"],[3,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[3,"TimeInfo"],[4,"SmpteFrameRate"],[8,"WriteIntoPlaceholder"],[4,"ArrangementTarget"],[4,"StereoChannel"],[4,"StereoConfig"],[4,"SurroundConfig"],[4,"SpeakerArrangementType"],[8,"Editor"],[3,"KeyCode"],[4,"KnobMode"],[4,"Key"],[4,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[8,"Host"],[4,"PluginLoadError"],[4,"Category"],[3,"Info"],[4,"CanDo"],[8,"Plugin"],[8,"PluginParameters"],[8,"VstPluginMeta"],[3,"VstPluginWrapper"],[8,"HostInterface"],[3,"EnvelopeIteratorItem"],[8,"Envelope"],[3,"Timed"],[3,"Indexed"],[3,"DeltaEvent"],[4,"EventCollisionHandling"],[8,"HandleEventCollision"],[3,"EventQueue"],[8,"EventHandler"],[8,"ContextualEventHandler"],[3,"SysExEvent"],[3,"RawMidiEvent"],[3,"MetaData"],[3,"InOut"],[8,"Meta"],[8,"General"],[8,"Name"],[8,"Port"],[3,"TestPlugin"],[3,"ToneIdentifier"],[4,"EventDispatchClass"],[4,"VoiceAssignment"],[4,"SimpleVoiceState"],[3,"SimpleEventDispatcher"],[8,"EventDispatchClassifier"],[8,"Voice"],[8,"VoiceAssigner"],[8,"EventDispatcher"],[8,"ContextualEventDispatcher"],[8,"AudioHandlerMeta"],[8,"AudioHandler"],[8,"MidiHandlerMeta"],[8,"AudioRenderer"],[8,"ContextualAudioRenderer"],[8,"CommonPluginMeta"],[8,"CommonAudioPortMeta"],[8,"CommonMidiPortMeta"],[3,"AudioBufferOutChannelIteratorMut"],[3,"InterlacedSampleIterator"],[3,"AsyncClient"],[3,"Client"],[3,"ClientOptions"],[3,"ClientStatus"],[3,"ProcessScope"],[3,"CLIENT_NAME_SIZE"],[3,"AudioIn"],[3,"AudioOut"],[3,"MidiIn"],[3,"MidiIter"],[3,"MidiOut"],[3,"MidiWriter"],[3,"Port"],[3,"PortFlags"],[3,"Unowned"],[3,"PORT_NAME_SIZE"],[3,"PORT_TYPE_SIZE"],[3,"RingBuffer"],[3,"RingBufferReader"],[3,"RingBufferWriter"],[3,"ChannelFlags"],[3,"PluginFlags"],[3,"ModifierKey"],[3,"MidiEventFlags"],[3,"TimeInfoFlags"],[3,"AudioBuffer"],[3,"AudioBufferIterator"],[3,"Inputs"],[3,"InputIterator"],[3,"Outputs"],[3,"OutputIterator"],[3,"SendEventBuffer"],[3,"ChannelInfo"],[3,"PluginLoader"],[3,"PluginInstance"],[3,"HostBuffer"],[3,"HostCallback"],[3,"AtomicFloat"],[3,"ParameterTransfer"],[3,"ParameterTransferIterator"],[3,"StairCaseEnvelopeIterator"],[3,"StairCaseEnvelope"],[3,"AlwaysInsertNewBeforeOld"],[3,"AlwaysInsertNewAfterOld"],[3,"AlwaysIgnoreNew"],[3,"AlwaysRemoveOld"],[3,"AudioPort"],[3,"MidiPort"],[3,"DummyEventHandler"],[3,"RawMidiEventToneIdentifierDispatchClassifier"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);