var searchIndex={};
searchIndex["rsynth"] = {"doc":"Rsynth A crate for developing audio plugins and…","i":[[0,"buffer","rsynth","Audio buffers.",null,null],[3,"AudioBufferIn","rsynth::buffer","Audio input buffer",null,null],[3,"AudioBufferOut","","An audio output buffer.",null,null],[3,"AudioBufferOutChannelIteratorMut","","",null,null],[3,"AudioBufferInOut","","A buffer holding both input and output audio.",null,null],[3,"AudioChunk","","",null,null],[5,"buffers_as_slice","","",null,[[["usize"]],["vec"]]],[5,"buffers_as_mut_slice","","",null,[[["usize"]],["vec"]]],[11,"new","","Create a new audio input buffer.",0,[[["usize"]],["self"]]],[11,"number_of_channels","","Get the number of channels.",0,[[["self"]],["usize"]]],[11,"number_of_frames","","Get the number of frames.",0,[[["self"]],["usize"]]],[11,"channels","","Get the channels as slices.",0,[[["self"]]]],[11,"index_frames","","Get a sub-chunk with the given range of frames.",0,[[["self"],["vec"],["r"]],["audiobufferin"]]],[11,"get_channel","","Get the channel with the given index.",0,[[["self"],["usize"]],["option"]]],[11,"index_channel","","Get the channel with the given index.",0,[[["self"],["usize"]]]],[11,"new","","Create a new audio output buffer.",1,[[["usize"]],["self"]]],[11,"number_of_channels","","Get the number of channels.",1,[[["self"]],["usize"]]],[11,"number_of_frames","","Get the number of frames.",1,[[["self"]],["usize"]]],[11,"channels","","Get the channels as slices.",1,[[["self"]]]],[11,"split_channels_at","","Split into two `AudioBufferOut`s. The first will contain…",1,[[["self"],["usize"]]]],[11,"index_frames","","Get a sub-chunk with the given range of frames.",1,[[["vec"],["self"],["r"]],["audiobufferout"]]],[11,"get_channel","","Get the channel with the given index.",1,[[["self"],["usize"]],["option"]]],[11,"index_channel","","Get the channel with the given index.",1,[[["self"],["usize"]]]],[11,"set","","Set all samples to the given value.",1,[[["self"],["s"]]]],[11,"channel_iter_mut","","Get an iterator over the channels",1,[[["self"]],["audiobufferoutchanneliteratormut"]]],[11,"as_audio_buffer_in","","",1,[[["self"],["vec"]],["audiobufferin"]]],[11,"new","","Panics Panics if one of the following happens: * not all…",2,[[["usize"]],["self"]]],[11,"number_of_frames","","Get the number of frames.",2,[[["self"]],["usize"]]],[11,"number_of_input_channels","","Get the number of input channels.",2,[[["self"]],["usize"]]],[11,"number_of_output_channels","","Get the number of output channels.",2,[[["self"]],["usize"]]],[11,"split_output_channels_at","","Create two new `AUdioBufferInOut`s: one with all the input…",2,[[["self"],["usize"]]]],[11,"get_input_channel","","Get the channel with the given index.",2,[[["self"],["usize"]],["option"]]],[11,"index_input_channel","","Get the output channel with the given index.",2,[[["self"],["usize"]]]],[11,"get_output_channel","","Get the channel with the given index.",2,[[["self"],["usize"]],["option"]]],[11,"index_output_channel","","Get the output channel with the given index.",2,[[["self"],["usize"]]]],[11,"index_frames","","Get a sub-chunk with the given range of frames.",2,[[["self"],["vec"],["vec"],["r"]],["audiobufferinout"]]],[11,"separate","","Separate into an `AudioBufferIn` and an `AudioBufferOut`.",2,[[["self"]]]],[11,"inputs","","",2,[[["self"]],["audiobufferin"]]],[11,"outputs","","",2,[[["self"]],["audiobufferout"]]],[11,"zero","","Note: cannot be used in a real-time context…",3,[[["usize"]],["self"]]],[11,"from_channels","","",3,[[["vec"],["vec",["vec"]]],["self"]]],[11,"new","","Note: cannot be used in a real-time context…",3,[[["usize"]],["self"]]],[11,"with_capacity","","Create a new `AudioChunk` in which each channel has the…",3,[[["usize"]],["self"]]],[11,"channels","","",3,[[["self"]],["vec"]]],[11,"append_sliced_chunk","","Note about using in a real-time context…",3,[[["self"]]]],[11,"inner","","",3,[[],[["vec"],["vec",["vec"]]]]],[11,"as_slices","","Note: cannot be used in a real-time context…",3,[[["self"]],["vec"]]],[11,"as_mut_slices","","Note: cannot be used in a real-time context…",3,[[["self"]],["vec"]]],[11,"split","","Note: cannot be used in a real-time context…",3,[[["usize"]],["vec"]]],[0,"backend","rsynth","Backends.",null,null],[0,"combined","rsynth::backend","Combine different back-ends for audio input, audio output,…",null,null],[3,"MidiWriterWrapper","rsynth::backend::combined","A wrapper around a midi writer that implements…",null,null],[3,"TestAudioReader","","An audio reader, useful for testing.",null,null],[3,"TestAudioWriter","","An audio writer, useful for testing.",null,null],[3,"TestMidiReader","","A midi reader, useful for testing.",null,null],[3,"TestMidiWriter","","A midi writer, useful for testing.",null,null],[4,"CombinedError","","The error type that represents the errors you can get from…",null,null],[13,"AudioInError","","An error occurred when reading the audio.",4,null],[13,"AudioOutError","","An error occurred when writing the audio.",4,null],[5,"run","","Run an audio renderer with the given audio input, audio…",null,[[["audioin"],["usize"],["r"],["midiin"],["midiout"],["audioout"]],[["combinederror"],["result",["combinederror"]]]]],[0,"dummy","","Dummy backend that does nothing, useful for testing.",null,null],[3,"AudioDummy","rsynth::backend::combined::dummy","",null,null],[3,"MidiDummy","","",null,null],[11,"new","","",5,[[],["self"]]],[11,"new","","",6,[[],["self"]]],[0,"hound","rsynth::backend::combined","Backend for reading and writing `.wav` files, based on the…",null,null],[3,"HoundAudioReader","rsynth::backend::combined::hound","",null,null],[3,"HoundAudioWriter","","",null,null],[4,"HoundAudioError","","",null,null],[13,"UnsupportedAudioFormat","","",7,null],[11,"new","","",8,[[["wavreader"]],[["result",["houndaudioerror"]],["houndaudioerror"]]]],[11,"new","","",9,[[["wavwriter"]],[["result",["houndaudioerror"]],["houndaudioerror"]]]],[0,"memory","rsynth::backend::combined","In-memory backend, useful for testing.",null,null],[3,"AudioBufferReader","rsynth::backend::combined::memory","An [`AudioReader`] that reads from a given [`AudioChunk`].…",null,null],[3,"AudioBufferWriter","","An [`AudioWriter`] that appends to a given [`AudioChunk`].…",null,null],[11,"new","","Construct a new `AudioBufferReader` with the given…",10,[[["audiochunk"],["u64"]],["self"]]],[11,"new","","",11,[[["audiochunk"]],["self"]]],[17,"MICROSECONDS_PER_SECOND","rsynth::backend::combined","",null,null],[8,"AudioReader","","Define how audio is read.",null,null],[16,"Err","","The type of the error that occurs when reading data.",12,null],[10,"number_of_channels","","The number of audio channels that can be read.",12,[[["self"]],["usize"]]],[10,"frames_per_second","","The sampling frequency in frames per second.",12,[[["self"]],["u64"]]],[10,"fill_buffer","","Fill the buffers. Return the number of frames that have…",12,[[["self"],["audiobufferout"]],[["result",["usize"]],["usize"]]]],[8,"AudioWriter","","Define how audio is written.",null,null],[16,"Err","","The type of the error that occurs when reading data.",13,null],[10,"write_buffer","","",13,[[["self"],["audiobufferin"]],["result"]]],[8,"MidiWriter","","",null,null],[10,"write_event","","",14,[[["deltaevent",["rawmidievent"]],["self"],["rawmidievent"]]]],[11,"new","","",15,[[["w"],["f64"]],["self"]]],[11,"step_frames","","",15,[[["self"],["u64"]]]],[11,"new","","Create a new `TestAudioReader`. The newly created…",16,[[["vec",["usize"]],["usize"],["audiobufferreader"]],["self"]]],[11,"new","","Create a new `TestAudioWriter`. The newly created will…",17,[[["t"],["vec",["audiochunk"]],["audiochunk"]],["self"]]],[11,"new","","Create a new `TestMidiReader` that will return the…",18,[[["deltaevent",["rawmidievent"]],["vec",["deltaevent"]]],["self"]]],[11,"new","","Create a new `TestMidiWriter` that will panic when the…",19,[[["deltaevent",["rawmidievent"]],["vec",["deltaevent"]]],["self"]]],[11,"check_last","","",19,[[["self"]]]],[0,"jack_backend","rsynth::backend","Wrapper for the [JACK] backend. Support is only enabled if…",null,null],[3,"JackHost","rsynth::backend::jack_backend","",null,null],[5,"run","","Run the plugin until the user presses a key on the…",null,[[["p"]],[["result",["error"]],["error"]]]],[11,"client","","Get access to the underlying `Client` so that you can use…",20,[[["self"]],["client"]]],[0,"vst_backend","rsynth::backend","Wrapper for the VST backend.",null,null],[3,"VstPluginWrapper","rsynth::backend::vst_backend","A struct used internally by the `vst_init` macro.…",null,null],[0,"vst","","Re-exports from the `rust-vst` crate.",null,null],[0,"api","rsynth::backend::vst_backend::vst","Structures and types for interfacing with the VST 2.4 API.",null,null],[0,"consts","rsynth::backend::vst_backend::vst::api","Constant values",null,null],[17,"MAX_PRESET_NAME_LEN","rsynth::backend::vst_backend::vst::api::consts","",null,null],[17,"MAX_PARAM_STR_LEN","","",null,null],[17,"MAX_LABEL","","",null,null],[17,"MAX_SHORT_LABEL","","",null,null],[17,"MAX_PRODUCT_STR_LEN","","",null,null],[17,"MAX_VENDOR_STR_LEN","","",null,null],[17,"VST_MAGIC","","VST plugins are identified by a magic number. This…",null,null],[6,"PluginMain","rsynth::backend::vst_backend::vst::api","`VSTPluginMain` function signature.",null,null],[6,"HostCallbackProc","","Host callback function passed to plugin. Can be used to…",null,null],[6,"DispatcherProc","","Dispatcher function used to process opcodes. Called by host.",null,null],[6,"ProcessProc","","Process function used to process 32 bit floating point…",null,null],[6,"ProcessProcF64","","Process function used to process 64 bit floating point…",null,null],[6,"SetParameterProc","","Callback function used to set parameter values. Called by…",null,null],[6,"GetParameterProc","","Callback function used to get parameter values. Called by…",null,null],[3,"AEffect","","Used with the VST API to pass around plugin information.",null,null],[12,"magic","","Magic number. Must be `['V', 'S', 'T', 'P']`.",21,null],[12,"dispatcher","","Host to plug-in dispatcher.",21,null],[12,"_process","","Accumulating process mode is deprecated in VST 2.4! Use…",21,null],[12,"setParameter","","Set value of automatable parameter.",21,null],[12,"getParameter","","Get value of automatable parameter.",21,null],[12,"numPrograms","","Number of programs (Presets).",21,null],[12,"numParams","","Number of parameters. All programs are assumed to have…",21,null],[12,"numInputs","","Number of audio inputs.",21,null],[12,"numOutputs","","Number of audio outputs.",21,null],[12,"flags","","Bitmask made of values from `api::PluginFlags`.",21,null],[12,"reserved1","","Reserved for host, must be 0.",21,null],[12,"reserved2","","Reserved for host, must be 0.",21,null],[12,"initialDelay","","For algorithms which need input in the first place (Group…",21,null],[12,"_realQualities","","Deprecated unused member.",21,null],[12,"_offQualities","","Deprecated unused member.",21,null],[12,"_ioRatio","","Deprecated unused member.",21,null],[12,"object","","Void pointer usable by api to store object data.",21,null],[12,"user","","User defined pointer.",21,null],[12,"uniqueId","","Registered unique identifier (register it at Steinberg 3rd…",21,null],[12,"version","","Plug-in version (e.g. 1100 for v1.1.0.0).",21,null],[12,"processReplacing","","Process audio samples in replacing mode.",21,null],[12,"processReplacingF64","","Process double-precision audio samples in replacing mode.",21,null],[12,"future","","Reserved for future use (please zero).",21,null],[3,"ChannelProperties","","Information about a channel. Only some hosts use this…",null,null],[12,"name","","Channel name.",22,null],[12,"flags","","Flags found in `ChannelFlags`.",22,null],[12,"arrangement_type","","Type of speaker arrangement this channel is a part of.",22,null],[12,"short_name","","Name of channel (recommended: 6 characters + delimiter).",22,null],[12,"future","","Reserved for future use.",22,null],[4,"SpeakerArrangementType","","Tells the host how the channels are intended to be used in…",null,null],[13,"Custom","","User defined arrangement.",23,null],[13,"Empty","","Empty arrangement.",23,null],[13,"Mono","","Mono.",23,null],[13,"Stereo","","L R",23,null],[13,"StereoSurround","","Ls Rs",23,null],[13,"StereoCenter","","Lc Rc",23,null],[13,"StereoSide","","Sl Sr",23,null],[13,"StereoCLfe","","C Lfe",23,null],[13,"Cinema30","","L R C",23,null],[13,"Music30","","L R S",23,null],[13,"Cinema31","","L R C Lfe",23,null],[13,"Music31","","L R Lfe S",23,null],[13,"Cinema40","","L R C S (LCRS)",23,null],[13,"Music40","","L R Ls Rs (Quadro)",23,null],[13,"Cinema41","","L R C Lfe S (LCRS + Lfe)",23,null],[13,"Music41","","L R Lfe Ls Rs (Quadro + Lfe)",23,null],[13,"Surround50","","L R C Ls Rs",23,null],[13,"Surround51","","L R C Lfe Ls Rs",23,null],[13,"Cinema60","","L R C Ls  Rs Cs",23,null],[13,"Music60","","L R Ls Rs  Sl Sr",23,null],[13,"Cinema61","","L R C Lfe Ls Rs Cs",23,null],[13,"Music61","","L R Lfe Ls Rs Sl Sr",23,null],[13,"Cinema70","","L R C Ls Rs Lc Rc",23,null],[13,"Music70","","L R C Ls Rs Sl Sr",23,null],[13,"Cinema71","","L R C Lfe Ls Rs Lc Rc",23,null],[13,"Music71","","L R C Lfe Ls Rs Sl Sr",23,null],[13,"Cinema80","","L R C Ls Rs Lc Rc Cs",23,null],[13,"Music80","","L R C Ls Rs Cs Sl Sr",23,null],[13,"Cinema81","","L R C Lfe Ls Rs Lc Rc Cs",23,null],[13,"Music81","","L R C Lfe Ls Rs Cs Sl Sr",23,null],[13,"Surround102","","L R C Lfe Ls Rs Tfl Tfc Tfr Trl Trr Lfe2",23,null],[4,"Supported","","Used to specify whether functionality is supported.",null,null],[13,"Yes","","",24,null],[13,"Maybe","","",24,null],[13,"No","","",24,null],[4,"ProcessLevel","","Denotes in which thread the host is in.",null,null],[13,"Unknown","","Unsupported by host.",25,null],[13,"User","","GUI thread.",25,null],[13,"Realtime","","Audio process thread.",25,null],[13,"Prefetch","","Sequence thread (MIDI, etc).",25,null],[13,"Offline","","Offline processing thread (therefore GUI/user thread).",25,null],[4,"HostLanguage","","Language that the host is using.",null,null],[13,"English","","",26,null],[13,"German","","",26,null],[13,"French","","",26,null],[13,"Italian","","",26,null],[13,"Spanish","","",26,null],[13,"Japanese","","",26,null],[4,"FileSelectCommand","","The file operation to perform.",null,null],[13,"Load","","Load a file.",27,null],[13,"Save","","Save a file.",27,null],[13,"LoadMultipleFiles","","Load multiple files simultaneously.",27,null],[13,"SelectDirectory","","Choose a directory.",27,null],[4,"FileSelectType","","Format to select files.",null,null],[13,"Regular","","Regular file selector.",28,null],[3,"FileType","","File type descriptor.",null,null],[12,"name","","Display name of file type.",29,null],[12,"osx_type","","OS X file type.",29,null],[12,"win_type","","Windows file type.",29,null],[12,"nix_type","","Unix file type.",29,null],[12,"mime_type_1","","MIME type.",29,null],[12,"mime_type_2","","Additional MIME type.",29,null],[3,"FileSelect","","File selector descriptor used in…",null,null],[12,"command","","The type of file selection to perform.",30,null],[12,"select_type","","The file selector to open.",30,null],[12,"mac_creator","","Unknown. 0 = no creator.",30,null],[12,"num_types","","Number of file types.",30,null],[12,"file_types","","List of file types to show.",30,null],[12,"title","","File selector's title.",30,null],[12,"initial_path","","Initial path.",30,null],[12,"return_path","","Used when operation returns a single path.",30,null],[12,"size_return_path","","Size of the path buffer in bytes.",30,null],[12,"return_multiple_paths","","Used when operation returns multiple paths.",30,null],[12,"num_paths","","Number of paths returned.",30,null],[12,"reserved","","Reserved by host.",30,null],[12,"future","","Reserved for future use.",30,null],[3,"Events","","A struct which contains events.",null,null],[12,"num_events","","Number of events.",31,null],[12,"_reserved","","Reserved for future use. Should be 0.",31,null],[12,"events","","Variable-length array of pointers to `api::Event` objects.",31,null],[4,"EventType","","The type of event that has occured. See…",null,null],[13,"Midi","","Midi event. See `api::MidiEvent`.",32,null],[13,"_Audio","","Deprecated.",32,null],[13,"_Video","","Deprecated.",32,null],[13,"_Parameter","","Deprecated.",32,null],[13,"_Trigger","","Deprecated.",32,null],[13,"SysEx","","System exclusive event. See `api::SysExEvent`.",32,null],[3,"Event","","A VST event intended to be casted to a corresponding type.",null,null],[12,"event_type","","The type of event. This lets you know which event this…",33,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<Event>()`.",33,null],[12,"delta_frames","","Number of samples into the current processing block that…",33,null],[12,"_flags","","Generic flags, none defined in VST api yet.",33,null],[12,"_reserved","","The `Event` type is cast appropriately, so this acts as…",33,null],[3,"MidiEvent","","A midi event.",null,null],[12,"event_type","","Should be `EventType::Midi`.",34,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<MidiEvent>()`.",34,null],[12,"delta_frames","","Number of samples into the current processing block that…",34,null],[12,"flags","","See `MidiEventFlags`.",34,null],[12,"note_length","","Length in sample frames of entire note if available,…",34,null],[12,"note_offset","","Offset in samples into note from start if available,…",34,null],[12,"midi_data","","1 to 3 midi bytes. TODO: Doc",34,null],[12,"_midi_reserved","","Reserved midi byte (0).",34,null],[12,"detune","","Detuning between -63 and +64 cents, for scales other than…",34,null],[12,"note_off_velocity","","Note off velocity between 0 and 127.",34,null],[12,"_reserved1","","Reserved for future use. Should be 0.",34,null],[12,"_reserved2","","Reserved for future use. Should be 0.",34,null],[3,"SysExEvent","","A midi system exclusive event.",null,null],[12,"event_type","","Should be `EventType::SysEx`.",35,null],[12,"byte_size","","Size of this structure; `mem::sizeof::<SysExEvent>()`.",35,null],[12,"delta_frames","","Number of samples into the current processing block that…",35,null],[12,"_flags","","Generic flags, none defined in VST api yet.",35,null],[12,"data_size","","Size of payload in bytes.",35,null],[12,"_reserved1","","Reserved for future use. Should be 0.",35,null],[12,"system_data","","Pointer to payload.",35,null],[12,"_reserved2","","Reserved for future use. Should be 0.",35,null],[3,"TimeInfo","","Describes the time at the start of the block currently…",null,null],[12,"sample_pos","","current Position in audio samples (always valid)",36,null],[12,"sample_rate","","current Sample Rate in Hertz (always valid)",36,null],[12,"nanoseconds","","System Time in nanoseconds (10^-9 second)",36,null],[12,"ppq_pos","","Musical Position, in Quarter Note (1.0 equals 1 Quarter…",36,null],[12,"tempo","","current Tempo in BPM (Beats Per Minute)",36,null],[12,"bar_start_pos","","last Bar Start Position, in Quarter Note",36,null],[12,"cycle_start_pos","","Cycle Start (left locator), in Quarter Note",36,null],[12,"cycle_end_pos","","Cycle End (right locator), in Quarter Note",36,null],[12,"time_sig_numerator","","Time Signature Numerator (e.g. 3 for 3/4)",36,null],[12,"time_sig_denominator","","Time Signature Denominator (e.g. 4 for 3/4)",36,null],[12,"smpte_offset","","SMPTE offset in SMPTE subframes (bits; 1/80 of a frame).…",36,null],[12,"smpte_frame_rate","","See `SmpteFrameRate`",36,null],[12,"samples_to_next_clock","","MIDI Clock Resolution (24 Per Quarter Note), can be…",36,null],[12,"flags","","See `TimeInfoFlags`",36,null],[4,"SmpteFrameRate","","SMPTE Frame Rates.",null,null],[13,"Smpte24fps","","24 fps",37,null],[13,"Smpte25fps","","25 fps",37,null],[13,"Smpte2997fps","","29.97 fps",37,null],[13,"Smpte30fps","","30 fps",37,null],[13,"Smpte2997dfps","","29.97 drop",37,null],[13,"Smpte30dfps","","30 drop",37,null],[13,"SmpteFilm16mm","","Film 16mm",37,null],[13,"SmpteFilm35mm","","Film 35mm",37,null],[13,"Smpte239fps","","HDTV: 23.976 fps",37,null],[13,"Smpte249fps","","HDTV: 24.976 fps",37,null],[13,"Smpte599fps","","HDTV: 59.94 fps",37,null],[13,"Smpte60fps","","HDTV: 60 fps",37,null],[3,"ChannelFlags","","Flags for VST channels.",null,null],[3,"PluginFlags","","Flags for VST plugins.",null,null],[3,"ModifierKey","","Cross platform modifier key flags.",null,null],[3,"MidiEventFlags","","MIDI event flags.",null,null],[3,"TimeInfoFlags","","Used in the `flags` field of `TimeInfo`, and for querying…",null,null],[0,"buffer","rsynth::backend::vst_backend::vst","Buffers to safely work with audio samples.",null,null],[3,"AudioBuffer","rsynth::backend::vst_backend::vst::buffer","`AudioBuffer` contains references to the audio buffers for…",null,null],[3,"AudioBufferIterator","","Iterator over pairs of buffers of input channels and…",null,null],[3,"Inputs","","Wrapper type to access the buffers for the input channels…",null,null],[3,"InputIterator","","Iterator over buffers for input channels of an…",null,null],[3,"Outputs","","Wrapper type to access the buffers for the output channels…",null,null],[3,"OutputIterator","","Iterator over buffers for output channels of an…",null,null],[6,"PlaceholderEvent","","This is used as a placeholder to pre-allocate space for a…",null,null],[8,"WriteIntoPlaceholder","","This trait is used by `SendEventBuffer::send_events` to…",null,null],[10,"write_into","","writes an event into the given placeholder memory location",38,[[["sysexevent"],["self"]]]],[3,"SendEventBuffer","","This buffer is used for sending midi events through the…",null,null],[0,"channels","rsynth::backend::vst_backend::vst","Meta data for dealing with input / output channels. Not…",null,null],[3,"ChannelInfo","rsynth::backend::vst_backend::vst::channels","Information about an input / output channel. This isn't…",null,null],[4,"ArrangementTarget","","Target for Speaker arrangement type. Can be a cinema…",null,null],[13,"Music","","Music arrangement. Technically identical to Cinema.",39,null],[13,"Cinema","","Cinematic arrangement. Technically identical to Music.",39,null],[4,"StereoChannel","","An enum for all channels in a stereo configuration.",null,null],[13,"Left","","Left channel.",40,null],[13,"Right","","Right channel.",40,null],[4,"StereoConfig","","Possible stereo speaker configurations.",null,null],[13,"L_R","","Regular.",41,null],[13,"Ls_Rs","","Left surround, right surround.",41,null],[13,"Lc_Rc","","Left center, right center.",41,null],[13,"Sl_Sr","","Side left, side right.",41,null],[13,"C_Lfe","","Center, low frequency effects.",41,null],[4,"SurroundConfig","","Possible surround speaker configurations.",null,null],[13,"S3_0","","3.0 surround sound. Cinema: L R C Music: L R S",42,null],[13,"S3_1","","3.1 surround sound. Cinema: L R C Lfe Music: L R Lfe S",42,null],[13,"S4_0","","4.0 surround sound. Cinema: L R C S (LCRS) Music: L R Ls…",42,null],[13,"S4_1","","4.1 surround sound. Cinema: L R C Lfe S (LCRS + Lfe)…",42,null],[13,"S5_0","","5.0 surround sound. Cinema and music: L R C Ls Rs",42,null],[13,"S5_1","","5.1 surround sound. Cinema and music: L R C Lfe Ls Rs",42,null],[13,"S6_0","","6.0 surround sound. Cinema: L R C Ls Rs Cs Music: L R Ls…",42,null],[13,"S6_1","","6.1 surround sound. Cinema: L R C Lfe Ls Rs Cs Music: L R…",42,null],[13,"S7_0","","7.0 surround sound. Cinema: L R C Ls Rs Lc Rc Music: L R C…",42,null],[13,"S7_1","","7.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Music: L…",42,null],[13,"S8_0","","8.0 surround sound. Cinema: L R C Ls Rs Lc Rc Cs Music: L…",42,null],[13,"S8_1","","8.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Cs…",42,null],[13,"S10_2","","10.2 surround sound. Cinema + Music: L R C Lfe Ls Rs Tfl…",42,null],[4,"SpeakerArrangementType","","Type representing how a channel is used. Only useful for…",null,null],[13,"Custom","","Custom arrangement not specified to host.",43,null],[13,"Empty","","Empty arrangement.",43,null],[13,"Mono","","Mono channel.",43,null],[13,"Stereo","","Stereo channel. Contains type of stereo arrangement and…",43,null],[13,"Surround","","Surround channel. Contains surround arrangement and target…",43,null],[0,"editor","rsynth::backend::vst_backend::vst","All VST plugin editor related functionality.",null,null],[8,"Editor","rsynth::backend::vst_backend::vst::editor","Implemented by plugin editors.",null,null],[10,"size","","Get the size of the editor window.",44,[[["self"]]]],[10,"position","","Get the coordinates of the editor window.",44,[[["self"]]]],[11,"idle","","Editor idle call. Called by host.",44,[[["self"]]]],[11,"close","","Called when the editor window is closed.",44,[[["self"]]]],[10,"open","","Called when the editor window is opened.",44,[[["self"]],["bool"]]],[10,"is_open","","Return whether the window is currently open.",44,[[["self"]],["bool"]]],[11,"set_knob_mode","","Set the knob mode for this editor (if supported by host).",44,[[["self"],["knobmode"]],["bool"]]],[11,"key_up","","Receive key up event. Return `true` if the key was used.",44,[[["self"],["keycode"]],["bool"]]],[11,"key_down","","Receive key down event. Return `true` if the key was used.",44,[[["self"],["keycode"]],["bool"]]],[3,"KeyCode","","A platform independent key code. Includes modifier keys.",null,null],[12,"character","","ASCII character for key pressed (if applicable).",45,null],[12,"key","","Key pressed. See `enums::Key`.",45,null],[12,"modifier","","Modifier key bitflags. See `enums::flags::modifier_key`.",45,null],[4,"KnobMode","","Allows host to set how a parameter knob works.",null,null],[13,"Circular","","",46,null],[13,"CircularRelative","","",46,null],[13,"Linear","","",46,null],[4,"Key","","Platform independent key codes.",null,null],[13,"Back","","",47,null],[13,"Tab","","",47,null],[13,"Clear","","",47,null],[13,"Return","","",47,null],[13,"Pause","","",47,null],[13,"Escape","","",47,null],[13,"Space","","",47,null],[13,"Next","","",47,null],[13,"End","","",47,null],[13,"Home","","",47,null],[13,"Left","","",47,null],[13,"Up","","",47,null],[13,"Right","","",47,null],[13,"Down","","",47,null],[13,"PageUp","","",47,null],[13,"PageDown","","",47,null],[13,"Select","","",47,null],[13,"Print","","",47,null],[13,"Enter","","",47,null],[13,"Snapshot","","",47,null],[13,"Insert","","",47,null],[13,"Delete","","",47,null],[13,"Help","","",47,null],[13,"Numpad0","","",47,null],[13,"Numpad1","","",47,null],[13,"Numpad2","","",47,null],[13,"Numpad3","","",47,null],[13,"Numpad4","","",47,null],[13,"Numpad5","","",47,null],[13,"Numpad6","","",47,null],[13,"Numpad7","","",47,null],[13,"Numpad8","","",47,null],[13,"Numpad9","","",47,null],[13,"Multiply","","",47,null],[13,"Add","","",47,null],[13,"Separator","","",47,null],[13,"Subtract","","",47,null],[13,"Decimal","","",47,null],[13,"Divide","","",47,null],[13,"F1","","",47,null],[13,"F2","","",47,null],[13,"F3","","",47,null],[13,"F4","","",47,null],[13,"F5","","",47,null],[13,"F6","","",47,null],[13,"F7","","",47,null],[13,"F8","","",47,null],[13,"F9","","",47,null],[13,"F10","","",47,null],[13,"F11","","",47,null],[13,"F12","","",47,null],[13,"Numlock","","",47,null],[13,"Scroll","","",47,null],[13,"Shift","","",47,null],[13,"Control","","",47,null],[13,"Alt","","",47,null],[13,"Equals","","",47,null],[0,"event","rsynth::backend::vst_backend::vst","Interfaces to VST events.",null,null],[4,"Event","rsynth::backend::vst_backend::vst::event","A VST event.",null,null],[13,"Midi","","A midi event.",48,null],[13,"SysEx","","A system exclusive event.",48,null],[13,"Deprecated","","A deprecated event.",48,null],[3,"MidiEvent","","A midi event.",null,null],[12,"data","","The raw midi data associated with this event.",49,null],[12,"delta_frames","","Number of samples into the current processing block that…",49,null],[12,"live","","This midi event was created live as opposed to being…",49,null],[12,"note_length","","The length of the midi note associated with this event, if…",49,null],[12,"note_offset","","Offset in samples into note from note start, if available.",49,null],[12,"detune","","Detuning between -63 and +64 cents.",49,null],[12,"note_off_velocity","","Note off velocity between 0 and 127.",49,null],[3,"SysExEvent","","A system exclusive event.",null,null],[12,"payload","","The SysEx payload.",50,null],[12,"delta_frames","","Number of samples into the current processing block that…",50,null],[0,"host","rsynth::backend::vst_backend::vst","Host specific structures.",null,null],[8,"Host","rsynth::backend::vst_backend::vst::host","Implemented by all VST hosts.",null,null],[11,"automate","","Automate a parameter; the value has been changed.",51,[[["f32"],["self"],["i32"]]]],[11,"get_plugin_id","","Get the plugin ID of the currently loading plugin.",51,[[["self"]],["i32"]]],[11,"idle","","An idle call.",51,[[["self"]]]],[11,"get_info","","Get vendor and product information.",51,[[["self"]]]],[11,"process_events","","Handle incoming events from the plugin.",51,[[["self"],["events"]]]],[11,"get_time_info","","Get time information.",51,[[["self"],["i32"]],[["timeinfo"],["option",["timeinfo"]]]]],[11,"get_block_size","","Get block size.",51,[[["self"]],["isize"]]],[4,"PluginLoadError","","All possible errors that can occur when loading a VST…",null,null],[13,"InvalidPath","","Could not load given path.",52,null],[13,"NotAPlugin","","Given path is not a VST plugin.",52,null],[13,"InstanceFailed","","Failed to create an instance of this plugin.",52,null],[13,"InvalidApiVersion","","The API version which the plugin used is not supported by…",52,null],[3,"PluginLoader","","Wrapper for an externally loaded VST plugin.",null,null],[3,"PluginInstance","","An instance of an externally loaded VST plugin.",null,null],[3,"HostBuffer","","Used for constructing `AudioBuffer` instances on the host.",null,null],[0,"plugin","rsynth::backend::vst_backend::vst","Plugin specific structures.",null,null],[4,"Category","rsynth::backend::vst_backend::vst::plugin","Plugin type. Generally either Effect or Synth.",null,null],[13,"Unknown","","Unknown / not implemented",53,null],[13,"Effect","","Any effect",53,null],[13,"Synth","","VST instrument",53,null],[13,"Analysis","","Scope, tuner, spectrum analyser, etc.",53,null],[13,"Mastering","","Dynamics, etc.",53,null],[13,"Spacializer","","Panners, etc.",53,null],[13,"RoomFx","","Delays and Reverbs",53,null],[13,"SurroundFx","","Dedicated surround processor.",53,null],[13,"Restoration","","Denoiser, etc.",53,null],[13,"OfflineProcess","","Offline processing.",53,null],[13,"Shell","","Contains other plugins.",53,null],[13,"Generator","","Tone generator, etc.",53,null],[3,"Info","","A structure representing static plugin information.",null,null],[12,"name","","Plugin Name.",54,null],[12,"vendor","","Plugin Vendor.",54,null],[12,"presets","","Number of different presets.",54,null],[12,"parameters","","Number of parameters.",54,null],[12,"inputs","","Number of inputs.",54,null],[12,"outputs","","Number of outputs.",54,null],[12,"midi_inputs","","Number of MIDI input channels (1-16), or 0 for the default…",54,null],[12,"midi_outputs","","Number of MIDI output channels (1-16), or 0 for the…",54,null],[12,"unique_id","","Unique plugin ID. Can be registered with Steinberg to…",54,null],[12,"version","","Plugin version (e.g. 0001 = `v0.0.0.1`, 1283 = `v1.2.8.3`).",54,null],[12,"category","","Plugin category. Possible values are found in…",54,null],[12,"initial_delay","","Latency of the plugin in samples.",54,null],[12,"preset_chunks","","Indicates that preset data is handled in formatless chunks.",54,null],[12,"f64_precision","","Indicates whether this plugin can process f64 based…",54,null],[12,"silent_when_stopped","","If this is true, the plugin will not produce sound when…",54,null],[4,"CanDo","","Features which are optionally supported by a plugin. These…",null,null],[13,"SendEvents","","",55,null],[13,"SendMidiEvent","","",55,null],[13,"ReceiveEvents","","",55,null],[13,"ReceiveMidiEvent","","",55,null],[13,"ReceiveTimeInfo","","",55,null],[13,"Offline","","",55,null],[13,"MidiProgramNames","","",55,null],[13,"Bypass","","",55,null],[13,"ReceiveSysExEvent","","",55,null],[13,"MidiSingleNoteTuningChange","","",55,null],[13,"MidiKeyBasedInstrumentControl","","",55,null],[13,"Other","","",55,null],[8,"Plugin","","Must be implemented by all VST plugins.",null,null],[10,"get_info","","This method must return an `Info` struct.",56,[[["self"]],["info"]]],[11,"new","","Called during initialization to pass a `HostCallback` to…",56,[[["hostcallback"]],["self"]]],[11,"init","","Called when plugin is fully initialized.",56,[[["self"]]]],[11,"set_sample_rate","","Called when sample rate is changed by host.",56,[[["f32"],["self"]]]],[11,"set_block_size","","Called when block size is changed by host.",56,[[["i64"],["self"]]]],[11,"resume","","Called to transition the plugin into the resumed state.",56,[[["self"]]]],[11,"suspend","","Called to transition the plugin into the suspended state.",56,[[["self"]]]],[11,"vendor_specific","","Vendor specific handling.",56,[[["f32"],["i32"],["isize"],["self"]],["isize"]]],[11,"can_do","","Return whether plugin supports specified action.",56,[[["cando"],["self"]],["supported"]]],[11,"get_tail_size","","Get the tail size of plugin when it is stopped. Used in…",56,[[["self"]],["isize"]]],[11,"process","","Process an audio buffer containing `f32` values.",56,[[["self"],["audiobuffer"]]]],[11,"process_f64","","Process an audio buffer containing `f64` values.",56,[[["self"],["audiobuffer"]]]],[11,"process_events","","Handle incoming events sent from the host.",56,[[["self"],["events"]]]],[11,"get_parameter_object","","Get a reference to the shared parameter object.",56,[[["self"]],[["arc",["pluginparameters"]],["pluginparameters"]]]],[11,"get_input_info","","Get information about an input channel. Only used by some…",56,[[["self"],["i32"]],["channelinfo"]]],[11,"get_output_info","","Get information about an output channel. Only used by some…",56,[[["self"],["i32"]],["channelinfo"]]],[11,"start_process","","Called one time before the start of process call.",56,[[["self"]]]],[11,"stop_process","","Called after the stop of process call.",56,[[["self"]]]],[11,"get_editor","","Return handle to plugin editor if supported. The method…",56,[[["self"]],[["option",["box"]],["box",["editor"]]]]],[8,"PluginParameters","","Parameter object shared between the UI and processing…",null,null],[11,"change_preset","","Set the current preset to the index specified by `preset`.",57,[[["self"],["i32"]]]],[11,"get_preset_num","","Get the current preset index.",57,[[["self"]],["i32"]]],[11,"set_preset_name","","Set the current preset name.",57,[[["string"],["self"]]]],[11,"get_preset_name","","Get the name of the preset at the index specified by…",57,[[["self"],["i32"]],["string"]]],[11,"get_parameter_label","","Get parameter label for parameter at `index` (e.g. \"db\",…",57,[[["self"],["i32"]],["string"]]],[11,"get_parameter_text","","Get the parameter value for parameter at `index` (e.g.…",57,[[["self"],["i32"]],["string"]]],[11,"get_parameter_name","","Get the name of parameter at `index`.",57,[[["self"],["i32"]],["string"]]],[11,"get_parameter","","Get the value of paramater at `index`. Should be value…",57,[[["self"],["i32"]],["f32"]]],[11,"set_parameter","","Set the value of parameter at `index`. `value` is between…",57,[[["f32"],["self"],["i32"]]]],[11,"can_be_automated","","Return whether parameter at `index` can be automated.",57,[[["self"],["i32"]],["bool"]]],[11,"string_to_parameter","","Use String as input for parameter value. Used by host to…",57,[[["string"],["self"],["i32"]],["bool"]]],[11,"get_preset_data","","If `preset_chunks` is set to true in plugin info, this…",57,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"get_bank_data","","If `preset_chunks` is set to true in plugin info, this…",57,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"load_preset_data","","If `preset_chunks` is set to true in plugin info, this…",57,[[["self"]]]],[11,"load_bank_data","","If `preset_chunks` is set to true in plugin info, this…",57,[[["self"]]]],[3,"HostCallback","","A reference to the host which allows the plugin to call…",null,null],[0,"util","rsynth::backend::vst_backend::vst","Structures for easing the implementation of VST plugins.",null,null],[3,"AtomicFloat","rsynth::backend::vst_backend::vst::util","Simple atomic floating point variable with relaxed ordering.",null,null],[3,"ParameterTransfer","","A set of parameters that can be shared between threads.",null,null],[3,"ParameterTransferIterator","","An iterator over changed parameters. Returned by `iterate`.",null,null],[14,"plugin_main","rsynth::backend::vst_backend::vst","Exports the necessary symbols for the plugin to be used by…",null,null],[8,"VstPluginMeta","rsynth::backend::vst_backend","A VST plugin should implement this trait in addition to…",null,null],[10,"plugin_id","","",58,[[["self"]],["i32"]]],[10,"category","","",58,[[["self"]],["category"]]],[11,"get_info","","",59,[[["self"]],["info"]]],[11,"new","","",59,[[["hostcallback"],["p"]],["self"]]],[11,"host","","",59,[[["self"]],["hostcallback"]]],[11,"process","","",59,[[["self"],["audiobuffer"]]]],[11,"process_f64","","",59,[[["audiobuffer"],["self"]]]],[11,"get_input_info","","",59,[[["self"],["i32"]],["channelinfo"]]],[11,"get_output_info","","",59,[[["self"],["i32"]],["channelinfo"]]],[11,"process_events","","",59,[[["self"],["events"]]]],[11,"set_sample_rate","","",59,[[["self"],["f64"]]]],[8,"HostInterface","rsynth::backend","Defines an interface for communicating with the host or…",null,null],[10,"output_initialized","","Return whether the output buffers are zero-initialized.…",60,[[["self"]],["bool"]]],[11,"stop","","Stop processing. For backends that do not support…",60,[[["self"]]]],[8,"Stop","","A marker trait that indicates that the backend can be…",null,null],[0,"envelope","rsynth","This module has not been thoroughly tested, so expect some…",null,null],[3,"EnvelopeIteratorItem","rsynth::envelope","",null,null],[12,"item","","",61,null],[12,"has_updated","","",61,null],[0,"staircase_envelope","","",null,null],[3,"StairCaseEnvelopeIterator","rsynth::envelope::staircase_envelope","",null,null],[3,"StairCaseEnvelope","","",null,null],[8,"Envelope","rsynth::envelope","Defines the behaviour of an envelope. An envelope allows…",null,null],[16,"Iter","","The type of the iterator.",62,null],[16,"EventType","","",62,null],[10,"iter","","Get the iterator.",62,[[["self"]]]],[10,"insert_event","","",62,[[["self"]]]],[10,"forget_past","","",62,[[["self"],["u32"]]]],[0,"event","rsynth","Event handling",null,null],[3,"SysExEvent","rsynth::event","A System Exclusive (\"SysEx\") event.",null,null],[3,"RawMidiEvent","","A raw midi event.",null,null],[3,"Timed","","`Timed<E>` adds timing to an event.",null,null],[12,"time_in_frames","","The offset (in frames) of the event relative to the start…",63,null],[12,"event","","The underlying event.",63,null],[3,"Indexed","","`Indexed<E>` adds an index to an event.",null,null],[12,"index","","The index of the event",64,null],[12,"event","","The underlying event.",64,null],[3,"DeltaEvent","","",null,null],[12,"microseconds_since_previous_event","","",65,null],[12,"event","","",65,null],[0,"event_queue","","",null,null],[3,"EventQueue","rsynth::event::event_queue","",null,null],[3,"AlwaysInsertNewBeforeOld","","",null,null],[3,"AlwaysInsertNewAfterOld","","",null,null],[3,"AlwaysIgnoreNew","","",null,null],[3,"AlwaysRemoveOld","","",null,null],[4,"EventCollisionHandling","","",null,null],[13,"InsertNewBeforeOld","","",66,null],[13,"InsertNewAfterOld","","",66,null],[13,"IgnoreNew","","",66,null],[13,"RemoveOld","","",66,null],[8,"HandleEventCollision","","",null,null],[10,"decide_on_collision","","",67,[[["t"],["self"]],["eventcollisionhandling"]]],[11,"new","","Panics Panics if `capacity == 0`.",68,[[["usize"]],["self"]]],[11,"queue_event","","Queue a new event. When the buffer is full, an element may…",68,[[["h"],["self"],["timed"]],[["option",["timed"]],["timed"]]]],[11,"forget_before","","Remove all events before, but not on, this threshold.",68,[[["self"],["u32"]]]],[11,"clear","","Remove all events from the queue.",68,[[["self"]]]],[11,"shift_time","","Shift time forward by `new_zero_time` frames.",68,[[["self"],["u32"]]]],[11,"get_last_before","","",68,[[["u32"],["self"]],[["timed"],["option",["timed"]]]]],[11,"first","","",68,[[["self"]],[["timed"],["option",["timed"]]]]],[11,"split","","",68,[[["vecstorage"],["vecstorage"],["audiobufferinout"],["r"],["self"],["c"]]]],[8,"EventHandler","rsynth::event","The trait that plugins should implement in order to handle…",null,null],[10,"handle_event","","",69,[[["self"],["e"]]]],[8,"ContextualEventHandler","","The trait that plugins should implement in order to handle…",null,null],[10,"handle_event","","",70,[[["context"],["self"],["e"]]]],[11,"new","","Create a new `SysExEvent` with the given `data`.",71,[[],["self"]]],[11,"data","","Get the data from the `SysExEvent`",71,[[["self"]]]],[11,"new","","Create a new `RawMidiEvent` with the given raw data.",72,[[],["self"]]],[11,"try_new","","Try to create a new `RawMidiEvent` with the given raw…",72,[[],["option"]]],[11,"data","","Get the raw data from a `RawMidiEvent`.",72,[[["self"]]]],[11,"new","","",63,[[["u32"],["e"]],["self"]]],[11,"new","","",64,[[["usize"],["e"]],["self"]]],[0,"meta","rsynth","Mechanisms for defining the meta-data of a plugin or…",null,null],[3,"AudioPort","rsynth::meta","A \"marker\" struct to be used as a type parameter for the…",null,null],[3,"MidiPort","","A \"marker\" struct to be used as a type parameter for the…",null,null],[3,"MetaData","","Represents general-purpose meta-data of an audio…",null,null],[12,"general_meta","","The meta-data about the application or plugin as a whole.",73,null],[12,"audio_port_meta","","Meta-data about the audio ports.",73,null],[12,"midi_port_meta","","Meta-data about the midi ports.",73,null],[3,"InOut","","Represents meta-data about a input and output ports.",null,null],[12,"inputs","","Meta-data of the input ports.",74,null],[12,"outputs","","Meta-data of the output ports.",74,null],[8,"Meta","","Define the meta-data for an application or plug-in.",null,null],[16,"MetaData","","The data-type that represents the meta-data.",75,null],[10,"meta","","Get the meta-data.",75,[[["self"]]]],[8,"General","","Define meta-data of an application or plugin as a whole.",null,null],[16,"GeneralData","","The data-type of the general meta-data.",76,null],[10,"general","","Get the general meta-data.",76,[[["self"]]]],[8,"Name","","Implement this trait to indicate that a type can be used…",null,null],[10,"name","","Get the name.",77,[[["self"]],["str"]]],[8,"Port","","Define meta-data for input ports and output ports.",null,null],[16,"PortData","","",78,null],[10,"in_ports","","",78,[[["self"]]]],[10,"out_ports","","",78,[[["self"]]]],[0,"test_utilities","rsynth","Utilities for testing.",null,null],[3,"DummyEventHandler","rsynth::test_utilities","",null,null],[3,"TestPlugin","","A plugin useful for writing automated tests.",null,null],[11,"new","","",79,[[["vec",["vec"]],["vec"],["m"],["vec",["audiochunk"]],["audiochunk"]],["self"]]],[11,"check_last","","",79,[[["self"]]]],[0,"utilities","rsynth","",null,null],[0,"polyphony","rsynth::utilities","Utility to facilitate genarating different sounds at the…",null,null],[3,"ToneIdentifier","rsynth::utilities::polyphony","Used to dispatch polyphonic event to the correct voice,…",null,null],[12,"0","","",80,null],[3,"RawMidiEventToneIdentifierDispatchClassifier","","",null,null],[4,"EventDispatchClass","","",null,null],[13,"Broadcast","","",81,null],[13,"AssignNewVoice","","",81,null],[13,"VoiceSpecific","","",81,null],[13,"ReleaseVoice","","",81,null],[4,"VoiceAssignment","","",null,null],[13,"None","","",82,null],[13,"All","","",82,null],[13,"Some","","",82,null],[0,"simple_event_dispatching","","Some basic event dispatching.",null,null],[3,"SimpleEventDispatcher","rsynth::utilities::polyphony::simple_event_dispatching","A simple event dispatcher.",null,null],[4,"SimpleVoiceState","","A simple voice state",null,null],[13,"Idle","","The voice is idle (in other words: doing nothing).",83,null],[13,"Releasing","","The voice has received a signal to stop, but is still…",83,null],[13,"Active","","The voice has not yet received a signal to stop and is…",83,null],[11,"new","","",84,[[["classifier"]],["self"]]],[8,"EventDispatchClassifier","rsynth::utilities::polyphony","",null,null],[16,"VoiceIdentifier","","",85,null],[10,"classify","","",85,[[["self"],["event"]],["eventdispatchclass"]]],[8,"Voice","","Implement this trait to inform the polyphonic event…",null,null],[10,"state","","",86,[[["self"]],["state"]]],[8,"VoiceAssigner","","",null,null],[16,"Voice","","",87,null],[11,"assign_event","","",87,[[["self"],["event"]],["voiceassignment"]]],[10,"find_active_voice","","",87,[[["self"]],[["usize"],["option",["usize"]]]]],[10,"find_idle_voice","","",87,[[["self"]],["usize"]]],[8,"EventDispatcher","","",null,null],[11,"dispatch_event","","",88,[[["self"],["event"]]]],[8,"ContextualEventDispatcher","","",null,null],[11,"dispatch_contextual_event","","Dispatch an event to the voice or voices that should…",89,[[["event"],["self"],["context"]]]],[8,"AudioHandlerMeta","rsynth","Define the maximum number of audio inputs and the maximum…",null,null],[10,"max_number_of_audio_inputs","","The maximum number of audio inputs supported. This method…",90,[[["self"]],["usize"]]],[10,"max_number_of_audio_outputs","","The maximum number of audio outputs supported. This method…",90,[[["self"]],["usize"]]],[8,"AudioHandler","","Define how sample-rate changes are handled.",null,null],[10,"set_sample_rate","","Called when the sample-rate changes. The backend should…",91,[[["self"],["f64"]]]],[8,"MidiHandlerMeta","","Define the maximum number of midi inputs and the maximum…",null,null],[10,"max_number_of_midi_inputs","","The maximum number of midi inputs supported. This method…",92,[[["self"]],["usize"]]],[10,"max_number_of_midi_outputs","","The maximum number of midi outputs supported. This method…",92,[[["self"]],["usize"]]],[8,"AudioRenderer","","Defines how audio is rendered.",null,null],[10,"render_buffer","","This method is called repeatedly for subsequent audio…",93,[[["self"],["audiobufferinout"]]]],[8,"ContextualAudioRenderer","","Defines how audio is rendered, similar to the…",null,null],[10,"render_buffer","","This method called repeatedly for subsequent buffers.",94,[[["context"],["self"],["audiobufferinout"]]]],[8,"CommonPluginMeta","","Provides common meta-data of the plugin or application to…",null,null],[10,"name","","The name of the plugin or application.",95,[[["self"]],["str"]]],[8,"CommonAudioPortMeta","","Provides some meta-data of the audio-ports used by the…",null,null],[11,"audio_input_name","","The name of the audio input with the given index. You can…",96,[[["self"],["usize"]],["string"]]],[11,"audio_output_name","","The name of the audio output with the given index. You can…",96,[[["self"],["usize"]],["string"]]],[8,"CommonMidiPortMeta","","Provides some meta-data of the midi-ports used by the…",null,null],[11,"midi_input_name","","The name of the midi input with the given index. You can…",97,[[["self"],["usize"]],["string"]]],[11,"midi_output_name","","The name of the midi output with the given index. You can…",97,[[["self"],["usize"]],["string"]]],[14,"audio_chunk","","Create an audio chunk. ## Example `// Create an audio…",null,null],[14,"vst_init","","A wrapper around the `plugin_main!` macro from the `vst`…",null,null],[11,"from","rsynth::buffer","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from_sample_","","",0,[[["s"]],["s"]]],[11,"to_sample_","","",0,[[],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from_sample_","","",1,[[["s"]],["s"]]],[11,"to_sample_","","",1,[[],["u"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"into_iter","","",98,[[],["i"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from_sample_","","",98,[[["s"]],["s"]]],[11,"to_sample_","","",98,[[],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from_sample_","","",2,[[["s"]],["s"]]],[11,"to_sample_","","",2,[[],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from_sample_","","",3,[[["s"]],["s"]]],[11,"to_sample_","","",3,[[],["u"]]],[11,"from","rsynth::backend::combined","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from_sample_","","",15,[[["s"]],["s"]]],[11,"to_sample_","","",15,[[],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from_sample_","","",16,[[["s"]],["s"]]],[11,"to_sample_","","",16,[[],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from_sample_","","",17,[[["s"]],["s"]]],[11,"to_sample_","","",17,[[],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from_sample_","","",18,[[["s"]],["s"]]],[11,"to_sample_","","",18,[[],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from_sample_","","",19,[[["s"]],["s"]]],[11,"to_sample_","","",19,[[],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from_sample_","","",4,[[["s"]],["s"]]],[11,"to_sample_","","",4,[[],["u"]]],[11,"from","rsynth::backend::combined::dummy","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from_sample_","","",5,[[["s"]],["s"]]],[11,"to_sample_","","",5,[[],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from_sample_","","",6,[[["s"]],["s"]]],[11,"to_sample_","","",6,[[],["u"]]],[11,"from","rsynth::backend::combined::hound","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from_sample_","","",8,[[["s"]],["s"]]],[11,"to_sample_","","",8,[[],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from_sample_","","",9,[[["s"]],["s"]]],[11,"to_sample_","","",9,[[],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from_sample_","","",7,[[["s"]],["s"]]],[11,"to_sample_","","",7,[[],["u"]]],[11,"from","rsynth::backend::combined::memory","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from_sample_","","",10,[[["s"]],["s"]]],[11,"to_sample_","","",10,[[],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from_sample_","","",11,[[["s"]],["s"]]],[11,"to_sample_","","",11,[[],["u"]]],[11,"from","rsynth::backend::jack_backend","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from_sample_","","",20,[[["s"]],["s"]]],[11,"to_sample_","","",20,[[],["u"]]],[11,"from","rsynth::backend::vst_backend","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from_sample_","","",59,[[["s"]],["s"]]],[11,"to_sample_","","",59,[[],["u"]]],[11,"from","rsynth::backend::vst_backend::vst::api","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from_sample_","","",21,[[["s"]],["s"]]],[11,"to_sample_","","",21,[[],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from_sample_","","",22,[[["s"]],["s"]]],[11,"to_sample_","","",22,[[],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from_sample_","","",23,[[["s"]],["s"]]],[11,"to_sample_","","",23,[[],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from_sample_","","",24,[[["s"]],["s"]]],[11,"to_sample_","","",24,[[],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from_sample_","","",25,[[["s"]],["s"]]],[11,"to_sample_","","",25,[[],["u"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from_sample_","","",26,[[["s"]],["s"]]],[11,"to_sample_","","",26,[[],["u"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from_sample_","","",27,[[["s"]],["s"]]],[11,"to_sample_","","",27,[[],["u"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from_sample_","","",28,[[["s"]],["s"]]],[11,"to_sample_","","",28,[[],["u"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from_sample_","","",29,[[["s"]],["s"]]],[11,"to_sample_","","",29,[[],["u"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from_sample_","","",30,[[["s"]],["s"]]],[11,"to_sample_","","",30,[[],["u"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from_sample_","","",31,[[["s"]],["s"]]],[11,"to_sample_","","",31,[[],["u"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from_sample_","","",32,[[["s"]],["s"]]],[11,"to_sample_","","",32,[[],["u"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from_sample_","","",33,[[["s"]],["s"]]],[11,"to_sample_","","",33,[[],["u"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from_sample_","","",34,[[["s"]],["s"]]],[11,"to_sample_","","",34,[[],["u"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from_sample_","","",35,[[["s"]],["s"]]],[11,"to_sample_","","",35,[[],["u"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from_sample_","","",36,[[["s"]],["s"]]],[11,"to_sample_","","",36,[[],["u"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from_sample_","","",37,[[["s"]],["s"]]],[11,"to_sample_","","",37,[[],["u"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from_sample_","","",99,[[["s"]],["s"]]],[11,"to_sample_","","",99,[[],["u"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from_sample_","","",100,[[["s"]],["s"]]],[11,"to_sample_","","",100,[[],["u"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from_sample_","","",101,[[["s"]],["s"]]],[11,"to_sample_","","",101,[[],["u"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from_sample_","","",102,[[["s"]],["s"]]],[11,"to_sample_","","",102,[[],["u"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from_sample_","","",103,[[["s"]],["s"]]],[11,"to_sample_","","",103,[[],["u"]]],[11,"from","rsynth::backend::vst_backend::vst::buffer","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from_sample_","","",104,[[["s"]],["s"]]],[11,"to_sample_","","",104,[[],["u"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"into_iter","","",105,[[],["i"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from_sample_","","",105,[[["s"]],["s"]]],[11,"to_sample_","","",105,[[],["u"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"into_iter","","",106,[[],["i"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from_sample_","","",106,[[["s"]],["s"]]],[11,"to_sample_","","",106,[[],["u"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"into_iter","","",107,[[],["i"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from_sample_","","",107,[[["s"]],["s"]]],[11,"to_sample_","","",107,[[],["u"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from_sample_","","",108,[[["s"]],["s"]]],[11,"to_sample_","","",108,[[],["u"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"into_iter","","",109,[[],["i"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from_sample_","","",109,[[["s"]],["s"]]],[11,"to_sample_","","",109,[[],["u"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from_sample_","","",110,[[["s"]],["s"]]],[11,"to_sample_","","",110,[[],["u"]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from_sample_","","",111,[[["s"]],["s"]]],[11,"to_sample_","","",111,[[],["u"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from_sample_","","",39,[[["s"]],["s"]]],[11,"to_sample_","","",39,[[],["u"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from_sample_","","",40,[[["s"]],["s"]]],[11,"to_sample_","","",40,[[],["u"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from_sample_","","",41,[[["s"]],["s"]]],[11,"to_sample_","","",41,[[],["u"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from_sample_","","",42,[[["s"]],["s"]]],[11,"to_sample_","","",42,[[],["u"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from_sample_","","",43,[[["s"]],["s"]]],[11,"to_sample_","","",43,[[],["u"]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from_sample_","","",45,[[["s"]],["s"]]],[11,"to_sample_","","",45,[[],["u"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from_sample_","","",46,[[["s"]],["s"]]],[11,"to_sample_","","",46,[[],["u"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from_sample_","","",47,[[["s"]],["s"]]],[11,"to_sample_","","",47,[[],["u"]]],[11,"from","rsynth::backend::vst_backend::vst::event","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from_sample_","","",48,[[["s"]],["s"]]],[11,"to_sample_","","",48,[[],["u"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from_sample_","","",49,[[["s"]],["s"]]],[11,"to_sample_","","",49,[[],["u"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from_sample_","","",50,[[["s"]],["s"]]],[11,"to_sample_","","",50,[[],["u"]]],[11,"from","rsynth::backend::vst_backend::vst::host","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from_sample_","","",52,[[["s"]],["s"]]],[11,"to_sample_","","",52,[[],["u"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from_sample_","","",112,[[["s"]],["s"]]],[11,"to_sample_","","",112,[[],["u"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from_sample_","","",113,[[["s"]],["s"]]],[11,"to_sample_","","",113,[[],["u"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from_sample_","","",114,[[["s"]],["s"]]],[11,"to_sample_","","",114,[[],["u"]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from_sample_","","",53,[[["s"]],["s"]]],[11,"to_sample_","","",53,[[],["u"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from_sample_","","",54,[[["s"]],["s"]]],[11,"to_sample_","","",54,[[],["u"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from_sample_","","",55,[[["s"]],["s"]]],[11,"to_sample_","","",55,[[],["u"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from_sample_","","",115,[[["s"]],["s"]]],[11,"to_sample_","","",115,[[],["u"]]],[11,"from","rsynth::backend::vst_backend::vst::util","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from_sample_","","",116,[[["s"]],["s"]]],[11,"to_sample_","","",116,[[],["u"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from_sample_","","",117,[[["s"]],["s"]]],[11,"to_sample_","","",117,[[],["u"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"into_iter","","",118,[[],["i"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from_sample_","","",118,[[["s"]],["s"]]],[11,"to_sample_","","",118,[[],["u"]]],[11,"from","rsynth::envelope","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from_sample_","","",61,[[["s"]],["s"]]],[11,"to_sample_","","",61,[[],["u"]]],[11,"from","rsynth::envelope::staircase_envelope","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"into_iter","","",119,[[],["i"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from_sample_","","",119,[[["s"]],["s"]]],[11,"to_sample_","","",119,[[],["u"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from_sample_","","",120,[[["s"]],["s"]]],[11,"to_sample_","","",120,[[],["u"]]],[11,"from","rsynth::event","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from_sample_","","",71,[[["s"]],["s"]]],[11,"to_sample_","","",71,[[],["u"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from_sample_","","",72,[[["s"]],["s"]]],[11,"to_sample_","","",72,[[],["u"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from_sample_","","",63,[[["s"]],["s"]]],[11,"to_sample_","","",63,[[],["u"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from_sample_","","",64,[[["s"]],["s"]]],[11,"to_sample_","","",64,[[],["u"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from_sample_","","",65,[[["s"]],["s"]]],[11,"to_sample_","","",65,[[],["u"]]],[11,"from","rsynth::event::event_queue","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from_sample_","","",68,[[["s"]],["s"]]],[11,"to_sample_","","",68,[[],["u"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from_sample_","","",121,[[["s"]],["s"]]],[11,"to_sample_","","",121,[[],["u"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from_sample_","","",122,[[["s"]],["s"]]],[11,"to_sample_","","",122,[[],["u"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from_sample_","","",123,[[["s"]],["s"]]],[11,"to_sample_","","",123,[[],["u"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from_sample_","","",124,[[["s"]],["s"]]],[11,"to_sample_","","",124,[[],["u"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from_sample_","","",66,[[["s"]],["s"]]],[11,"to_sample_","","",66,[[],["u"]]],[11,"from","rsynth::meta","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from_sample_","","",125,[[["s"]],["s"]]],[11,"to_sample_","","",125,[[],["u"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from_sample_","","",126,[[["s"]],["s"]]],[11,"to_sample_","","",126,[[],["u"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from_sample_","","",73,[[["s"]],["s"]]],[11,"to_sample_","","",73,[[],["u"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from_sample_","","",74,[[["s"]],["s"]]],[11,"to_sample_","","",74,[[],["u"]]],[11,"from","rsynth::test_utilities","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from_sample_","","",127,[[["s"]],["s"]]],[11,"to_sample_","","",127,[[],["u"]]],[11,"max_number_of_audio_inputs","","",79,[[["self"]],["usize"]]],[11,"max_number_of_audio_outputs","","",79,[[["self"]],["usize"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from_sample_","","",79,[[["s"]],["s"]]],[11,"to_sample_","","",79,[[],["u"]]],[11,"from","rsynth::utilities::polyphony","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from_sample_","","",80,[[["s"]],["s"]]],[11,"to_sample_","","",80,[[],["u"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from_sample_","","",128,[[["s"]],["s"]]],[11,"to_sample_","","",128,[[],["u"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from_sample_","","",81,[[["s"]],["s"]]],[11,"to_sample_","","",81,[[],["u"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from_sample_","","",82,[[["s"]],["s"]]],[11,"to_sample_","","",82,[[],["u"]]],[11,"from","rsynth::utilities::polyphony::simple_event_dispatching","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from_sample_","","",84,[[["s"]],["s"]]],[11,"to_sample_","","",84,[[],["u"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from_sample_","","",83,[[["s"]],["s"]]],[11,"to_sample_","","",83,[[],["u"]]],[11,"bitand","rsynth::backend::vst_backend::vst::api","Returns the intersection between the two sets of flags.",101,[[["modifierkey"]],["modifierkey"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",100,[[["pluginflags"]],["pluginflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",102,[[["midieventflags"]],["midieventflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",99,[[["channelflags"]],["channelflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",103,[[["timeinfoflags"]],["timeinfoflags"]]],[11,"fmt","","",102,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",100,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",103,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"next","rsynth::backend::vst_backend::vst::util","",118,[[["self"]],["option"]]],[11,"next","rsynth::backend::vst_backend::vst::buffer","",109,[[["self"]],["option"]]],[11,"next","","",105,[[["self"]],["option"]]],[11,"next","","",107,[[["self"]],["option"]]],[11,"sub_assign","rsynth::backend::vst_backend::vst::api","Disables all flags enabled in the set.",100,[[["self"],["pluginflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",99,[[["self"],["channelflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",101,[[["self"],["modifierkey"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",103,[[["self"],["timeinfoflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",102,[[["self"],["midieventflags"]]]],[11,"fmt","","",103,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",102,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",100,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"into_iter","rsynth::backend::vst_backend::vst::buffer","",106,[[]]],[11,"from_iter","rsynth::backend::vst_backend::vst::api","",100,[[["t"]],["pluginflags"]]],[11,"from_iter","","",102,[[["t"]],["midieventflags"]]],[11,"from_iter","","",99,[[["t"]],["channelflags"]]],[11,"from_iter","","",101,[[["t"]],["modifierkey"]]],[11,"from_iter","","",103,[[["t"]],["timeinfoflags"]]],[11,"index_mut","rsynth::backend::vst_backend::vst::buffer","",108,[[["self"],["usize"]]]],[11,"bitor","rsynth::backend::vst_backend::vst::api","Returns the union of the two sets of flags.",100,[[["pluginflags"]],["pluginflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",102,[[["midieventflags"]],["midieventflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",99,[[["channelflags"]],["channelflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",103,[[["timeinfoflags"]],["timeinfoflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",101,[[["modifierkey"]],["modifierkey"]]],[11,"eq","","",102,[[["midieventflags"],["self"]],["bool"]]],[11,"ne","","",102,[[["midieventflags"],["self"]],["bool"]]],[11,"eq","","",101,[[["modifierkey"],["self"]],["bool"]]],[11,"ne","","",101,[[["modifierkey"],["self"]],["bool"]]],[11,"eq","","",100,[[["self"],["pluginflags"]],["bool"]]],[11,"ne","","",100,[[["self"],["pluginflags"]],["bool"]]],[11,"eq","","",99,[[["self"],["channelflags"]],["bool"]]],[11,"ne","","",99,[[["self"],["channelflags"]],["bool"]]],[11,"eq","","",103,[[["self"],["timeinfoflags"]],["bool"]]],[11,"ne","","",103,[[["self"],["timeinfoflags"]],["bool"]]],[11,"not","","Returns the complement of this set of flags.",102,[[],["midieventflags"]]],[11,"not","","Returns the complement of this set of flags.",103,[[],["timeinfoflags"]]],[11,"not","","Returns the complement of this set of flags.",101,[[],["modifierkey"]]],[11,"not","","Returns the complement of this set of flags.",100,[[],["pluginflags"]]],[11,"not","","Returns the complement of this set of flags.",99,[[],["channelflags"]]],[11,"index","rsynth::backend::vst_backend::vst::buffer","",108,[[["self"],["usize"]]]],[11,"index","","",106,[[["self"],["usize"]]]],[11,"bitand_assign","rsynth::backend::vst_backend::vst::api","Disables all flags disabled in the set.",101,[[["self"],["modifierkey"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",99,[[["self"],["channelflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",100,[[["self"],["pluginflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",103,[[["self"],["timeinfoflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",102,[[["self"],["midieventflags"]]]],[11,"automate","rsynth::backend::vst_backend::vst::plugin","",115,[[["f32"],["self"],["i32"]]]],[11,"get_plugin_id","","",115,[[["self"]],["i32"]]],[11,"idle","","",115,[[["self"]]]],[11,"get_info","","",115,[[["self"]]]],[11,"process_events","","Send events to the host.",115,[[["self"],["events"]]]],[11,"get_time_info","","Request time information from Host.",115,[[["self"],["i32"]],[["timeinfo"],["option",["timeinfo"]]]]],[11,"get_block_size","","Get block size.",115,[[["self"]],["isize"]]],[11,"hash","rsynth::backend::vst_backend::vst::api","",103,[[["self"],["__h"]]]],[11,"hash","","",100,[[["self"],["__h"]]]],[11,"hash","","",99,[[["self"],["__h"]]]],[11,"hash","","",102,[[["self"],["__h"]]]],[11,"hash","","",101,[[["self"],["__h"]]]],[11,"description","rsynth::backend::vst_backend::vst::host","",52,[[["self"]],["str"]]],[11,"bitxor","rsynth::backend::vst_backend::vst::api","Returns the left flags, but with all the right flags…",103,[[["timeinfoflags"]],["timeinfoflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",101,[[["modifierkey"]],["modifierkey"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",100,[[["pluginflags"]],["pluginflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",102,[[["midieventflags"]],["midieventflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",99,[[["channelflags"]],["channelflags"]]],[11,"partial_cmp","","",103,[[["self"],["timeinfoflags"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",103,[[["self"],["timeinfoflags"]],["bool"]]],[11,"le","","",103,[[["self"],["timeinfoflags"]],["bool"]]],[11,"gt","","",103,[[["self"],["timeinfoflags"]],["bool"]]],[11,"ge","","",103,[[["self"],["timeinfoflags"]],["bool"]]],[11,"partial_cmp","","",102,[[["midieventflags"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",102,[[["midieventflags"],["self"]],["bool"]]],[11,"le","","",102,[[["midieventflags"],["self"]],["bool"]]],[11,"gt","","",102,[[["midieventflags"],["self"]],["bool"]]],[11,"ge","","",102,[[["midieventflags"],["self"]],["bool"]]],[11,"partial_cmp","","",99,[[["self"],["channelflags"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",99,[[["self"],["channelflags"]],["bool"]]],[11,"le","","",99,[[["self"],["channelflags"]],["bool"]]],[11,"gt","","",99,[[["self"],["channelflags"]],["bool"]]],[11,"ge","","",99,[[["self"],["channelflags"]],["bool"]]],[11,"partial_cmp","","",100,[[["self"],["pluginflags"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",100,[[["self"],["pluginflags"]],["bool"]]],[11,"le","","",100,[[["self"],["pluginflags"]],["bool"]]],[11,"gt","","",100,[[["self"],["pluginflags"]],["bool"]]],[11,"ge","","",100,[[["self"],["pluginflags"]],["bool"]]],[11,"partial_cmp","","",101,[[["modifierkey"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",101,[[["modifierkey"],["self"]],["bool"]]],[11,"le","","",101,[[["modifierkey"],["self"]],["bool"]]],[11,"gt","","",101,[[["modifierkey"],["self"]],["bool"]]],[11,"ge","","",101,[[["modifierkey"],["self"]],["bool"]]],[11,"fmt","","",103,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",102,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",100,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"write_into","rsynth::backend::vst_backend::vst::event","",50,[[["sysexevent"],["self"]]]],[11,"write_into","","",48,[[["sysexevent"],["self"]]]],[11,"write_into","","",49,[[["sysexevent"],["self"]]]],[11,"get_info","rsynth::backend::vst_backend::vst::host","",113,[[["self"]],["info"]]],[11,"init","","",113,[[["self"]]]],[11,"set_sample_rate","","",113,[[["f32"],["self"]]]],[11,"set_block_size","","",113,[[["i64"],["self"]]]],[11,"resume","","",113,[[["self"]]]],[11,"suspend","","",113,[[["self"]]]],[11,"vendor_specific","","",113,[[["f32"],["i32"],["isize"],["self"]],["isize"]]],[11,"can_do","","",113,[[["cando"],["self"]],["supported"]]],[11,"get_tail_size","","",113,[[["self"]],["isize"]]],[11,"process","","",113,[[["self"],["audiobuffer"]]]],[11,"process_f64","","",113,[[["self"],["audiobuffer"]]]],[11,"process_events","","",113,[[["self"],["events"]]]],[11,"get_input_info","","",113,[[["self"],["i32"]],["channelinfo"]]],[11,"get_output_info","","",113,[[["self"],["i32"]],["channelinfo"]]],[11,"get_parameter_object","","",113,[[["self"]],[["arc",["pluginparameters"]],["pluginparameters"]]]],[11,"bitxor_assign","rsynth::backend::vst_backend::vst::api","Toggles the set of flags.",102,[[["self"],["midieventflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",101,[[["self"],["modifierkey"]]]],[11,"bitxor_assign","","Toggles the set of flags.",103,[[["self"],["timeinfoflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",100,[[["self"],["pluginflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",99,[[["self"],["channelflags"]]]],[11,"fmt","rsynth::backend::vst_backend::vst::plugin","",53,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",99,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",102,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rsynth::backend::vst_backend::vst::host","",52,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",46,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",103,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rsynth::backend::vst_backend::vst::plugin","",54,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",55,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",100,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",37,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",45,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"sub","rsynth::backend::vst_backend::vst::api","Returns the set difference of the two sets of flags.",102,[[["midieventflags"]],["midieventflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",101,[[["modifierkey"]],["modifierkey"]]],[11,"sub","","Returns the set difference of the two sets of flags.",100,[[["pluginflags"]],["pluginflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",103,[[["timeinfoflags"]],["timeinfoflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",99,[[["channelflags"]],["channelflags"]]],[11,"drop","rsynth::backend::vst_backend::vst::host","",113,[[["self"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"extend","rsynth::backend::vst_backend::vst::api","",99,[[["self"],["t"]]]],[11,"extend","","",100,[[["self"],["t"]]]],[11,"extend","","",101,[[["self"],["t"]]]],[11,"extend","","",102,[[["self"],["t"]]]],[11,"extend","","",103,[[["self"],["t"]]]],[11,"fmt","","",103,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",101,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",102,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",100,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",46,[[["self"]],["knobmode"]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",115,[[["self"]],["hostcallback"]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",36,[[["self"]],["timeinfo"]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",47,[[["self"]],["key"]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",101,[[["self"]],["modifierkey"]]],[11,"clone","","",103,[[["self"]],["timeinfoflags"]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",48,[[["self"]],["event"]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",54,[[["self"]],["info"]]],[11,"clone","rsynth::backend::vst_backend::vst::buffer","",106,[[["self"]],["inputs"]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",100,[[["self"]],["pluginflags"]]],[11,"clone","","",23,[[["self"]],["speakerarrangementtype"]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",49,[[["self"]],["midievent"]]],[11,"clone","","",50,[[["self"]],["sysexevent"]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",45,[[["self"]],["keycode"]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",35,[[["self"]],["sysexevent"]]],[11,"clone","","",99,[[["self"]],["channelflags"]]],[11,"clone","","",33,[[["self"]],["event"]]],[11,"clone","","",37,[[["self"]],["smpteframerate"]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",53,[[["self"]],["category"]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",102,[[["self"]],["midieventflags"]]],[11,"clone","","",32,[[["self"]],["eventtype"]]],[11,"bitor_assign","","Adds the set of flags.",103,[[["self"],["timeinfoflags"]]]],[11,"bitor_assign","","Adds the set of flags.",100,[[["self"],["pluginflags"]]]],[11,"bitor_assign","","Adds the set of flags.",102,[[["self"],["midieventflags"]]]],[11,"bitor_assign","","Adds the set of flags.",99,[[["self"],["channelflags"]]]],[11,"bitor_assign","","Adds the set of flags.",101,[[["self"],["modifierkey"]]]],[11,"cmp","","",101,[[["modifierkey"],["self"]],["ordering"]]],[11,"cmp","","",102,[[["midieventflags"],["self"]],["ordering"]]],[11,"cmp","","",99,[[["self"],["channelflags"]],["ordering"]]],[11,"cmp","","",100,[[["self"],["pluginflags"]],["ordering"]]],[11,"cmp","","",103,[[["self"],["timeinfoflags"]],["ordering"]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",53,[[["usize"]],["category"]]],[11,"from","","",53,[[["isize"]],["category"]]],[11,"from","","",53,[[["u16"]],["category"]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",46,[[["i64"]],["knobmode"]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",53,[[["i8"]],["category"]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",47,[[["u64"]],["key"]]],[11,"from","","",46,[[["u16"]],["knobmode"]]],[11,"from","","",47,[[["u32"]],["key"]]],[11,"from","","",46,[[["i8"]],["knobmode"]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",53,[[["u64"]],["category"]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",46,[[["i16"]],["knobmode"]]],[11,"from","","",46,[[["i32"]],["knobmode"]]],[11,"from","","",46,[[["u64"]],["knobmode"]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",53,[[["u8"]],["category"]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",47,[[["isize"]],["key"]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",53,[[["i16"]],["category"]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",43,[[["channelproperties"]],["speakerarrangementtype"]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",46,[[["isize"]],["knobmode"]]],[11,"from","rsynth::backend::vst_backend::vst::event","",48,[[["event"]],["event"]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",47,[[["u8"]],["key"]]],[11,"from","","",46,[[["u32"]],["knobmode"]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",53,[[["i32"]],["category"]]],[11,"from","","",53,[[["i64"]],["category"]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",46,[[["u8"]],["knobmode"]]],[11,"from","","",46,[[["usize"]],["knobmode"]]],[11,"from","","",47,[[["i8"]],["key"]]],[11,"from","","",47,[[["usize"]],["key"]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",53,[[["u32"]],["category"]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",47,[[["i16"]],["key"]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",111,[[["channelproperties"]],["channelinfo"]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",47,[[["i32"]],["key"]]],[11,"from","","",47,[[["i64"]],["key"]]],[11,"from","","",47,[[["u16"]],["key"]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",53,[[],["usize"]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",46,[[],["i64"]]],[11,"into","","",47,[[],["u64"]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",53,[[],["i8"]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",46,[[],["u32"]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",53,[[],["i64"]]],[11,"into","","",53,[[],["u16"]]],[11,"into","","",53,[[],["u64"]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",46,[[],["u16"]]],[11,"into","","",46,[[],["i8"]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",53,[[],["isize"]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",47,[[],["i64"]]],[11,"into","","",47,[[],["i16"]]],[11,"into","","",47,[[],["isize"]]],[11,"into","","",47,[[],["i32"]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",55,[[],["string"]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",47,[[],["usize"]]],[11,"into","","",46,[[],["i32"]]],[11,"into","","",46,[[],["i16"]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",53,[[],["u32"]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",47,[[],["i8"]]],[11,"into","rsynth::backend::vst_backend::vst::api","Convert to integer ordinal for interop with VST api.",24,[[],["isize"]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",53,[[],["i16"]]],[11,"into","","",53,[[],["u8"]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",46,[[],["u64"]]],[11,"into","","",47,[[],["u32"]]],[11,"into","rsynth::backend::vst_backend::vst::channels","Convert to VST API arrangement type.",43,[[],["speakerarrangementtype"]]],[11,"into","","Convert to the VST api equivalent of this structure.",111,[[],["channelproperties"]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",47,[[],["u16"]]],[11,"into","","",47,[[],["u8"]]],[11,"into","","",46,[[],["u8"]]],[11,"into","","",46,[[],["isize"]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",53,[[],["i32"]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",46,[[],["usize"]]],[11,"default","rsynth::backend::vst_backend::vst::api","",36,[[],["timeinfo"]]],[11,"default","rsynth::backend::vst_backend::vst::plugin","",115,[[],["hostcallback"]]],[11,"default","rsynth::backend::vst_backend::vst::api","",37,[[],["smpteframerate"]]],[11,"default","rsynth::backend::vst_backend::vst::channels","",43,[[],["speakerarrangementtype"]]],[11,"default","rsynth::backend::vst_backend::vst::buffer","",110,[[],["sendeventbuffer"]]],[11,"default","rsynth::backend::vst_backend::vst::plugin","",54,[[],["info"]]],[11,"default","rsynth::backend::vst_backend::vst::util","",117,[[],["parametertransfer"]]],[11,"number_of_channels","rsynth::backend::combined::dummy","",5,[[["self"]],["usize"]]],[11,"frames_per_second","","",5,[[["self"]],["u64"]]],[11,"fill_buffer","","",5,[[["self"],["audiobufferout"]],[["result",["usize"]],["usize"]]]],[11,"number_of_channels","rsynth::backend::combined::hound","",8,[[["self"]],["usize"]]],[11,"frames_per_second","","",8,[[["self"]],["u64"]]],[11,"fill_buffer","","",8,[[["self"],["audiobufferout"]],[["result",["usize"]],["usize"]]]],[11,"number_of_channels","rsynth::backend::combined::memory","",10,[[["self"]],["usize"]]],[11,"frames_per_second","","",10,[[["self"]],["u64"]]],[11,"fill_buffer","","",10,[[["self"],["audiobufferout"]],[["result",["usize"]],["usize"]]]],[11,"number_of_channels","rsynth::backend::combined","",16,[[["self"]],["usize"]]],[11,"frames_per_second","","",16,[[["self"]],["u64"]]],[11,"fill_buffer","","",16,[[["self"],["audiobufferout"]],[["result",["usize"]],["usize"]]]],[11,"write_buffer","rsynth::backend::combined::dummy","",5,[[["self"],["audiobufferin"]],["result"]]],[11,"write_buffer","rsynth::backend::combined::hound","",9,[[["self"],["audiobufferin"]],["result"]]],[11,"write_buffer","rsynth::backend::combined::memory","",11,[[["self"],["audiobufferin"]],["result"]]],[11,"write_buffer","rsynth::backend::combined","",17,[[["self"],["audiobufferin"]],["result"]]],[11,"write_event","rsynth::backend::combined::dummy","",6,[[["deltaevent",["rawmidievent"]],["self"],["rawmidievent"]]]],[11,"write_event","rsynth::backend::combined","",19,[[["deltaevent",["rawmidievent"]],["self"],["rawmidievent"]]]],[11,"output_initialized","rsynth::backend::jack_backend","",20,[[["self"]],["bool"]]],[11,"stop","","",20,[[["self"]]]],[11,"output_initialized","rsynth::backend::vst_backend::vst::plugin","",115,[[["self"]],["bool"]]],[11,"iter","rsynth::envelope::staircase_envelope","",120,[[["self"]]]],[11,"insert_event","","",120,[[["self"],["timed"]]]],[11,"forget_past","","",120,[[["self"],["u32"]]]],[11,"decide_on_collision","rsynth::event::event_queue","",121,[[["t"],["self"]],["eventcollisionhandling"]]],[11,"decide_on_collision","","",122,[[["t"],["self"]],["eventcollisionhandling"]]],[11,"decide_on_collision","","",123,[[["t"],["self"]],["eventcollisionhandling"]]],[11,"decide_on_collision","","",124,[[["t"],["self"]],["eventcollisionhandling"]]],[11,"handle_event","rsynth::backend::combined","",15,[[["self"],["timed",["rawmidievent"]],["rawmidievent"]]]],[11,"handle_event","rsynth::backend::jack_backend","",20,[[["self"],["indexed",["timed"]],["timed",["rawmidievent"]]]]],[11,"handle_event","","",20,[[["self"],["indexed",["timed"]],["timed",["sysexevent"]]]]],[11,"handle_event","rsynth::test_utilities","",127,[[["self"],["e"]]]],[11,"handle_event","","",79,[[["self"],["e"]]]],[11,"handle_event","","",127,[[["c"],["self"],["e"]]]],[11,"general","rsynth::meta","",73,[[["self"]],["g"]]],[11,"in_ports","","",73,[[["self"]]]],[11,"out_ports","","",73,[[["self"]]]],[11,"in_ports","","",73,[[["self"]]]],[11,"out_ports","","",73,[[["self"]]]],[11,"classify","rsynth::utilities::polyphony","",128,[[["self"],["event"]],["eventdispatchclass"]]],[11,"classify","rsynth::utilities::polyphony::simple_event_dispatching","",84,[[["self"],["event"]],["eventdispatchclass"]]],[11,"find_active_voice","","",84,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"find_idle_voice","","",84,[[["self"]],["usize"]]],[11,"max_number_of_audio_inputs","rsynth::test_utilities","",79,[[["self"]],["usize"]]],[11,"max_number_of_audio_outputs","","",79,[[["self"]],["usize"]]],[11,"set_sample_rate","","",79,[[["self"],["f64"]]]],[11,"render_buffer","","",79,[[["c"],["self"],["audiobufferinout"]]]],[11,"as_mut","rsynth::event","",72,[[["self"]],["rawmidievent"]]],[11,"as_mut","","",63,[[["self"]],["e"]]],[11,"as_mut","","",64,[[["self"]],["e"]]],[11,"as_ref","","",72,[[["self"]],["rawmidievent"]]],[11,"as_ref","","",63,[[["self"]],["e"]]],[11,"as_ref","","",64,[[["self"]],["e"]]],[11,"next","rsynth::buffer","",98,[[["self"]],["option"]]],[11,"next","rsynth::backend::combined::dummy","",6,[[["self"]],["option"]]],[11,"next","rsynth::backend::combined","",18,[[["self"]],[["deltaevent",["rawmidievent"]],["option",["deltaevent"]]]]],[11,"next","rsynth::envelope::staircase_envelope","",119,[[["self"]],["option"]]],[11,"clone","rsynth::buffer","",0,[[["self"]],["audiobufferin"]]],[11,"clone","","",3,[[["self"]],["audiochunk"]]],[11,"clone","rsynth::envelope","",61,[[["self"]],["envelopeiteratoritem"]]],[11,"clone","rsynth::event","",71,[[["self"]],["sysexevent"]]],[11,"clone","","",72,[[["self"]],["rawmidievent"]]],[11,"clone","","",63,[[["self"]],["self"]]],[11,"clone","","",64,[[["self"]],["self"]]],[11,"clone","","",65,[[["self"]],["deltaevent"]]],[11,"clone","rsynth::utilities::polyphony","",80,[[["self"]],["toneidentifier"]]],[11,"clone","","",82,[[["self"]],["voiceassignment"]]],[11,"clone","rsynth::utilities::polyphony::simple_event_dispatching","",83,[[["self"]],["simplevoicestate"]]],[11,"default","rsynth::utilities::polyphony","",128,[[],["rawmidieventtoneidentifierdispatchclassifier"]]],[11,"default","rsynth::utilities::polyphony::simple_event_dispatching","",84,[[],["self"]]],[11,"eq","rsynth::buffer","",3,[[["audiochunk"],["self"]],["bool"]]],[11,"ne","","",3,[[["audiochunk"],["self"]],["bool"]]],[11,"eq","rsynth::envelope","",61,[[["self"],["envelopeiteratoritem"]],["bool"]]],[11,"ne","","",61,[[["self"],["envelopeiteratoritem"]],["bool"]]],[11,"eq","rsynth::event","",71,[[["sysexevent"],["self"]],["bool"]]],[11,"ne","","",71,[[["sysexevent"],["self"]],["bool"]]],[11,"eq","","",72,[[["self"],["rawmidievent"]],["bool"]]],[11,"ne","","",72,[[["self"],["rawmidievent"]],["bool"]]],[11,"eq","","",63,[[["timed"],["self"]],["bool"]]],[11,"ne","","",63,[[["timed"],["self"]],["bool"]]],[11,"eq","","",64,[[["self"],["indexed"]],["bool"]]],[11,"ne","","",64,[[["self"],["indexed"]],["bool"]]],[11,"eq","","",65,[[["self"],["deltaevent"]],["bool"]]],[11,"ne","","",65,[[["self"],["deltaevent"]],["bool"]]],[11,"eq","rsynth::utilities::polyphony","",80,[[["self"],["toneidentifier"]],["bool"]]],[11,"ne","","",80,[[["self"],["toneidentifier"]],["bool"]]],[11,"eq","","",82,[[["self"],["voiceassignment"]],["bool"]]],[11,"ne","","",82,[[["self"],["voiceassignment"]],["bool"]]],[11,"eq","rsynth::utilities::polyphony::simple_event_dispatching","",83,[[["self"],["simplevoicestate"]],["bool"]]],[11,"ne","","",83,[[["self"],["simplevoicestate"]],["bool"]]],[11,"deref","rsynth::event::event_queue","",68,[[["self"]]]],[11,"fmt","rsynth::buffer","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","rsynth::backend::combined::hound","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","rsynth::backend::combined","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","rsynth::envelope","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","rsynth::event","",71,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",72,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","rsynth::utilities::polyphony","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","rsynth::backend::combined::hound","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","rsynth::backend::combined","",4,[[["formatter"],["self"]],["result"]]],[11,"index","rsynth::event::event_queue","",68,[[["self"],["usize"]]]],[11,"index_mut","","",68,[[["self"],["usize"]]]],[11,"source","rsynth::backend::combined::hound","",7,[[["self"]],[["error"],["option",["error"]]]]],[11,"source","rsynth::backend::combined","",4,[[["self"]],[["error"],["option",["error"]]]]],[11,"get_plugin","rsynth::backend::vst_backend::vst::api","Return handle to Plugin object. Only works for plugins…",21,[[["self"]],["box"]]],[11,"drop_plugin","","Drop the Plugin object. Only works for plugins created…",21,[[["self"]]]],[11,"from","","Create a `Supported` value from an integer if possible.",24,[[["isize"]],[["option",["supported"]],["supported"]]]],[11,"events","","Use this in your impl of process_events() to process the…",31,[[["self"]]]],[18,"ACTIVE","","Indicates channel is active. Ignored by host.",99,null],[18,"STEREO","","Indicates channel is first of stereo pair.",99,null],[18,"SPEAKER","","Use channel's specified speaker_arrangement instead of…",99,null],[11,"empty","","Returns an empty set of flags",99,[[],["channelflags"]]],[11,"all","","Returns the set containing all flags.",99,[[],["channelflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",99,[[["self"]],["i32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",99,[[["i32"]],[["channelflags"],["option",["channelflags"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",99,[[["i32"]],["channelflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",99,[[["i32"]],["channelflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",99,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",99,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",99,[[["self"],["channelflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",99,[[["self"],["channelflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",99,[[["self"],["channelflags"]]]],[11,"remove","","Removes the specified flags in-place.",99,[[["self"],["channelflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",99,[[["self"],["channelflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",99,[[["self"],["channelflags"],["bool"]]]],[18,"HAS_EDITOR","","Plugin has an editor.",100,null],[18,"CAN_REPLACING","","Plugin can process 32 bit audio. (Mandatory in VST 2.4).",100,null],[18,"PROGRAM_CHUNKS","","Plugin preset data is handled in formatless chunks.",100,null],[18,"IS_SYNTH","","Plugin is a synth.",100,null],[18,"NO_SOUND_IN_STOP","","Plugin does not produce sound when all input is silence.",100,null],[18,"CAN_DOUBLE_REPLACING","","Supports 64 bit audio processing.",100,null],[11,"empty","","Returns an empty set of flags",100,[[],["pluginflags"]]],[11,"all","","Returns the set containing all flags.",100,[[],["pluginflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",100,[[["self"]],["i32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",100,[[["i32"]],[["option",["pluginflags"]],["pluginflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",100,[[["i32"]],["pluginflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",100,[[["i32"]],["pluginflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",100,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",100,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",100,[[["self"],["pluginflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",100,[[["self"],["pluginflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",100,[[["self"],["pluginflags"]]]],[11,"remove","","Removes the specified flags in-place.",100,[[["self"],["pluginflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",100,[[["self"],["pluginflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",100,[[["self"],["pluginflags"],["bool"]]]],[18,"SHIFT","","Shift key.",101,null],[18,"ALT","","Alt key.",101,null],[18,"COMMAND","","Control on mac.",101,null],[18,"CONTROL","","Command on mac, ctrl on other.",101,null],[11,"empty","","Returns an empty set of flags",101,[[],["modifierkey"]]],[11,"all","","Returns the set containing all flags.",101,[[],["modifierkey"]]],[11,"bits","","Returns the raw value of the flags currently stored.",101,[[["self"]],["u8"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",101,[[["u8"]],[["option",["modifierkey"]],["modifierkey"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",101,[[["u8"]],["modifierkey"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",101,[[["u8"]],["modifierkey"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",101,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",101,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",101,[[["self"],["modifierkey"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",101,[[["self"],["modifierkey"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",101,[[["self"],["modifierkey"]]]],[11,"remove","","Removes the specified flags in-place.",101,[[["self"],["modifierkey"]]]],[11,"toggle","","Toggles the specified flags in-place.",101,[[["self"],["modifierkey"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",101,[[["self"],["modifierkey"],["bool"]]]],[18,"REALTIME_EVENT","","This event is played live (not in playback from a…",102,null],[11,"empty","","Returns an empty set of flags",102,[[],["midieventflags"]]],[11,"all","","Returns the set containing all flags.",102,[[],["midieventflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",102,[[["self"]],["i32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",102,[[["i32"]],[["option",["midieventflags"]],["midieventflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",102,[[["i32"]],["midieventflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",102,[[["i32"]],["midieventflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",102,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",102,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",102,[[["self"],["midieventflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",102,[[["self"],["midieventflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",102,[[["self"],["midieventflags"]]]],[11,"remove","","Removes the specified flags in-place.",102,[[["self"],["midieventflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",102,[[["self"],["midieventflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",102,[[["bool"],["self"],["midieventflags"]]]],[18,"TRANSPORT_CHANGED","","Indicates that play, cycle or record state has changed.",103,null],[18,"TRANSPORT_PLAYING","","Set if Host sequencer is currently playing.",103,null],[18,"TRANSPORT_CYCLE_ACTIVE","","Set if Host sequencer is in cycle mode.",103,null],[18,"TRANSPORT_RECORDING","","Set if Host sequencer is in record mode.",103,null],[18,"AUTOMATION_WRITING","","Set if automation write mode active (record parameter…",103,null],[18,"AUTOMATION_READING","","Set if automation read mode active (play parameter changes).",103,null],[18,"NANOSECONDS_VALID","","Set if TimeInfo::nanoseconds is valid.",103,null],[18,"PPQ_POS_VALID","","Set if TimeInfo::ppq_pos is valid.",103,null],[18,"TEMPO_VALID","","Set if TimeInfo::tempo is valid.",103,null],[18,"BARS_VALID","","Set if TimeInfo::bar_start_pos is valid.",103,null],[18,"CYCLE_POS_VALID","","Set if both TimeInfo::cycle_start_pos and…",103,null],[18,"TIME_SIG_VALID","","Set if both TimeInfo::time_sig_numerator and…",103,null],[18,"SMPTE_VALID","","Set if both TimeInfo::smpte_offset and…",103,null],[18,"VST_CLOCK_VALID","","Set if TimeInfo::samples_to_next_clock is valid.",103,null],[11,"empty","","Returns an empty set of flags",103,[[],["timeinfoflags"]]],[11,"all","","Returns the set containing all flags.",103,[[],["timeinfoflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",103,[[["self"]],["i32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",103,[[["i32"]],[["option",["timeinfoflags"]],["timeinfoflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",103,[[["i32"]],["timeinfoflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",103,[[["i32"]],["timeinfoflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",103,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",103,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",103,[[["self"],["timeinfoflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",103,[[["self"],["timeinfoflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",103,[[["self"],["timeinfoflags"]]]],[11,"remove","","Removes the specified flags in-place.",103,[[["self"],["timeinfoflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",103,[[["self"],["timeinfoflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",103,[[["self"],["timeinfoflags"],["bool"]]]],[11,"from_raw","rsynth::backend::vst_backend::vst::buffer","Create an `AudioBuffer` from raw pointers. Only really…",104,[[["usize"]],["audiobuffer"]]],[11,"input_count","","The number of input channels that this buffer was created…",104,[[["self"]],["usize"]]],[11,"output_count","","The number of output channels that this buffer was created…",104,[[["self"]],["usize"]]],[11,"samples","","The number of samples in this buffer (same for all channels)",104,[[["self"]],["usize"]]],[11,"split","","Split this buffer into separate inputs and outputs.",104,[[["self"]]]],[11,"zip","","Create an iterator over pairs of input buffers and output…",104,[[["self"]],["audiobufferiterator"]]],[11,"len","","Number of channels",106,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the buffer is empty",106,[[["self"]],["bool"]]],[11,"get","","Access channel at the given index",106,[[["self"],["usize"]]]],[11,"split_at","","Split borrowing at the given index, like for slices",106,[[["self"],["usize"]]]],[11,"len","","Number of channels",108,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the buffer is empty",108,[[["self"]],["bool"]]],[11,"get","","Access channel at the given index",108,[[["self"],["usize"]]]],[11,"get_mut","","Mutably access channel at the given index",108,[[["self"],["usize"]]]],[11,"split_at_mut","","Split borrowing at the given index, like for slices",108,[[["usize"]]]],[11,"new","","Creates a buffer for sending up to the given number of…",110,[[["usize"]],["sendeventbuffer"]]],[11,"send_events","","Sends events to the host. See the `fwd_midi` example.",110,[[["self"],["t"],["host"]]]],[11,"send_events_to_plugin","","Sends events from the host to a plugin.",110,[[["self"],["t"],["plugin"]]]],[11,"new","rsynth::backend::vst_backend::vst::channels","Construct a new `ChannelInfo` object.",111,[[["option",["string"]],["string"],["option",["speakerarrangementtype"]],["speakerarrangementtype"],["bool"]],["channelinfo"]]],[11,"is_speaker_type","","Determine whether this channel is part of a surround…",43,[[["self"]],["bool"]]],[11,"is_left_stereo","","Determine whether this channel is the left speaker in a…",43,[[["self"]],["bool"]]],[11,"load","rsynth::backend::vst_backend::vst::host","Load a plugin at the given path with the given host.",112,[[["path"],["mutex"],["arc",["mutex"]]],[["pluginloader"],["pluginloaderror"],["result",["pluginloader","pluginloaderror"]]]]],[11,"instance","","Try to create an instance of this VST plugin.",112,[[["self"]],[["plugininstance"],["pluginloaderror"],["result",["plugininstance","pluginloaderror"]]]]],[11,"new","","Create a `HostBuffer` for a given number of input and…",114,[[["usize"]],["hostbuffer"]]],[11,"from_info","","Create a `HostBuffer` for the number of input and output…",114,[[["info"]],["hostbuffer"]]],[11,"bind","","Bind sample arrays to the `HostBuffer` to create an…",114,[[["self"]],["audiobuffer"]]],[11,"input_count","","Number of input channels supported by this `HostBuffer`.",114,[[["self"]],["usize"]]],[11,"output_count","","Number of output channels supported by this `HostBuffer`.",114,[[["self"]],["usize"]]],[11,"from_str","rsynth::backend::vst_backend::vst::plugin","Converts a string to a `CanDo` instance. Any given string…",55,[[["str"]],["cando"]]],[11,"vst_version","","Get the VST API version supported by the host e.g. `2400 =…",115,[[["self"]],["i32"]]],[11,"raw_callback","","Get the callback for calling host-specific extensions",115,[[["self"]],["option"]]],[11,"raw_effect","","Get the effect pointer for calling host-specific extensions",115,[[["self"]]]],[11,"new","rsynth::backend::vst_backend::vst::util","New atomic float with initial value `value`.",116,[[["f32"]],["atomicfloat"]]],[11,"get","","Get the current value of the atomic float.",116,[[["self"]],["f32"]]],[11,"set","","Set the value of the atomic float to `value`.",116,[[["f32"],["self"]]]],[11,"new","","Create a new parameter set with `parameter_count`…",117,[[["usize"]],["parametertransfer"]]],[11,"set_parameter","","Set the value of the parameter with index `index` to…",117,[[["f32"],["self"],["usize"]]]],[11,"get_parameter","","Get the current value of the parameter with index `index`.",117,[[["self"],["usize"]],["f32"]]],[11,"iterate","","Iterate over all parameters marked as changed. If…",117,[[["self"],["bool"]],["parametertransferiterator"]]]],"p":[[3,"AudioBufferIn"],[3,"AudioBufferOut"],[3,"AudioBufferInOut"],[3,"AudioChunk"],[4,"CombinedError"],[3,"AudioDummy"],[3,"MidiDummy"],[4,"HoundAudioError"],[3,"HoundAudioReader"],[3,"HoundAudioWriter"],[3,"AudioBufferReader"],[3,"AudioBufferWriter"],[8,"AudioReader"],[8,"AudioWriter"],[8,"MidiWriter"],[3,"MidiWriterWrapper"],[3,"TestAudioReader"],[3,"TestAudioWriter"],[3,"TestMidiReader"],[3,"TestMidiWriter"],[3,"JackHost"],[3,"AEffect"],[3,"ChannelProperties"],[4,"SpeakerArrangementType"],[4,"Supported"],[4,"ProcessLevel"],[4,"HostLanguage"],[4,"FileSelectCommand"],[4,"FileSelectType"],[3,"FileType"],[3,"FileSelect"],[3,"Events"],[4,"EventType"],[3,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[3,"TimeInfo"],[4,"SmpteFrameRate"],[8,"WriteIntoPlaceholder"],[4,"ArrangementTarget"],[4,"StereoChannel"],[4,"StereoConfig"],[4,"SurroundConfig"],[4,"SpeakerArrangementType"],[8,"Editor"],[3,"KeyCode"],[4,"KnobMode"],[4,"Key"],[4,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[8,"Host"],[4,"PluginLoadError"],[4,"Category"],[3,"Info"],[4,"CanDo"],[8,"Plugin"],[8,"PluginParameters"],[8,"VstPluginMeta"],[3,"VstPluginWrapper"],[8,"HostInterface"],[3,"EnvelopeIteratorItem"],[8,"Envelope"],[3,"Timed"],[3,"Indexed"],[3,"DeltaEvent"],[4,"EventCollisionHandling"],[8,"HandleEventCollision"],[3,"EventQueue"],[8,"EventHandler"],[8,"ContextualEventHandler"],[3,"SysExEvent"],[3,"RawMidiEvent"],[3,"MetaData"],[3,"InOut"],[8,"Meta"],[8,"General"],[8,"Name"],[8,"Port"],[3,"TestPlugin"],[3,"ToneIdentifier"],[4,"EventDispatchClass"],[4,"VoiceAssignment"],[4,"SimpleVoiceState"],[3,"SimpleEventDispatcher"],[8,"EventDispatchClassifier"],[8,"Voice"],[8,"VoiceAssigner"],[8,"EventDispatcher"],[8,"ContextualEventDispatcher"],[8,"AudioHandlerMeta"],[8,"AudioHandler"],[8,"MidiHandlerMeta"],[8,"AudioRenderer"],[8,"ContextualAudioRenderer"],[8,"CommonPluginMeta"],[8,"CommonAudioPortMeta"],[8,"CommonMidiPortMeta"],[3,"AudioBufferOutChannelIteratorMut"],[3,"ChannelFlags"],[3,"PluginFlags"],[3,"ModifierKey"],[3,"MidiEventFlags"],[3,"TimeInfoFlags"],[3,"AudioBuffer"],[3,"AudioBufferIterator"],[3,"Inputs"],[3,"InputIterator"],[3,"Outputs"],[3,"OutputIterator"],[3,"SendEventBuffer"],[3,"ChannelInfo"],[3,"PluginLoader"],[3,"PluginInstance"],[3,"HostBuffer"],[3,"HostCallback"],[3,"AtomicFloat"],[3,"ParameterTransfer"],[3,"ParameterTransferIterator"],[3,"StairCaseEnvelopeIterator"],[3,"StairCaseEnvelope"],[3,"AlwaysInsertNewBeforeOld"],[3,"AlwaysInsertNewAfterOld"],[3,"AlwaysIgnoreNew"],[3,"AlwaysRemoveOld"],[3,"AudioPort"],[3,"MidiPort"],[3,"DummyEventHandler"],[3,"RawMidiEventToneIdentifierDispatchClassifier"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);