var searchIndex = JSON.parse('{\
"rsynth":{"doc":"RsynthAn API abstraction for API\'s for audio plugins and …","i":[[0,"buffer","rsynth","Audio buffers.",null,null],[3,"AudioBufferIn","rsynth::buffer","Audio input buffer.",null,null],[11,"new","","Create a new audio input buffer.",0,[[["usize",15]]]],[11,"number_of_channels","","Get the number of channels.",0,[[],["usize",15]]],[11,"number_of_frames","","Get the number of frames.",0,[[],["usize",15]]],[11,"channels","","Get the channels as slices.",0,[[]]],[11,"index_frames","","Get an <code>AudioBufferIn</code> with all channels and the given …",0,[[["vec",3]],["audiobufferin",3]]],[11,"get_channel","","Get the channel with the given index.",0,[[["usize",15]],["option",4]]],[11,"index_channel","","Get the channel with the given index.",0,[[["usize",15]]]],[3,"AudioBufferOut","","An audio output buffer.",null,null],[11,"new","","Create a new audio output buffer.",1,[[["usize",15]]]],[11,"number_of_channels","","Get the number of channels.",1,[[],["usize",15]]],[11,"number_of_frames","","Get the number of frames.",1,[[],["usize",15]]],[11,"channels","","Get the channels as slices.",1,[[]]],[11,"split_channels_at","","Split into two <code>AudioBufferOut</code>s. The first will contain …",1,[[["usize",15]]]],[11,"index_frames","","Get an <code>AdioBufferOut</code> with all channels and the given …",1,[[["vec",3]],["audiobufferout",3]]],[11,"get_channel","","Get the channel with the given index.",1,[[["usize",15]],["option",4]]],[11,"index_channel","","Get the channel with the given index.",1,[[["usize",15]]]],[11,"set","","Set all samples to the given value.",1,[[]]],[11,"channel_iter_mut","","Get an iterator over the channels.",1,[[],["audiobufferoutchanneliteratormut",3]]],[11,"as_audio_buffer_in","","Convert to an <code>AudioBufferIn</code>.",1,[[["vec",3]],["audiobufferin",3]]],[3,"AudioBufferOutChannelIteratorMut","","An iterator over the channels of an <code>AudioBufferOut</code>.",null,null],[3,"AudioBufferInOut","","A buffer holding both input and output audio.",null,null],[11,"new","","Create a new <code>AudioBufferInOut</code>.",2,[[["usize",15]]]],[11,"number_of_frames","","Get the number of frames.",2,[[],["usize",15]]],[11,"number_of_input_channels","","Get the number of input channels.",2,[[],["usize",15]]],[11,"number_of_output_channels","","Get the number of output channels.",2,[[],["usize",15]]],[11,"split_output_channels_at","","Create two new <code>AUdioBufferInOut</code>s: one with all the input …",2,[[["usize",15]]]],[11,"get_input_channel","","Get the input channel with the given index.",2,[[["usize",15]],["option",4]]],[11,"index_input_channel","","Get the output channel with the given index.",2,[[["usize",15]]]],[11,"get_output_channel","","Get the output channel with the given index.",2,[[["usize",15]],["option",4]]],[11,"index_output_channel","","Get the output channel with the given index.",2,[[["usize",15]]]],[11,"index_frames","","Get an <code>AudioBufferInOut</code> with all channels and with the …",2,[[["vec",3],["vec",3]],["audiobufferinout",3]]],[11,"separate","","Separate the input channels from the output channels.",2,[[]]],[11,"inputs","","Get the input channels as an <code>AudioBufferIn</code>.",2,[[],["audiobufferin",3]]],[11,"outputs","","Get the output channels as an <code>AudioBufferOut</code>.",2,[[],["audiobufferout",3]]],[11,"interleave","","NoteIf the iterator yields items for which the time is > …",2,[[["vecstorage",3],["vecstorage",3]]]],[3,"AudioChunk","","A buffer representing a fixed amount of samples for a …",null,null],[3,"InterlacedSampleIterator","","An iterator over the samples of an <code>AudioChunk</code>, operating …",null,null],[11,"new","","Create a new <code>AudioChunk</code>.",3,[[["usize",15]]]],[11,"zero","","Note: cannot be used in a real-time contextThis method …",3,[[["usize",15]]]],[11,"from_channels","","",3,[[["vec",3],["vec",3]]]],[11,"from_interlaced_iterator","","PanicsPanics if <code>number_of_channels == 0</code>. Panics if the …",3,[[["usize",15]]]],[11,"interlaced","","Create an interlaced iterator from an <code>AudioChunk</code>",3,[[],["interlacedsampleiterator",3]]],[11,"with_capacity","","Create a new <code>AudioChunk</code> in which each channel has the …",3,[[["usize",15]]]],[11,"channels","","",3,[[],["vec",3]]],[11,"number_of_channels","","Return the number of channels.",3,[[],["usize",15]]],[11,"append_sliced_chunk","","Note about using in a real-time contextThis method will …",3,[[]]],[11,"inner","","",3,[[],[["vec",3],["vec",3]]]],[11,"as_slices","","Note: cannot be used in a real-time contextThis method …",3,[[],["vec",3]]],[11,"as_mut_slices","","Note: cannot be used in a real-time contextThis method …",3,[[],["vec",3]]],[11,"split","","Note: cannot be used in a real-time contextThis method …",3,[[["usize",15]],["vec",3]]],[5,"buffers_as_slice","","",null,[[["usize",15]],["vec",3]]],[5,"buffers_as_mut_slice","","",null,[[["usize",15]],["vec",3]]],[0,"backend","rsynth","Backends.",null,null],[0,"combined","rsynth::backend","Combine different back-ends for audio input, audio output …",null,null],[0,"dummy","rsynth::backend::combined","Dummy backend that does nothing, useful for testing.",null,null],[3,"AudioDummy","rsynth::backend::combined::dummy","Dummy backend that does nothing, useful for testing and …",null,null],[11,"with_sample_rate_and_length","","Create a new <code>AudioDummy</code> with the given sample rate, in …",4,[[["u32",15],["usize",15]]]],[11,"new","","Create a new <code>AudioDummy</code> with the \\\"default\\\" sample rate of …",4,[[]]],[3,"MidiDummy","","",null,null],[11,"new","","",5,[[]]],[0,"hound","rsynth::backend::combined","Backend for reading and writing <code>.wav</code> files, based on the …",null,null],[3,"HoundAudioReader","rsynth::backend::combined::hound","",null,null],[4,"HoundAudioError","","",null,null],[13,"UnsupportedAudioFormat","","",6,null],[11,"new","","",7,[[["wavreader",3]],[["result",4],["houndaudioerror",4]]]],[3,"HoundAudioWriter","","",null,null],[11,"new","","",8,[[["wavwriter",3]],[["result",4],["houndaudioerror",4]]]],[0,"memory","rsynth::backend::combined","In-memory backend, useful for testing.",null,null],[3,"AudioChunkReader","rsynth::backend::combined::memory","An [<code>AudioReader</code>] that reads from a given [<code>AudioChunk</code>]. …",null,null],[11,"new","","Construct a new <code>AudioChunkReader</code> with the given <code>AudioChunk</code>…",9,[[["u64",15]]]],[6,"AudioBufferReader","","An <code>AudioReader</code> that reads from a given <code>AudioChunk</code>. The …",null,null],[3,"AudioBufferWriter","","An <code>AudioWriter</code> that appends to a given <code>AudioChunk</code>. The …",null,null],[11,"new","","",10,[[["audiochunk",3]]]],[0,"midly","rsynth::backend::combined","Read midi files.",null,null],[0,"midly","rsynth::backend::combined::midly","Re-exports from the <code>midly</code> crate.",null,null],[0,"io","rsynth::backend::combined::midly::midly","Provides abstractions over writers, even in <code>no_std</code> …",null,null],[6,"WriteResult","rsynth::backend::combined::midly::midly::io","Either <code>Ok(())</code> or the error specific to the <code>W</code> writer.",null,null],[8,"Write","","A <code>Write</code> trait available even in <code>no_std</code> environments, and …",null,null],[16,"Error","","The error type specific to the writer.",11,null],[16,"Seekable","","<code>Self</code> when the type is seekable, and <code>NotSeekable<Self></code> …",11,null],[10,"write","","Write a slice of data to the writer.",11,[[],["result",4]]],[10,"invalid_input","","Create an \\\"invalid input\\\"-style error from a string …",11,[[["str",15]]]],[11,"make_seekable","","Make this writer seekable, if possible.",11,[[],["option",4]]],[8,"Seek","","A <code>Seek</code> trait available even in <code>no_std</code> environments.",null,null],[10,"tell","","Where is the writer currently at.",12,[[],[["u64",15],["result",4]]]],[10,"write_at","","Write a slice of data at the given absolute position, and …",12,[[["u64",15]],["result",4]]],[3,"NotSeekable","","The type used for the <code>Seekable</code> associated type on …",null,null],[3,"Cursor","","A seekable writer over an in-memory buffer.",null,null],[4,"CursorError","","The errors that can arise when writing to an in-memory …",null,null],[13,"OutOfSpace","","The in-memory buffer was too small.",13,null],[13,"InvalidInput","","The input SMF was invalid.",13,null],[3,"IoWrap","","Bridge between a <code>midly::io::Write</code> type and a …",null,null],[12,"0","","",14,null],[3,"SeekableWrap","","Bridge between a <code>midly::io::{Write, Seek}</code> type and a …",null,null],[12,"0","","",15,null],[0,"live","rsynth::backend::combined::midly::midly","Provides utilities to read and write \\\"live\\\" MIDI messages …",null,null],[4,"LiveEvent","rsynth::backend::combined::midly::midly::live","A live event produced by an OS API or generated …",null,null],[13,"Midi","","A MIDI message associated with a channel, carrying …",16,null],[12,"channel","rsynth::backend::combined::midly::midly::live::LiveEvent","",17,null],[12,"message","","",17,null],[13,"Common","rsynth::backend::combined::midly::midly::live","A System Common message, as defined by the MIDI spec, …",16,null],[13,"Realtime","","A one-byte System Realtime message.",16,null],[4,"SystemCommon","","A \\\"system common event\\\", as defined by the MIDI spec.",null,null],[13,"SysEx","","A system-exclusive event.",18,null],[13,"MidiTimeCodeQuarterFrame","","A MIDI Time Code Quarter Frame message, carrying a tag …",18,null],[13,"SongPosition","","The number of MIDI beats (6 x MIDI clocks) that have …",18,null],[13,"SongSelect","","Select a given song index.",18,null],[13,"TuneRequest","","",18,null],[13,"Undefined","","An undefined System Common message, with arbitrary data …",18,null],[4,"MtcQuarterFrameMessage","","The different kinds of info a Midi Time Code Quarter …",null,null],[13,"FramesLow","","The low nibble of the frame count.",19,null],[13,"FramesHigh","","The high nibble of the frame count.",19,null],[13,"SecondsLow","","The low nibble of the second count.",19,null],[13,"SecondsHigh","","The high nibble of the second count.",19,null],[13,"MinutesLow","","The low nibble of the minute count.",19,null],[13,"MinutesHigh","","The high nibble of the minute count.",19,null],[13,"HoursLow","","The low nibble of the hour count.",19,null],[13,"HoursHigh","","The high nibble of the hour count.",19,null],[4,"SystemRealtime","","System Realtime messages are one-byte messages that only …",null,null],[13,"TimingClock","","If sent, they should be sent 24 times per quarter note.",20,null],[13,"Start","","",20,null],[13,"Continue","","",20,null],[13,"Stop","","",20,null],[13,"ActiveSensing","","Once one of these messages is transmitted, a message …",20,null],[13,"Reset","","",20,null],[13,"Undefined","","An unknown system realtime message, with the given id …",20,null],[0,"stream","rsynth::backend::combined::midly::midly","Provides support for the niche use case of reading MIDI …",null,null],[3,"MidiStream","rsynth::backend::combined::midly::midly::stream","A streaming raw MIDI parser. This parser takes raw MIDI, <em>…",null,null],[8,"Buffer","","Describes types that can be used as data buffers for the …",null,null],[10,"push","","",21,[[],["result",4]]],[10,"clear","","",21,[[]]],[10,"as_slice","","",21,[[]]],[3,"DefaultBuffer","","The default buffer type used for <code>MidiStream</code>. By default …",null,null],[0,"num","rsynth::backend::combined::midly::midly","Exotically-sized integers used by the MIDI standard.",null,null],[3,"u14","rsynth::backend::combined::midly::midly::num","",null,null],[3,"u15","","",null,null],[3,"u24","","",null,null],[3,"u28","","Referred to in the MIDI spec as \\\"variable length int\\\".",null,null],[3,"u4","","",null,null],[3,"u7","","",null,null],[14,"stack_buffer","rsynth::backend::combined::midly::midly","Define a stack buffer type, suitable for use with …",null,null],[5,"write_std","","Similar to <code>write</code>, but writes to a <code>std::io::Write</code> writer …",null,[[["header",3]],[["result",4],["error",3]]]],[3,"Arena","","Helps overcome limitations of the lifetime system when …",null,null],[6,"BytemappedTrack","","A track, represented as a <code>Vec</code> of events along with their …",null,null],[3,"Smf","","Represents a single <code>.mid</code> Standard Midi File. If you\'re …",null,null],[12,"header","","The header of this MIDI file, indicating tempo …",22,null],[12,"tracks","","A list of tracks within this MIDI file.",22,null],[3,"SmfBytemap","","A <code>.mid</code> Standard Midi File, but keeps a mapping to the raw …",null,null],[12,"header","","The header of this file.",23,null],[12,"tracks","","A list of tracks, along with the bytemap of their events.",23,null],[6,"Track","","A single track: simply a list of track events.",null,null],[3,"Error","","Represents an error while parsing an SMF file or MIDI …",null,null],[4,"ErrorKind","","The type of error that occurred while parsing.",null,null],[13,"Invalid","","Fatal errors while reading the file. It is likely that …",24,null],[13,"Malformed","","Non-fatal error, but the file is clearly corrupted.",24,null],[6,"Result","","The result type used by the MIDI parser.",null,null],[4,"MetaMessage","","A \\\"meta message\\\", as defined by the SMF spec. These …",null,null],[13,"TrackNumber","","For <code>Format::Sequential</code> MIDI file types, <code>TrackNumber</code> can …",25,null],[13,"Text","","",25,null],[13,"Copyright","","",25,null],[13,"TrackName","","",25,null],[13,"InstrumentName","","",25,null],[13,"Lyric","","",25,null],[13,"Marker","","",25,null],[13,"CuePoint","","",25,null],[13,"ProgramName","","",25,null],[13,"DeviceName","","",25,null],[13,"MidiChannel","","",25,null],[13,"MidiPort","","",25,null],[13,"EndOfTrack","","Obligatory at track end.",25,null],[13,"Tempo","","Amount of microseconds per beat (quarter note).",25,null],[13,"SmpteOffset","","",25,null],[13,"TimeSignature","","In order of the MIDI specification, numerator, …",25,null],[13,"KeySignature","","As in the MIDI specification, negative numbers indicate …",25,null],[13,"SequencerSpecific","","",25,null],[13,"Unknown","","An unknown or malformed meta-message.",25,null],[4,"MidiMessage","","Represents a MIDI message, usually associated to a MIDI …",null,null],[13,"NoteOff","","Stop playing a note.",26,null],[12,"key","rsynth::backend::combined::midly::midly::MidiMessage","The MIDI key to stop playing.",27,null],[12,"vel","","The velocity with which to stop playing it.",27,null],[13,"NoteOn","rsynth::backend::combined::midly::midly","Start playing a note.",26,null],[12,"key","rsynth::backend::combined::midly::midly::MidiMessage","The key to start playing.",28,null],[12,"vel","","The velocity (strength) with which to press it.",28,null],[13,"Aftertouch","rsynth::backend::combined::midly::midly","Modify the velocity of a note after it has been played.",26,null],[12,"key","rsynth::backend::combined::midly::midly::MidiMessage","The key for which to modify its velocity.",29,null],[12,"vel","","The new velocity for the key.",29,null],[13,"Controller","rsynth::backend::combined::midly::midly","Modify the value of a MIDI controller.",26,null],[12,"controller","rsynth::backend::combined::midly::midly::MidiMessage","The controller to modify.",30,null],[12,"value","","The value to set it to.",30,null],[13,"ProgramChange","rsynth::backend::combined::midly::midly","Change the program (also known as instrument) for a …",26,null],[12,"program","rsynth::backend::combined::midly::midly::MidiMessage","The new program (instrument) to use for the channel.",31,null],[13,"ChannelAftertouch","rsynth::backend::combined::midly::midly","Change the note velocity of a whole channel at once, …",26,null],[12,"vel","rsynth::backend::combined::midly::midly::MidiMessage","The new velocity for all notes currently playing in the …",32,null],[13,"PitchBend","rsynth::backend::combined::midly::midly","Set the pitch bend value for the entire channel.",26,null],[12,"bend","rsynth::backend::combined::midly::midly::MidiMessage","The new pitch-bend value.",33,null],[3,"PitchBend","rsynth::backend::combined::midly::midly","The value of a pitch bend, represented as 14 bits.",null,null],[12,"0","","",34,null],[3,"TrackEvent","","Represents a parsed SMF track event.",null,null],[12,"delta","","How many MIDI ticks after the previous event should this …",35,null],[12,"kind","","The type of event along with event-specific data.",35,null],[4,"TrackEventKind","","Represents the different kinds of SMF events and their …",null,null],[13,"Midi","","A message associated to a MIDI channel carrying musical …",36,null],[12,"channel","rsynth::backend::combined::midly::midly::TrackEventKind","",37,null],[12,"message","","",37,null],[13,"SysEx","rsynth::backend::combined::midly::midly","A System Exclusive message, carrying arbitrary data.",36,null],[13,"Escape","","An escape sequence, intended to send arbitrary data to …",36,null],[13,"Meta","","A meta-message, giving extra information for correct …",36,null],[4,"Format","","The order in which tracks should be laid out when playing …",null,null],[13,"SingleTrack","","This file should have a single track only.",38,null],[13,"Parallel","","This file has several tracks that should be played …",38,null],[13,"Sequential","","This file has several tracks, each one a separate song.",38,null],[4,"Fps","","One of the four FPS values available for SMPTE times, as …",null,null],[13,"Fps24","","24 frames per second.",39,null],[13,"Fps25","","25 frames per second.",39,null],[13,"Fps29","","Actually <code>29.97 = 30 / 1.001</code> frames per second.",39,null],[13,"Fps30","","30 frames per second.",39,null],[3,"SmpteTime","","Encodes an SMPTE time of the day.",null,null],[4,"Timing","","The timing for an SMF file. This can be in ticks/beat or …",null,null],[13,"Metrical","","Specifies ticks/beat as a 15-bit integer.",40,null],[13,"Timecode","","Specifies ticks/second by dividing a second into frames …",40,null],[5,"parse","","Parse a raw MIDI file lazily, yielding its header and a …",null,[[],[["result",4],["error",3]]]],[5,"write","","Encode and write a generic MIDI file into the given …",null,[[["header",3]],["result",4]]],[3,"EventBytemapIter","","An iterator over the events of a single track that keeps …",null,null],[3,"EventIter","","An iterator over the events of a single track. Yielded by …",null,null],[3,"Header","","A MIDI file header, indicating metadata about the file.",null,null],[12,"format","","Information about how should the tracks be laid out when …",41,null],[12,"timing","","Tempo information about the file.",41,null],[3,"TrackIter","","An iterator over all <em>tracks</em> in a Standard Midi File. …",null,null],[3,"MidlyMidiReader","rsynth::backend::combined::midly","Read from midi events as parsed by the <code>midly</code> crate.",null,null],[11,"new","","Create a new <code>MidlyMidiReader</code> that will read all tracks …",42,[[["smf",3]],["result",4]]],[11,"new_with_track_mask","","Create a new <code>MidlyMidiReader</code> that will read only the …",42,[[["smf",3]],["result",4]]],[8,"AudioReader","rsynth::backend::combined","Define how audio is read.",null,null],[16,"Err","","The type of the error that occurs when reading data.",43,null],[10,"number_of_channels","","The number of audio channels that can be read.",43,[[],["usize",15]]],[10,"frames_per_second","","The sampling frequency in frames per second.",43,[[],["u64",15]]],[10,"fill_buffer","","Fill the buffers. Return the number of frames that have …",43,[[["audiobufferout",3]],[["usize",15],["result",4]]]],[8,"AudioWriter","","Define how audio is written.",null,null],[16,"Err","","The type of the error that occurs when reading data.",44,null],[10,"write_buffer","","Write to the specified audio buffer.",44,[[["audiobufferin",3]],["result",4]]],[11,"specifies_number_of_channels","","Return <code>true</code> if this <code>AudioWriter</code> is responsible for …",44,[[],["bool",15]]],[11,"number_of_channels","","Return the number of channels. This method is only called …",44,[[],["usize",15]]],[17,"MICROSECONDS_PER_SECOND","","",null,null],[8,"MidiWriter","","Define how midi is written. <em>Note</em>: there is no \\\"<code>MidiReader</code>…",null,null],[10,"write_event","","",45,[[["rawmidievent",3],["deltaevent",3]]]],[3,"MidiWriterWrapper","","A wrapper around a midi writer that implements …",null,null],[11,"new","","",46,[[["f64",15]]]],[11,"step_frames","","",46,[[["u64",15]]]],[4,"CombinedError","","The error type that represents the errors you can get …",null,null],[13,"AudioInError","","An error occurred when reading the audio.",47,null],[13,"AudioOutError","","An error occurred when writing the audio.",47,null],[5,"run","","Run an audio renderer with the given audio input, audio …",null,[[["usize",15]],[["result",4],["combinederror",4]]]],[3,"TestAudioReader","","An audio reader, useful for testing.",null,null],[11,"new","","Create a new <code>TestAudioReader</code>. The newly created …",48,[[["usize",15],["audiobufferreader",6],["vec",3]]]],[3,"TestAudioWriter","","An audio writer, useful for testing.",null,null],[11,"new","","Create a new <code>TestAudioWriter</code>. The newly created will …",49,[[["audiochunk",3],["vec",3]]]],[3,"TestMidiReader","","A midi reader, useful for testing.",null,null],[11,"new","","Create a new <code>TestMidiReader</code> that will return the provided …",50,[[["vec",3],["deltaevent",3]]]],[3,"TestMidiWriter","","A midi writer, useful for testing.",null,null],[11,"new","","Create a new <code>TestMidiWriter</code> that will panic when the …",51,[[["vec",3],["deltaevent",3]]]],[11,"check_last","","",51,[[]]],[0,"jack_backend","rsynth::backend","Wrapper for the JACK backend (behind the <code>backend-jack</code> …",null,null],[0,"jack","rsynth::backend::jack_backend","Re-exports of the <code>jack</code> crate. Use this so that your code …",null,null],[5,"get_time","rsynth::backend::jack_backend::jack","Return JACK\'s current system time in microseconds, using …",null,[[],["u64",15]]],[3,"AsyncClient","","A JACK client that is processing data asynchronously, in …",null,null],[3,"Client","","A client to interact with a JACK server.",null,null],[3,"ClientOptions","","Option flags for opening a JACK client.",null,null],[3,"ClientStatus","","Status flags for JACK clients.",null,null],[3,"ClosureProcessHandler","","Wrap a closure that can handle the <code>process</code> callback. This …",null,null],[12,"process_fn","","",52,null],[3,"CycleTimes","","Internal cycle timing information.",null,null],[12,"current_frames","","",53,null],[12,"current_usecs","","",53,null],[12,"next_usecs","","",53,null],[12,"period_usecs","","",53,null],[8,"NotificationHandler","","Specifies callbacks for JACK.",null,null],[11,"thread_init","","Called just once after the creation of the thread in …",54,[[["client",3]]]],[11,"shutdown","","Called when the JACK server shuts down the client thread. …",54,[[["clientstatus",3],["str",15]]]],[11,"freewheel","","Called whenever \\\"freewheel\\\" mode is entered or leaving.",54,[[["bool",15],["client",3]]]],[11,"buffer_size","","Called whenever the size of the buffer that will be …",54,[[["u32",15],["client",3]],["control",4]]],[11,"sample_rate","","Called whenever the system sample rate changes.",54,[[["u32",15],["client",3]],["control",4]]],[11,"client_registration","","Called whenever a client is registered or unregistered",54,[[["str",15],["bool",15],["client",3]]]],[11,"port_registration","","Called whenever a port is registered or unregistered",54,[[["u32",15],["bool",15],["client",3]]]],[11,"port_rename","","Called whenever a port is renamed.",54,[[["u32",15],["client",3],["str",15]],["control",4]]],[11,"ports_connected","","Called whenever ports are connected/disconnected to/from …",54,[[["u32",15],["bool",15],["client",3]]]],[11,"graph_reorder","","Called whenever the processing graph is reordered.",54,[[["client",3]],["control",4]]],[11,"xrun","","Called whenever an xrun occurs.",54,[[["client",3]],["control",4]]],[11,"latency","","Called whenever it is necessary to recompute the …",54,[[["latencytype",4],["client",3]]]],[8,"ProcessHandler","","Specifies real-time processing.",null,null],[10,"process","","Called whenever there is work to be done.",55,[[["processscope",3],["client",3]],["control",4]]],[3,"ProcessScope","","<code>ProcessScope</code> provides information on the client and frame …",null,null],[3,"CLIENT_NAME_SIZE","","The maximum string length for port names.",null,null],[4,"Control","","Specify an option, either to continue processing, or to …",null,null],[13,"Continue","","Continue processing.",56,null],[13,"Quit","","Stop processing.",56,null],[4,"Error","","An error that can occur in JACK.",null,null],[13,"CallbackDeregistrationError","","",57,null],[13,"CallbackRegistrationError","","",57,null],[13,"ClientActivationError","","",57,null],[13,"ClientDeactivationError","","",57,null],[13,"ClientError","","",57,null],[13,"FreewheelError","","",57,null],[13,"InvalidDeactivation","","",57,null],[13,"NotEnoughSpace","","",57,null],[13,"PortAliasError","","",57,null],[13,"PortAlreadyConnected","","",57,null],[13,"PortConnectionError","","",57,null],[13,"PortDisconnectionError","","",57,null],[13,"PortMonitorError","","",57,null],[13,"PortNamingError","","",57,null],[13,"PortRegistrationError","","",57,null],[13,"SetBufferSizeError","","",57,null],[13,"TimeError","","",57,null],[13,"WeakFunctionNotFound","","",57,null],[13,"ClientIsNoLongerAlive","","",57,null],[13,"UnknownError","","",57,null],[4,"LatencyType","","Used by <code>NotificationHandler::latency()</code>.",null,null],[13,"Capture","","",58,null],[13,"Playback","","",58,null],[5,"error_callback","","Get the error callback that was set using …",null,[[],["option",4]]],[5,"info_callback","","Resets the JACK info callback to use stdio. Get the info …",null,[[],["option",4]]],[5,"reset_error_callback","","Restores the JACK info callback to the JACK default, …",null,[[]]],[5,"reset_info_callback","","Restores the JACK info callback to the JACK default, …",null,[[]]],[5,"set_error_callback","","Set the global JACK info callback. It is recommended to …",null,[[]]],[5,"set_info_callback","","Set the global JACK info callback. It is recommended to …",null,[[]]],[3,"AudioIn","","<code>AudioIn</code> implements the <code>PortSpec</code> trait which, defines an …",null,null],[3,"AudioOut","","<code>AudioOut</code> implements the <code>PortSpec</code> trait, which defines an …",null,null],[3,"MidiIn","","<code>MidiIn</code> implements the <code>PortSpec</code> trait, which defines an …",null,null],[3,"MidiIter","","Iterate through Midi Messages within a <code>Port<MidiIn></code>.",null,null],[3,"MidiOut","","<code>MidiOut</code> implements the <code>PortSpec</code> trait, which defines an …",null,null],[3,"MidiWriter","","Write midi events to an output midi port.",null,null],[3,"Port","","An endpoint to interact with JACK data streams, for …",null,null],[3,"PortFlags","","Flags for specifying port options.",null,null],[8,"PortSpec","","Defines the configuration for a certain port to JACK, ie …",null,null],[10,"jack_port_type","","String used by JACK upon port creation to identify the …",59,[[],["str",15]]],[10,"jack_flags","","Flags used by jack upon port creation.",59,[[],["portflags",3]]],[10,"jack_buffer_size","","Size used by jack upon port creation.",59,[[],["u64",15]]],[3,"RawMidi","","Contains 8bit raw midi information along with a timestamp …",null,null],[12,"time","","The amount of time passed, in frames, relative to the …",60,null],[12,"bytes","","Midi data",60,null],[3,"Unowned","","<code>PortSpec</code> for a port that holds has no readable or …",null,null],[3,"PORT_NAME_SIZE","","The maximum string length for port names.",null,null],[3,"PORT_TYPE_SIZE","","The maximum string length for jack type names.",null,null],[6,"Frames","","Type used to represent sample frame counts.",null,null],[6,"PortId","","Ports have unique ids. A port registration callback is …",null,null],[6,"Time","","Type used to represent the value of free running …",null,null],[3,"RingBuffer","","A lock-free ringbuffer. The key attribute of a ringbuffer …",null,null],[3,"RingBufferReader","","Read end of the ring buffer. Can only be used from one …",null,null],[3,"RingBufferWriter","","Write end of the ring buffer. Can only be used from one …",null,null],[3,"Transport","","A structure for querying and manipulating the JACK …",null,null],[3,"TransportBBT","","Transport Bar Beat Tick data.",null,null],[12,"bar","","Time signature bar, 1 or more.",61,null],[12,"beat","","Time signature beat, 1 <= beat <= sig_num.",61,null],[12,"tick","","current tick-within-beat",61,null],[12,"sig_num","","Time Signature \\\"numerator\\\". Jack calls this <code>beats_per_bar</code>.",61,null],[12,"sig_denom","","Time Signature \\\"denominator\\\". Jack calls this <code>beat_type</code>.",61,null],[12,"ticks_per_beat","","Number of ticks within a beat.",61,null],[12,"bpm","","BPM, quantized to block size. This means when the tempo …",61,null],[12,"bar_start_tick","","Number of ticks that have elapsed between frame 0 and the …",61,null],[4,"TransportBBTValidationError","","An error validating a TransportBBT",null,null],[13,"BarZero","","<code>bar</code> must be greater than zero",62,null],[13,"BeatRange","","<code>beat</code> must be greater than zero and less than <code>sig_num</code>",62,null],[13,"TicksPerBeatRange","","There must more than zero ticks per beat",62,null],[13,"SigNumRange","","Time signature numerator, <code>sig_num</code> must be greater than …",62,null],[13,"SigDenomRange","","Time signature denominator, <code>sig_denom</code> must be greater …",62,null],[13,"BPMRange","","<code>bpm</code> must be greater than or equal to zero",62,null],[13,"TickRange","","<code>tick</code> must be less than <code>ticks_per_beat</code>",62,null],[3,"TransportPosition","","A structure representing the transport position.",null,null],[4,"TransportState","","A representation of transport state.",null,null],[13,"Stopped","","",63,null],[13,"Rolling","","",63,null],[13,"Starting","","",63,null],[3,"TransportStatePosition","","A helper struct encapsulating both <code>TransportState</code> and …",null,null],[12,"pos","","",64,null],[12,"state","","",64,null],[3,"JackHost","rsynth::backend::jack_backend","Used to communicate with <code>Jack</code>.",null,null],[11,"client","","Get access to the underlying [<code>Client</code>] so that you can use …",65,[[],["client",3]]],[5,"run","","Run the plugin until the user presses a key on the …",null,[[],[["result",4],["error",4]]]],[0,"vst_backend","rsynth::backend","Wrapper for the VST backend (behind the <code>backend-vst</code> …",null,null],[0,"vst","rsynth::backend::vst_backend","Re-exports from the <code>vst-rs</code> crate. Use this in libraries …",null,null],[0,"api","rsynth::backend::vst_backend::vst","Structures and types for interfacing with the VST 2.4 API.",null,null],[0,"consts","rsynth::backend::vst_backend::vst::api","Constant values",null,null],[17,"MAX_PRESET_NAME_LEN","rsynth::backend::vst_backend::vst::api::consts","",null,null],[17,"MAX_PARAM_STR_LEN","","",null,null],[17,"MAX_LABEL","","",null,null],[17,"MAX_SHORT_LABEL","","",null,null],[17,"MAX_PRODUCT_STR_LEN","","",null,null],[17,"MAX_VENDOR_STR_LEN","","",null,null],[17,"VST_MAGIC","","VST plugins are identified by a magic number. This …",null,null],[6,"PluginMain","rsynth::backend::vst_backend::vst::api","<code>VSTPluginMain</code> function signature.",null,null],[6,"HostCallbackProc","","Host callback function passed to plugin. Can be used to …",null,null],[6,"DispatcherProc","","Dispatcher function used to process opcodes. Called by …",null,null],[6,"ProcessProc","","Process function used to process 32 bit floating point …",null,null],[6,"ProcessProcF64","","Process function used to process 64 bit floating point …",null,null],[6,"SetParameterProc","","Callback function used to set parameter values. Called by …",null,null],[6,"GetParameterProc","","Callback function used to get parameter values. Called by …",null,null],[3,"AEffect","","Used with the VST API to pass around plugin information.",null,null],[12,"magic","","Magic number. Must be <code>[\'V\', \'S\', \'T\', \'P\']</code>.",66,null],[12,"dispatcher","","Host to plug-in dispatcher.",66,null],[12,"_process","","Accumulating process mode is deprecated in VST 2.4! Use …",66,null],[12,"setParameter","","Set value of automatable parameter.",66,null],[12,"getParameter","","Get value of automatable parameter.",66,null],[12,"numPrograms","","Number of programs (Presets).",66,null],[12,"numParams","","Number of parameters. All programs are assumed to have …",66,null],[12,"numInputs","","Number of audio inputs.",66,null],[12,"numOutputs","","Number of audio outputs.",66,null],[12,"flags","","Bitmask made of values from <code>api::PluginFlags</code>.",66,null],[12,"reserved1","","Reserved for host, must be 0.",66,null],[12,"reserved2","","Reserved for host, must be 0.",66,null],[12,"initialDelay","","For algorithms which need input in the first place (Group …",66,null],[12,"_realQualities","","Deprecated unused member.",66,null],[12,"_offQualities","","Deprecated unused member.",66,null],[12,"_ioRatio","","Deprecated unused member.",66,null],[12,"object","","Void pointer usable by api to store object data.",66,null],[12,"user","","User defined pointer.",66,null],[12,"uniqueId","","Registered unique identifier (register it at Steinberg …",66,null],[12,"version","","Plug-in version (e.g. 1100 for v1.1.0.0).",66,null],[12,"processReplacing","","Process audio samples in replacing mode.",66,null],[12,"processReplacingF64","","Process double-precision audio samples in replacing mode.",66,null],[12,"future","","Reserved for future use (please zero).",66,null],[3,"ChannelProperties","","Information about a channel. Only some hosts use this …",null,null],[12,"name","","Channel name.",67,null],[12,"flags","","Flags found in <code>ChannelFlags</code>.",67,null],[12,"arrangement_type","","Type of speaker arrangement this channel is a part of.",67,null],[12,"short_name","","Name of channel (recommended: 6 characters + delimiter).",67,null],[12,"future","","Reserved for future use.",67,null],[4,"SpeakerArrangementType","","Tells the host how the channels are intended to be used …",null,null],[13,"Custom","","User defined arrangement.",68,null],[13,"Empty","","Empty arrangement.",68,null],[13,"Mono","","Mono.",68,null],[13,"Stereo","","L R",68,null],[13,"StereoSurround","","Ls Rs",68,null],[13,"StereoCenter","","Lc Rc",68,null],[13,"StereoSide","","Sl Sr",68,null],[13,"StereoCLfe","","C Lfe",68,null],[13,"Cinema30","","L R C",68,null],[13,"Music30","","L R S",68,null],[13,"Cinema31","","L R C Lfe",68,null],[13,"Music31","","L R Lfe S",68,null],[13,"Cinema40","","L R C S (LCRS)",68,null],[13,"Music40","","L R Ls Rs (Quadro)",68,null],[13,"Cinema41","","L R C Lfe S (LCRS + Lfe)",68,null],[13,"Music41","","L R Lfe Ls Rs (Quadro + Lfe)",68,null],[13,"Surround50","","L R C Ls Rs",68,null],[13,"Surround51","","L R C Lfe Ls Rs",68,null],[13,"Cinema60","","L R C Ls  Rs Cs",68,null],[13,"Music60","","L R Ls Rs  Sl Sr",68,null],[13,"Cinema61","","L R C Lfe Ls Rs Cs",68,null],[13,"Music61","","L R Lfe Ls Rs Sl Sr",68,null],[13,"Cinema70","","L R C Ls Rs Lc Rc",68,null],[13,"Music70","","L R C Ls Rs Sl Sr",68,null],[13,"Cinema71","","L R C Lfe Ls Rs Lc Rc",68,null],[13,"Music71","","L R C Lfe Ls Rs Sl Sr",68,null],[13,"Cinema80","","L R C Ls Rs Lc Rc Cs",68,null],[13,"Music80","","L R C Ls Rs Cs Sl Sr",68,null],[13,"Cinema81","","L R C Lfe Ls Rs Lc Rc Cs",68,null],[13,"Music81","","L R C Lfe Ls Rs Cs Sl Sr",68,null],[13,"Surround102","","L R C Lfe Ls Rs Tfl Tfc Tfr Trl Trr Lfe2",68,null],[4,"Supported","","Used to specify whether functionality is supported.",null,null],[13,"Yes","","",69,null],[13,"Maybe","","",69,null],[13,"No","","",69,null],[13,"Custom","","",69,null],[4,"ProcessLevel","","Denotes in which thread the host is in.",null,null],[13,"Unknown","","Unsupported by host.",70,null],[13,"User","","GUI thread.",70,null],[13,"Realtime","","Audio process thread.",70,null],[13,"Prefetch","","Sequence thread (MIDI, etc).",70,null],[13,"Offline","","Offline processing thread (therefore GUI/user thread).",70,null],[4,"HostLanguage","","Language that the host is using.",null,null],[13,"English","","",71,null],[13,"German","","",71,null],[13,"French","","",71,null],[13,"Italian","","",71,null],[13,"Spanish","","",71,null],[13,"Japanese","","",71,null],[4,"FileSelectCommand","","The file operation to perform.",null,null],[13,"Load","","Load a file.",72,null],[13,"Save","","Save a file.",72,null],[13,"LoadMultipleFiles","","Load multiple files simultaneously.",72,null],[13,"SelectDirectory","","Choose a directory.",72,null],[4,"FileSelectType","","Format to select files.",null,null],[13,"Regular","","Regular file selector.",73,null],[3,"FileType","","File type descriptor.",null,null],[12,"name","","Display name of file type.",74,null],[12,"osx_type","","OS X file type.",74,null],[12,"win_type","","Windows file type.",74,null],[12,"nix_type","","Unix file type.",74,null],[12,"mime_type_1","","MIME type.",74,null],[12,"mime_type_2","","Additional MIME type.",74,null],[3,"FileSelect","","File selector descriptor used in …",null,null],[12,"command","","The type of file selection to perform.",75,null],[12,"select_type","","The file selector to open.",75,null],[12,"mac_creator","","Unknown. 0 = no creator.",75,null],[12,"num_types","","Number of file types.",75,null],[12,"file_types","","List of file types to show.",75,null],[12,"title","","File selector\'s title.",75,null],[12,"initial_path","","Initial path.",75,null],[12,"return_path","","Used when operation returns a single path.",75,null],[12,"size_return_path","","Size of the path buffer in bytes.",75,null],[12,"return_multiple_paths","","Used when operation returns multiple paths.",75,null],[12,"num_paths","","Number of paths returned.",75,null],[12,"reserved","","Reserved by host.",75,null],[12,"future","","Reserved for future use.",75,null],[3,"Events","","A struct which contains events.",null,null],[12,"num_events","","Number of events.",76,null],[12,"_reserved","","Reserved for future use. Should be 0.",76,null],[12,"events","","Variable-length array of pointers to <code>api::Event</code> objects.",76,null],[4,"EventType","","The type of event that has occured. See …",null,null],[13,"_Placeholder","","Value used for uninitialized placeholder events.",77,null],[13,"Midi","","Midi event. See <code>api::MidiEvent</code>.",77,null],[13,"_Audio","","Deprecated.",77,null],[13,"_Video","","Deprecated.",77,null],[13,"_Parameter","","Deprecated.",77,null],[13,"_Trigger","","Deprecated.",77,null],[13,"SysEx","","System exclusive event. See <code>api::SysExEvent</code>.",77,null],[3,"Event","","A VST event intended to be casted to a corresponding type.",null,null],[12,"event_type","","The type of event. This lets you know which event this …",78,null],[12,"byte_size","","Size of this structure; <code>mem::sizeof::<Event>()</code>.",78,null],[12,"delta_frames","","Number of samples into the current processing block that …",78,null],[12,"_flags","","Generic flags, none defined in VST api yet.",78,null],[12,"_reserved","","The <code>Event</code> type is cast appropriately, so this acts as …",78,null],[3,"MidiEvent","","A midi event.",null,null],[12,"event_type","","Should be <code>EventType::Midi</code>.",79,null],[12,"byte_size","","Size of this structure; <code>mem::sizeof::<MidiEvent>()</code>.",79,null],[12,"delta_frames","","Number of samples into the current processing block that …",79,null],[12,"flags","","See <code>MidiEventFlags</code>.",79,null],[12,"note_length","","Length in sample frames of entire note if available, …",79,null],[12,"note_offset","","Offset in samples into note from start if available, …",79,null],[12,"midi_data","","1 to 3 midi bytes. TODO: Doc",79,null],[12,"_midi_reserved","","Reserved midi byte (0).",79,null],[12,"detune","","Detuning between -63 and +64 cents, for scales other than …",79,null],[12,"note_off_velocity","","Note off velocity between 0 and 127.",79,null],[12,"_reserved1","","Reserved for future use. Should be 0.",79,null],[12,"_reserved2","","Reserved for future use. Should be 0.",79,null],[3,"SysExEvent","","A midi system exclusive event.",null,null],[12,"event_type","","Should be <code>EventType::SysEx</code>.",80,null],[12,"byte_size","","Size of this structure; <code>mem::sizeof::<SysExEvent>()</code>.",80,null],[12,"delta_frames","","Number of samples into the current processing block that …",80,null],[12,"_flags","","Generic flags, none defined in VST api yet.",80,null],[12,"data_size","","Size of payload in bytes.",80,null],[12,"_reserved1","","Reserved for future use. Should be 0.",80,null],[12,"system_data","","Pointer to payload.",80,null],[12,"_reserved2","","Reserved for future use. Should be 0.",80,null],[3,"TimeInfo","","Describes the time at the start of the block currently …",null,null],[12,"sample_pos","","current Position in audio samples (always valid)",81,null],[12,"sample_rate","","current Sample Rate in Hertz (always valid)",81,null],[12,"nanoseconds","","System Time in nanoseconds (10^-9 second)",81,null],[12,"ppq_pos","","Musical Position, in Quarter Note (1.0 equals 1 Quarter …",81,null],[12,"tempo","","current Tempo in BPM (Beats Per Minute)",81,null],[12,"bar_start_pos","","last Bar Start Position, in Quarter Note",81,null],[12,"cycle_start_pos","","Cycle Start (left locator), in Quarter Note",81,null],[12,"cycle_end_pos","","Cycle End (right locator), in Quarter Note",81,null],[12,"time_sig_numerator","","Time Signature Numerator (e.g. 3 for 3/4)",81,null],[12,"time_sig_denominator","","Time Signature Denominator (e.g. 4 for 3/4)",81,null],[12,"smpte_offset","","SMPTE offset in SMPTE subframes (bits; 1/80 of a frame). …",81,null],[12,"smpte_frame_rate","","See <code>SmpteFrameRate</code>",81,null],[12,"samples_to_next_clock","","MIDI Clock Resolution (24 Per Quarter Note), can be …",81,null],[12,"flags","","See <code>TimeInfoFlags</code>",81,null],[4,"SmpteFrameRate","","SMPTE Frame Rates.",null,null],[13,"Smpte24fps","","24 fps",82,null],[13,"Smpte25fps","","25 fps",82,null],[13,"Smpte2997fps","","29.97 fps",82,null],[13,"Smpte30fps","","30 fps",82,null],[13,"Smpte2997dfps","","29.97 drop",82,null],[13,"Smpte30dfps","","30 drop",82,null],[13,"SmpteFilm16mm","","Film 16mm",82,null],[13,"SmpteFilm35mm","","Film 35mm",82,null],[13,"Smpte239fps","","HDTV: 23.976 fps",82,null],[13,"Smpte249fps","","HDTV: 24.976 fps",82,null],[13,"Smpte599fps","","HDTV: 59.94 fps",82,null],[13,"Smpte60fps","","HDTV: 60 fps",82,null],[3,"ChannelFlags","","Flags for VST channels.",null,null],[3,"PluginFlags","","Flags for VST plugins.",null,null],[3,"ModifierKey","","Cross platform modifier key flags.",null,null],[3,"MidiEventFlags","","MIDI event flags.",null,null],[3,"TimeInfoFlags","","Used in the <code>flags</code> field of <code>TimeInfo</code>, and for querying the …",null,null],[0,"buffer","rsynth::backend::vst_backend::vst","Buffers to safely work with audio samples.",null,null],[3,"AudioBuffer","rsynth::backend::vst_backend::vst::buffer","<code>AudioBuffer</code> contains references to the audio buffers for …",null,null],[3,"AudioBufferIterator","","Iterator over pairs of buffers of input channels and …",null,null],[3,"Inputs","","Wrapper type to access the buffers for the input channels …",null,null],[3,"InputIterator","","Iterator over buffers for input channels of an <code>AudioBuffer</code>…",null,null],[3,"Outputs","","Wrapper type to access the buffers for the output …",null,null],[3,"OutputIterator","","Iterator over buffers for output channels of an …",null,null],[6,"PlaceholderEvent","","This is used as a placeholder to pre-allocate space for a …",null,null],[8,"WriteIntoPlaceholder","","This trait is used by <code>SendEventBuffer::send_events</code> to …",null,null],[10,"write_into","","writes an event into the given placeholder memory location",83,[[["sysexevent",3]]]],[3,"SendEventBuffer","","This buffer is used for sending midi events through the …",null,null],[0,"channels","rsynth::backend::vst_backend::vst","Meta data for dealing with input / output channels. Not …",null,null],[3,"ChannelInfo","rsynth::backend::vst_backend::vst::channels","Information about an input / output channel. This isn\'t …",null,null],[4,"ArrangementTarget","","Target for Speaker arrangement type. Can be a cinema …",null,null],[13,"Music","","Music arrangement. Technically identical to Cinema.",84,null],[13,"Cinema","","Cinematic arrangement. Technically identical to Music.",84,null],[4,"StereoChannel","","An enum for all channels in a stereo configuration.",null,null],[13,"Left","","Left channel.",85,null],[13,"Right","","Right channel.",85,null],[4,"StereoConfig","","Possible stereo speaker configurations.",null,null],[13,"L_R","","Regular.",86,null],[13,"Ls_Rs","","Left surround, right surround.",86,null],[13,"Lc_Rc","","Left center, right center.",86,null],[13,"Sl_Sr","","Side left, side right.",86,null],[13,"C_Lfe","","Center, low frequency effects.",86,null],[4,"SurroundConfig","","Possible surround speaker configurations.",null,null],[13,"S3_0","","3.0 surround sound. Cinema: L R C Music: L R S",87,null],[13,"S3_1","","3.1 surround sound. Cinema: L R C Lfe Music: L R Lfe S",87,null],[13,"S4_0","","4.0 surround sound. Cinema: L R C S (LCRS) Music: L R Ls …",87,null],[13,"S4_1","","4.1 surround sound. Cinema: L R C Lfe S (LCRS + Lfe) …",87,null],[13,"S5_0","","5.0 surround sound. Cinema and music: L R C Ls Rs",87,null],[13,"S5_1","","5.1 surround sound. Cinema and music: L R C Lfe Ls Rs",87,null],[13,"S6_0","","6.0 surround sound. Cinema: L R C Ls Rs Cs Music: L R Ls …",87,null],[13,"S6_1","","6.1 surround sound. Cinema: L R C Lfe Ls Rs Cs Music: L R …",87,null],[13,"S7_0","","7.0 surround sound. Cinema: L R C Ls Rs Lc Rc Music: L R …",87,null],[13,"S7_1","","7.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Music: …",87,null],[13,"S8_0","","8.0 surround sound. Cinema: L R C Ls Rs Lc Rc Cs Music: L …",87,null],[13,"S8_1","","8.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Cs …",87,null],[13,"S10_2","","10.2 surround sound. Cinema + Music: L R C Lfe Ls Rs Tfl …",87,null],[4,"SpeakerArrangementType","","Type representing how a channel is used. Only useful for …",null,null],[13,"Custom","","Custom arrangement not specified to host.",88,null],[13,"Empty","","Empty arrangement.",88,null],[13,"Mono","","Mono channel.",88,null],[13,"Stereo","","Stereo channel. Contains type of stereo arrangement and …",88,null],[13,"Surround","","Surround channel. Contains surround arrangement and …",88,null],[0,"editor","rsynth::backend::vst_backend::vst","All VST plugin editor related functionality.",null,null],[8,"Editor","rsynth::backend::vst_backend::vst::editor","Implemented by plugin editors.",null,null],[10,"size","","Get the size of the editor window.",89,[[]]],[10,"position","","Get the coordinates of the editor window.",89,[[]]],[11,"idle","","Editor idle call. Called by host.",89,[[]]],[11,"close","","Called when the editor window is closed.",89,[[]]],[10,"open","","Called when the editor window is opened.",89,[[],["bool",15]]],[10,"is_open","","Return whether the window is currently open.",89,[[],["bool",15]]],[11,"set_knob_mode","","Set the knob mode for this editor (if supported by host).",89,[[["knobmode",4]],["bool",15]]],[11,"key_up","","Receive key up event. Return <code>true</code> if the key was used.",89,[[["keycode",3]],["bool",15]]],[11,"key_down","","Receive key down event. Return <code>true</code> if the key was used.",89,[[["keycode",3]],["bool",15]]],[3,"KeyCode","","A platform independent key code. Includes modifier keys.",null,null],[12,"character","","ASCII character for key pressed (if applicable).",90,null],[12,"key","","Key pressed. See <code>enums::Key</code>.",90,null],[12,"modifier","","Modifier key bitflags. See <code>enums::flags::modifier_key</code>.",90,null],[4,"KnobMode","","Allows host to set how a parameter knob works.",null,null],[13,"Circular","","",91,null],[13,"CircularRelative","","",91,null],[13,"Linear","","",91,null],[4,"Key","","Platform independent key codes.",null,null],[13,"Back","","",92,null],[13,"Tab","","",92,null],[13,"Clear","","",92,null],[13,"Return","","",92,null],[13,"Pause","","",92,null],[13,"Escape","","",92,null],[13,"Space","","",92,null],[13,"Next","","",92,null],[13,"End","","",92,null],[13,"Home","","",92,null],[13,"Left","","",92,null],[13,"Up","","",92,null],[13,"Right","","",92,null],[13,"Down","","",92,null],[13,"PageUp","","",92,null],[13,"PageDown","","",92,null],[13,"Select","","",92,null],[13,"Print","","",92,null],[13,"Enter","","",92,null],[13,"Snapshot","","",92,null],[13,"Insert","","",92,null],[13,"Delete","","",92,null],[13,"Help","","",92,null],[13,"Numpad0","","",92,null],[13,"Numpad1","","",92,null],[13,"Numpad2","","",92,null],[13,"Numpad3","","",92,null],[13,"Numpad4","","",92,null],[13,"Numpad5","","",92,null],[13,"Numpad6","","",92,null],[13,"Numpad7","","",92,null],[13,"Numpad8","","",92,null],[13,"Numpad9","","",92,null],[13,"Multiply","","",92,null],[13,"Add","","",92,null],[13,"Separator","","",92,null],[13,"Subtract","","",92,null],[13,"Decimal","","",92,null],[13,"Divide","","",92,null],[13,"F1","","",92,null],[13,"F2","","",92,null],[13,"F3","","",92,null],[13,"F4","","",92,null],[13,"F5","","",92,null],[13,"F6","","",92,null],[13,"F7","","",92,null],[13,"F8","","",92,null],[13,"F9","","",92,null],[13,"F10","","",92,null],[13,"F11","","",92,null],[13,"F12","","",92,null],[13,"Numlock","","",92,null],[13,"Scroll","","",92,null],[13,"Shift","","",92,null],[13,"Control","","",92,null],[13,"Alt","","",92,null],[13,"Equals","","",92,null],[0,"event","rsynth::backend::vst_backend::vst","Interfaces to VST events.",null,null],[4,"Event","rsynth::backend::vst_backend::vst::event","A VST event.",null,null],[13,"Midi","","A midi event.",93,null],[13,"SysEx","","A system exclusive event.",93,null],[13,"Deprecated","","A deprecated event.",93,null],[3,"MidiEvent","","A midi event.",null,null],[12,"data","","The raw midi data associated with this event.",94,null],[12,"delta_frames","","Number of samples into the current processing block that …",94,null],[12,"live","","This midi event was created live as opposed to being …",94,null],[12,"note_length","","The length of the midi note associated with this event, …",94,null],[12,"note_offset","","Offset in samples into note from note start, if available.",94,null],[12,"detune","","Detuning between -63 and +64 cents.",94,null],[12,"note_off_velocity","","Note off velocity between 0 and 127.",94,null],[3,"SysExEvent","","A system exclusive event.",null,null],[12,"payload","","The SysEx payload.",95,null],[12,"delta_frames","","Number of samples into the current processing block that …",95,null],[0,"host","rsynth::backend::vst_backend::vst","Host specific structures.",null,null],[8,"Host","rsynth::backend::vst_backend::vst::host","Implemented by all VST hosts.",null,null],[11,"automate","","Automate a parameter; the value has been changed.",96,[[["f32",15],["i32",15]]]],[11,"get_plugin_id","","Get the plugin ID of the currently loading plugin.",96,[[],["i32",15]]],[11,"idle","","An idle call.",96,[[]]],[11,"get_info","","Get vendor and product information.",96,[[]]],[11,"process_events","","Handle incoming events from the plugin.",96,[[["events",3]]]],[11,"get_time_info","","Get time information.",96,[[["i32",15]],[["option",4],["timeinfo",3]]]],[11,"get_block_size","","Get block size.",96,[[],["isize",15]]],[11,"update_display","","Refresh UI after the plugin\'s parameters changed.",96,[[]]],[4,"PluginLoadError","","All possible errors that can occur when loading a VST …",null,null],[13,"InvalidPath","","Could not load given path.",97,null],[13,"NotAPlugin","","Given path is not a VST plugin.",97,null],[13,"InstanceFailed","","Failed to create an instance of this plugin.",97,null],[13,"InvalidApiVersion","","The API version which the plugin used is not supported by …",97,null],[3,"PluginLoader","","Wrapper for an externally loaded VST plugin.",null,null],[3,"PluginInstance","","An instance of an externally loaded VST plugin.",null,null],[3,"HostBuffer","","Used for constructing <code>AudioBuffer</code> instances on the host.",null,null],[0,"plugin","rsynth::backend::vst_backend::vst","Plugin specific structures.",null,null],[4,"Category","rsynth::backend::vst_backend::vst::plugin","Plugin type. Generally either Effect or Synth.",null,null],[13,"Unknown","","Unknown / not implemented",98,null],[13,"Effect","","Any effect",98,null],[13,"Synth","","VST instrument",98,null],[13,"Analysis","","Scope, tuner, spectrum analyser, etc.",98,null],[13,"Mastering","","Dynamics, etc.",98,null],[13,"Spacializer","","Panners, etc.",98,null],[13,"RoomFx","","Delays and Reverbs",98,null],[13,"SurroundFx","","Dedicated surround processor.",98,null],[13,"Restoration","","Denoiser, etc.",98,null],[13,"OfflineProcess","","Offline processing.",98,null],[13,"Shell","","Contains other plugins.",98,null],[13,"Generator","","Tone generator, etc.",98,null],[3,"Info","","A structure representing static plugin information.",null,null],[12,"name","","Plugin Name.",99,null],[12,"vendor","","Plugin Vendor.",99,null],[12,"presets","","Number of different presets.",99,null],[12,"parameters","","Number of parameters.",99,null],[12,"inputs","","Number of inputs.",99,null],[12,"outputs","","Number of outputs.",99,null],[12,"midi_inputs","","Number of MIDI input channels (1-16), or 0 for the …",99,null],[12,"midi_outputs","","Number of MIDI output channels (1-16), or 0 for the …",99,null],[12,"unique_id","","Unique plugin ID. Can be registered with Steinberg to …",99,null],[12,"version","","Plugin version (e.g. 0001 = <code>v0.0.0.1</code>, 1283 = <code>v1.2.8.3</code>).",99,null],[12,"category","","Plugin category. Possible values are found in …",99,null],[12,"initial_delay","","Latency of the plugin in samples.",99,null],[12,"preset_chunks","","Indicates that preset data is handled in formatless …",99,null],[12,"f64_precision","","Indicates whether this plugin can process f64 based …",99,null],[12,"silent_when_stopped","","If this is true, the plugin will not produce sound when …",99,null],[4,"CanDo","","Features which are optionally supported by a plugin. …",null,null],[13,"SendEvents","","",100,null],[13,"SendMidiEvent","","",100,null],[13,"ReceiveEvents","","",100,null],[13,"ReceiveMidiEvent","","",100,null],[13,"ReceiveTimeInfo","","",100,null],[13,"Offline","","",100,null],[13,"MidiProgramNames","","",100,null],[13,"Bypass","","",100,null],[13,"ReceiveSysExEvent","","",100,null],[13,"MidiSingleNoteTuningChange","","",100,null],[13,"MidiKeyBasedInstrumentControl","","",100,null],[13,"Other","","",100,null],[8,"Plugin","","Must be implemented by all VST plugins.",null,null],[10,"get_info","","This method must return an <code>Info</code> struct.",101,[[],["info",3]]],[11,"new","","Called during initialization to pass a <code>HostCallback</code> to …",101,[[["hostcallback",3]]]],[11,"init","","Called when plugin is fully initialized.",101,[[]]],[11,"set_sample_rate","","Called when sample rate is changed by host.",101,[[["f32",15]]]],[11,"set_block_size","","Called when block size is changed by host.",101,[[["i64",15]]]],[11,"resume","","Called to transition the plugin into the <em>resumed</em> state.",101,[[]]],[11,"suspend","","Called to transition the plugin into the <em>suspended</em> state.",101,[[]]],[11,"vendor_specific","","Vendor specific handling.",101,[[["isize",15],["f32",15],["i32",15]],["isize",15]]],[11,"can_do","","Return whether plugin supports specified action.",101,[[["cando",4]],["supported",4]]],[11,"get_tail_size","","Get the tail size of plugin when it is stopped. Used in …",101,[[],["isize",15]]],[11,"process","","Process an audio buffer containing <code>f32</code> values.",101,[[["audiobuffer",3]]]],[11,"process_f64","","Process an audio buffer containing <code>f64</code> values.",101,[[["audiobuffer",3]]]],[11,"process_events","","Handle incoming events sent from the host.",101,[[["events",3]]]],[11,"get_parameter_object","","Get a reference to the shared parameter object.",101,[[],[["pluginparameters",8],["arc",3]]]],[11,"get_input_info","","Get information about an input channel. Only used by some …",101,[[["i32",15]],["channelinfo",3]]],[11,"get_output_info","","Get information about an output channel. Only used by …",101,[[["i32",15]],["channelinfo",3]]],[11,"start_process","","Called one time before the start of process call.",101,[[]]],[11,"stop_process","","Called after the stop of process call.",101,[[]]],[11,"get_editor","","Return handle to plugin editor if supported. The method …",101,[[],[["box",3],["option",4]]]],[8,"PluginParameters","","Parameter object shared between the UI and processing …",null,null],[11,"change_preset","","Set the current preset to the index specified by <code>preset</code>.",102,[[["i32",15]]]],[11,"get_preset_num","","Get the current preset index.",102,[[],["i32",15]]],[11,"set_preset_name","","Set the current preset name.",102,[[["string",3]]]],[11,"get_preset_name","","Get the name of the preset at the index specified by …",102,[[["i32",15]],["string",3]]],[11,"get_parameter_label","","Get parameter label for parameter at <code>index</code> (e.g. \\\"db\\\", …",102,[[["i32",15]],["string",3]]],[11,"get_parameter_text","","Get the parameter value for parameter at <code>index</code> (e.g. …",102,[[["i32",15]],["string",3]]],[11,"get_parameter_name","","Get the name of parameter at <code>index</code>.",102,[[["i32",15]],["string",3]]],[11,"get_parameter","","Get the value of paramater at <code>index</code>. Should be value …",102,[[["i32",15]],["f32",15]]],[11,"set_parameter","","Set the value of parameter at <code>index</code>. <code>value</code> is between 0.0 …",102,[[["f32",15],["i32",15]]]],[11,"can_be_automated","","Return whether parameter at <code>index</code> can be automated.",102,[[["i32",15]],["bool",15]]],[11,"string_to_parameter","","Use String as input for parameter value. Used by host to …",102,[[["string",3],["i32",15]],["bool",15]]],[11,"get_preset_data","","If <code>preset_chunks</code> is set to true in plugin info, this …",102,[[],[["global",3],["vec",3],["u8",15]]]],[11,"get_bank_data","","If <code>preset_chunks</code> is set to true in plugin info, this …",102,[[],[["global",3],["vec",3],["u8",15]]]],[11,"load_preset_data","","If <code>preset_chunks</code> is set to true in plugin info, this …",102,[[]]],[11,"load_bank_data","","If <code>preset_chunks</code> is set to true in plugin info, this …",102,[[]]],[3,"HostCallback","","A reference to the host which allows the plugin to call …",null,null],[0,"util","rsynth::backend::vst_backend::vst","Structures for easing the implementation of VST plugins.",null,null],[3,"AtomicFloat","rsynth::backend::vst_backend::vst::util","Simple atomic floating point variable with relaxed …",null,null],[3,"ParameterTransfer","","A set of parameters that can be shared between threads.",null,null],[3,"ParameterTransferIterator","","An iterator over changed parameters. Returned by <code>iterate</code>.",null,null],[14,"plugin_main","rsynth::backend::vst_backend::vst","Exports the necessary symbols for the plugin to be used …",null,null],[8,"VstPluginMeta","rsynth::backend::vst_backend","Define some VST-specific meta-data for a VST plugin.",null,null],[10,"plugin_id","","",103,[[],["i32",15]]],[10,"category","","",103,[[],["category",4]]],[3,"VstPluginWrapper","","A struct used internally by the [<code>vst_init</code>] macro. …",null,null],[11,"get_info","","",104,[[],["info",3]]],[11,"new","","Create a new <code>VstPluginWrapper</code>. <em>Note</em> Normally, plugin\'s do …",104,[[["hostcallback",3]]]],[11,"host","","",104,[[],["hostcallback",3]]],[11,"process","","",104,[[["audiobuffer",3]]]],[11,"process_f64","","",104,[[["audiobuffer",3]]]],[11,"get_input_info","","",104,[[["i32",15]],["channelinfo",3]]],[11,"get_output_info","","",104,[[["i32",15]],["channelinfo",3]]],[11,"process_events","","",104,[[["events",3]]]],[11,"set_sample_rate","","",104,[[["f64",15]]]],[8,"HostInterface","rsynth::backend","Defines an interface for communicating with the host or …",null,null],[10,"output_initialized","","Return whether the output buffers are zero-initialized. …",105,[[],["bool",15]]],[11,"stop","","Stop processing. For backends that do not support …",105,[[]]],[8,"Stop","","A marker trait that indicates that the backend can be …",null,null],[0,"envelope","rsynth","This module has not been thoroughly tested, so expect …",null,null],[0,"staircase_envelope","rsynth::envelope","",null,null],[3,"StairCaseEnvelopeIterator","rsynth::envelope::staircase_envelope","",null,null],[3,"StairCaseEnvelope","","",null,null],[3,"EnvelopeIteratorItem","rsynth::envelope","",null,null],[12,"item","","",106,null],[12,"has_updated","","",106,null],[8,"Envelope","","Defines the behaviour of an envelope. An envelope allows …",null,null],[16,"Iter","","The type of the iterator.",107,null],[16,"EventType","","",107,null],[10,"iter","","Get the iterator.",107,[[]]],[10,"insert_event","","",107,[[]]],[10,"forget_past","","",107,[[["u32",15]]]],[0,"event","rsynth","Event handling",null,null],[0,"event_queue","rsynth::event","Queue events.",null,null],[3,"EventQueue","rsynth::event::event_queue","A queue for timed events.",null,null],[4,"EventCollisionHandling","","Determines what should happen when two events are queued …",null,null],[13,"InsertNewBeforeOld","","Insert the newly queued event before the previously …",108,null],[13,"InsertNewAfterOld","","Insert the newly queued event after the previously queued.",108,null],[13,"IgnoreNew","","Ignore the newly queued event.",108,null],[13,"RemoveOld","","Remove the previously queued event.",108,null],[8,"HandleEventCollision","","Trait that describes how \\\"event collision\\\" (queing two …",null,null],[10,"decide_on_collision","","",109,[[],["eventcollisionhandling",4]]],[3,"AlwaysInsertNewBeforeOld","","Always queue the new newly queued event before the …",null,null],[3,"AlwaysInsertNewAfterOld","","Always queue the new newly queued event after the …",null,null],[3,"AlwaysIgnoreNew","","Always ignore the newly queued event in case of collision …",null,null],[3,"AlwaysRemoveOld","","Always remove the previously queued event in case of …",null,null],[11,"new","","Create a new <code>EventQueue</code>.",110,[[["usize",15]]]],[11,"queue_event","","Queue a new event. When the buffer is full, an element …",110,[[["timed",3]],[["option",4],["timed",3]]]],[11,"forget_before","","Remove all events before, but not on, this threshold.",110,[[["u32",15]]]],[11,"clear","","Remove all events from the queue.",110,[[]]],[11,"shift_time","","Shift time forward by <code>new_zero_time</code> frames.",110,[[["u32",15]]]],[11,"get_last_before","","",110,[[["u32",15]],[["option",4],["timed",3]]]],[11,"first","","Get the first event from the <code>EventQueue</code> if there is one …",110,[[],[["option",4],["timed",3]]]],[11,"split","","Go through the <code>EventQueue</code> and alternatingly handle events …",110,[[["vecstorage",3],["audiobufferinout",3],["vecstorage",3]]]],[11,"drain","","Create an iterator that drains all elements before but …",110,[[["u32",15]],["drainingiter",3]]],[11,"drain_all","","Create an iterator that drains all elements.",110,[[],["drainingiter",3]]],[3,"DrainingIter","","Draining iterator created by the [<code>EventQueue::drain</code>] …",null,null],[8,"EventHandler","rsynth::event","The trait that plugins should implement in order to …",null,null],[10,"handle_event","","",111,[[]]],[8,"EventHandlerExt","","An extension trait for [<code>EventHandler</code>] providing some …",null,null],[11,"map","","Create a new event handler that first applies the given …",112,[[],["map",3]]],[3,"Map","","An [<code>EventHandler</code>] from the [<code>EventHandlerExt::map</code>] method.",null,null],[8,"ContextualEventHandler","","The trait that plugins should implement in order to …",null,null],[10,"handle_event","","",113,[[]]],[3,"SysExEvent","","A System Exclusive (\\\"SysEx\\\") event.",null,null],[11,"new","","Create a new <code>SysExEvent</code> with the given <code>data</code>.",114,[[]]],[11,"data","","Get the data from the <code>SysExEvent</code>",114,[[]]],[3,"RawMidiEvent","","A raw midi event.",null,null],[11,"new","","Create a new <code>RawMidiEvent</code> with the given raw data.",115,[[]]],[11,"try_new","","Try to create a new <code>RawMidiEvent</code> with the given raw data. …",115,[[],["option",4]]],[11,"data","","Get the raw data from a <code>RawMidiEvent</code>, including \\\"padding\\\".",115,[[]]],[11,"bytes","","Get the raw data from a <code>RawMidiEvent</code>.",115,[[]]],[4,"MidlyConversionError","","The error type when converting from <code>midly</code>\'s <code>TrackEventKind</code>…",null,null],[13,"NotALiveEvent","","Not a live event.",116,null],[13,"CursorError","","Cursor error (technical error).",116,null],[3,"Timed","","<code>Timed<E></code> adds timing to an event.",null,null],[12,"time_in_frames","","The offset (in frames) of the event relative to the start …",117,null],[12,"event","","The underlying event.",117,null],[11,"new","","",117,[[["u32",15]]]],[3,"Indexed","","<code>Indexed<E></code> adds an index to an event of type <code>E</code>. The index …",null,null],[12,"index","","The index of the event.",118,null],[12,"event","","The underlying event.",118,null],[11,"new","","",118,[[["usize",15]]]],[3,"DeltaEvent","","",null,null],[12,"microseconds_since_previous_event","","",119,null],[12,"event","","",119,null],[3,"TimeStretcher","","Stretch integer (<code>u64</code>) time stamps by a fractional factor …",null,null],[11,"new","","Create a new <code>TimeStretcher</code>.",120,[[["nonzerou64",3],["u64",15]]]],[11,"stretch","","Stretch the input time by the factor <code>nominator/denominator</code>…",120,[[["option",4],["u64",15]],["u64",15]]],[0,"meta","rsynth","Mechanisms for defining the meta-data of a plugin or …",null,null],[8,"Meta","rsynth::meta","Define the meta-data for an application or plug-in.",null,null],[16,"MetaData","","The data-type that represents the meta-data.",121,null],[10,"meta","","Get the meta-data.",121,[[]]],[8,"General","","Define meta-data of an application or plugin as a whole.",null,null],[16,"GeneralData","","The data-type of the general meta-data.",122,null],[10,"general","","Get the general meta-data.",122,[[]]],[8,"Name","","Implement this trait to indicate that a type can be used …",null,null],[11,"name","","Get the name.",123,[[],["str",15]]],[11,"write_name","","Write the name to the given buffer.",123,[[],[["error",3],["result",4]]]],[8,"Port","","Define meta-data for input ports and output ports.",null,null],[16,"PortData","","",124,null],[10,"in_ports","","",124,[[]]],[10,"out_ports","","",124,[[]]],[3,"AudioPort","","A \\\"marker\\\" struct to be used as a type parameter for the …",null,null],[3,"MidiPort","","A \\\"marker\\\" struct to be used as a type parameter for the …",null,null],[3,"MetaData","","Represents general-purpose meta-data of an audio …",null,null],[12,"general_meta","","The meta-data about the application or plugin as a whole.",125,null],[12,"audio_port_meta","","Meta-data about the audio ports.",125,null],[12,"midi_port_meta","","Meta-data about the midi ports.",125,null],[3,"InOut","","Represents meta-data about a input and output ports.",null,null],[12,"inputs","","Meta-data of the input ports.",126,null],[12,"outputs","","Meta-data of the output ports.",126,null],[0,"test_utilities","rsynth","Utilities for testing.",null,null],[3,"DummyEventHandler","rsynth::test_utilities","",null,null],[3,"TestPlugin","","A plugin useful for writing automated tests.",null,null],[11,"new","","",127,[[["vec",3],["audiochunk",3],["vec",3],["vec",3]]]],[11,"check_last","","",127,[[]]],[0,"utilities","rsynth","",null,null],[0,"polyphony","rsynth::utilities","Utility to facilitate genarating different sounds at the …",null,null],[0,"simple_event_dispatching","rsynth::utilities::polyphony","Some basic event dispatching.",null,null],[4,"SimpleVoiceState","rsynth::utilities::polyphony::simple_event_dispatching","A simple voice state",null,null],[13,"Idle","","The voice is idle (in other words: doing nothing).",128,null],[13,"Releasing","","The voice has received a signal to stop, but is still …",128,null],[13,"Active","","The voice has not yet received a signal to stop and is …",128,null],[3,"SimpleEventDispatcher","","A simple event dispatcher.",null,null],[11,"new","","",129,[[]]],[4,"EventDispatchClass","rsynth::utilities::polyphony","",null,null],[13,"Broadcast","","",130,null],[13,"AssignNewVoice","","",130,null],[13,"VoiceSpecific","","",130,null],[13,"ReleaseVoice","","",130,null],[3,"ToneIdentifier","","Used to dispatch polyphonic event to the correct voice, …",null,null],[12,"0","","",131,null],[8,"EventDispatchClassifier","","",null,null],[16,"VoiceIdentifier","","",132,null],[10,"classify","","",132,[[],["eventdispatchclass",4]]],[3,"RawMidiEventToneIdentifierDispatchClassifier","","",null,null],[4,"VoiceAssignment","","",null,null],[13,"None","","",133,null],[13,"All","","",133,null],[13,"Some","","",133,null],[8,"Voice","","Implement this trait to inform the polyphonic event …",null,null],[10,"state","","",134,[[]]],[8,"VoiceAssigner","","",null,null],[16,"Voice","","",135,null],[11,"assign_event","","",135,[[],["voiceassignment",4]]],[10,"find_active_voice","","",135,[[],[["usize",15],["option",4]]]],[10,"find_idle_voice","","",135,[[],["usize",15]]],[8,"EventDispatcher","","",null,null],[11,"dispatch_event","","",136,[[]]],[8,"ContextualEventDispatcher","","",null,null],[11,"dispatch_contextual_event","","Dispatch an event to the voice or voices that should …",137,[[]]],[0,"vecstorage","rsynth","Re-exports from the <code>vecstorage</code> crate.",null,null],[3,"VecStorage","rsynth::vecstorage","Re-usable memory for creating a vector of references.",null,null],[8,"AudioHandlerMeta","rsynth","Define the maximum number of audio inputs and the maximum …",null,null],[10,"max_number_of_audio_inputs","","The maximum number of audio inputs supported. This method …",138,[[],["usize",15]]],[10,"max_number_of_audio_outputs","","The maximum number of audio outputs supported. This …",138,[[],["usize",15]]],[8,"AudioHandler","","Define how sample-rate changes are handled.",null,null],[10,"set_sample_rate","","Called when the sample-rate changes. The backend should …",139,[[["f64",15]]]],[8,"MidiHandlerMeta","","Define the maximum number of midi inputs and the maximum …",null,null],[10,"max_number_of_midi_inputs","","The maximum number of midi inputs supported. This method …",140,[[],["usize",15]]],[10,"max_number_of_midi_outputs","","The maximum number of midi outputs supported. This method …",140,[[],["usize",15]]],[8,"AudioRenderer","","Defines how audio is rendered.",null,null],[10,"render_buffer","","This method is called repeatedly for subsequent audio …",141,[[["audiobufferinout",3]]]],[8,"ContextualAudioRenderer","","Defines how audio is rendered, similar to the …",null,null],[10,"render_buffer","","This method called repeatedly for subsequent buffers.",142,[[["audiobufferinout",3]]]],[8,"CommonPluginMeta","","Provides common meta-data of the plugin or application to …",null,null],[11,"name","","The name of the plugin or application.",143,[[],["str",15]]],[11,"plugin_name","","The name of the plugin or application.",143,[[],[["error",3],["result",4]]]],[8,"CommonAudioPortMeta","","Provides some meta-data of the audio-ports used by the …",null,null],[11,"audio_input_name","","The name of the audio input with the given index. You can …",144,[[["usize",15]],["string",3]]],[11,"input_name","","The name of the audio input with the given index. You can …",144,[[["usize",15]],[["error",3],["result",4]]]],[11,"audio_output_name","","The name of the audio output with the given index. You …",144,[[["usize",15]],["string",3]]],[11,"output_name","","The name of the audio output with the given index. You …",144,[[["usize",15]],[["error",3],["result",4]]]],[8,"CommonMidiPortMeta","","Provides some meta-data of the midi-ports used by the …",null,null],[11,"midi_input_name","","The name of the midi input with the given index. You can …",145,[[["usize",15]],["string",3]]],[11,"input_name","","The name of the midi input with the given index. You can …",145,[[["usize",15]],[["error",3],["result",4]]]],[11,"midi_output_name","","The name of the midi output with the given index. You can …",145,[[["usize",15]],["string",3]]],[11,"output_name","","The name of the midi output with the given index. You can …",145,[[["usize",15]],[["error",3],["result",4]]]],[14,"audio_chunk","","Create an audio chunk.",null,null],[14,"vst_init","","A wrapper around the <code>plugin_main!</code> macro from the <code>vst</code> …",null,null],[11,"from","rsynth::buffer","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from_sample_","","",0,[[]]],[11,"to_sample_","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from_sample_","","",1,[[]]],[11,"to_sample_","","",1,[[]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"into_iter","","",146,[[]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from_sample_","","",146,[[]]],[11,"to_sample_","","",146,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from_sample_","","",2,[[]]],[11,"to_sample_","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from_sample_","","",3,[[]]],[11,"to_sample_","","",3,[[]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"into_iter","","",147,[[]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from_sample_","","",147,[[]]],[11,"to_sample_","","",147,[[]]],[11,"from","rsynth::backend::combined::dummy","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from_sample_","","",4,[[]]],[11,"to_sample_","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from_sample_","","",5,[[]]],[11,"to_sample_","","",5,[[]]],[11,"from","rsynth::backend::combined::hound","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from_sample_","","",7,[[]]],[11,"to_sample_","","",7,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from_sample_","","",6,[[]]],[11,"to_sample_","","",6,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from_sample_","","",8,[[]]],[11,"to_sample_","","",8,[[]]],[11,"from","rsynth::backend::combined::memory","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from_sample_","","",9,[[]]],[11,"to_sample_","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from_sample_","","",10,[[]]],[11,"to_sample_","","",10,[[]]],[11,"from","rsynth::backend::combined::midly::midly::io","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from_sample_","","",148,[[]]],[11,"to_sample_","","",148,[[]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from_sample_","","",149,[[]]],[11,"to_sample_","","",149,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from_sample_","","",13,[[]]],[11,"to_sample_","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from_sample_","","",14,[[]]],[11,"to_sample_","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from_sample_","","",15,[[]]],[11,"to_sample_","","",15,[[]]],[11,"from","rsynth::backend::combined::midly::midly::live","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from_sample_","","",16,[[]]],[11,"to_sample_","","",16,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from_sample_","","",18,[[]]],[11,"to_sample_","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from_sample_","","",19,[[]]],[11,"to_sample_","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from_sample_","","",20,[[]]],[11,"to_sample_","","",20,[[]]],[11,"from","rsynth::backend::combined::midly::midly::stream","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from_sample_","","",150,[[]]],[11,"to_sample_","","",150,[[]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"to_owned","","",151,[[]]],[11,"clone_into","","",151,[[]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from_sample_","","",151,[[]]],[11,"to_sample_","","",151,[[]]],[11,"from","rsynth::backend::combined::midly::midly::num","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"to_string","","",152,[[],["string",3]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from_sample_","","",152,[[]]],[11,"to_sample_","","",152,[[]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"to_string","","",153,[[],["string",3]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from_sample_","","",153,[[]]],[11,"to_sample_","","",153,[[]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"to_string","","",154,[[],["string",3]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from_sample_","","",154,[[]]],[11,"to_sample_","","",154,[[]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"to_string","","",155,[[],["string",3]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from_sample_","","",155,[[]]],[11,"to_sample_","","",155,[[]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"to_string","","",156,[[],["string",3]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from_sample_","","",156,[[]]],[11,"to_sample_","","",156,[[]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"to_string","","",157,[[],["string",3]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from_sample_","","",157,[[]]],[11,"to_sample_","","",157,[[]]],[11,"from","rsynth::backend::combined::midly::midly","",158,[[]]],[11,"into","","",158,[[]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from_sample_","","",158,[[]]],[11,"to_sample_","","",158,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from_sample_","","",22,[[]]],[11,"to_sample_","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from_sample_","","",23,[[]]],[11,"to_sample_","","",23,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"to_string","","",159,[[],["string",3]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from_sample_","","",159,[[]]],[11,"to_sample_","","",159,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from_sample_","","",24,[[]]],[11,"to_sample_","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from_sample_","","",25,[[]]],[11,"to_sample_","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from_sample_","","",26,[[]]],[11,"to_sample_","","",26,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from_sample_","","",34,[[]]],[11,"to_sample_","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from_sample_","","",35,[[]]],[11,"to_sample_","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from_sample_","","",36,[[]]],[11,"to_sample_","","",36,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from_sample_","","",38,[[]]],[11,"to_sample_","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from_sample_","","",39,[[]]],[11,"to_sample_","","",39,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from_sample_","","",160,[[]]],[11,"to_sample_","","",160,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from_sample_","","",40,[[]]],[11,"to_sample_","","",40,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"into_iter","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from_sample_","","",161,[[]]],[11,"to_sample_","","",161,[[]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"into_iter","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from_sample_","","",162,[[]]],[11,"to_sample_","","",162,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from_sample_","","",41,[[]]],[11,"to_sample_","","",41,[[]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"into_iter","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from_sample_","","",163,[[]]],[11,"to_sample_","","",163,[[]]],[11,"from","rsynth::backend::combined::midly","",42,[[]]],[11,"into","","",42,[[]]],[11,"into_iter","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from_sample_","","",42,[[]]],[11,"to_sample_","","",42,[[]]],[11,"from","rsynth::backend::combined","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from_sample_","","",46,[[]]],[11,"to_sample_","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from_sample_","","",47,[[]]],[11,"to_sample_","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from_sample_","","",48,[[]]],[11,"to_sample_","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from_sample_","","",49,[[]]],[11,"to_sample_","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"into_iter","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from_sample_","","",50,[[]]],[11,"to_sample_","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from_sample_","","",51,[[]]],[11,"to_sample_","","",51,[[]]],[11,"from","rsynth::backend::jack_backend::jack","",164,[[]]],[11,"into","","",164,[[]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from_sample_","","",164,[[]]],[11,"to_sample_","","",164,[[]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from_sample_","","",165,[[]]],[11,"to_sample_","","",165,[[]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from_sample_","","",166,[[]]],[11,"to_sample_","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from_sample_","","",167,[[]]],[11,"to_sample_","","",167,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from_sample_","","",52,[[]]],[11,"to_sample_","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from_sample_","","",53,[[]]],[11,"to_sample_","","",53,[[]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from_sample_","","",168,[[]]],[11,"to_sample_","","",168,[[]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from_sample_","","",169,[[]]],[11,"to_sample_","","",169,[[]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from_sample_","","",56,[[]]],[11,"to_sample_","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"to_string","","",57,[[],["string",3]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from_sample_","","",57,[[]]],[11,"to_sample_","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from_sample_","","",58,[[]]],[11,"to_sample_","","",58,[[]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from_sample_","","",170,[[]]],[11,"to_sample_","","",170,[[]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from_sample_","","",171,[[]]],[11,"to_sample_","","",171,[[]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from_sample_","","",172,[[]]],[11,"to_sample_","","",172,[[]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"into_iter","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from_sample_","","",173,[[]]],[11,"to_sample_","","",173,[[]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from_sample_","","",174,[[]]],[11,"to_sample_","","",174,[[]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from_sample_","","",175,[[]]],[11,"to_sample_","","",175,[[]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from_sample_","","",176,[[]]],[11,"to_sample_","","",176,[[]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from_sample_","","",177,[[]]],[11,"to_sample_","","",177,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from_sample_","","",60,[[]]],[11,"to_sample_","","",60,[[]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from_sample_","","",178,[[]]],[11,"to_sample_","","",178,[[]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from_sample_","","",179,[[]]],[11,"to_sample_","","",179,[[]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from_sample_","","",180,[[]]],[11,"to_sample_","","",180,[[]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from_sample_","","",181,[[]]],[11,"to_sample_","","",181,[[]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from_sample_","","",182,[[]]],[11,"to_sample_","","",182,[[]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from_sample_","","",183,[[]]],[11,"to_sample_","","",183,[[]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from_sample_","","",184,[[]]],[11,"to_sample_","","",184,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from_sample_","","",61,[[]]],[11,"to_sample_","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_owned","","",62,[[]]],[11,"clone_into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from_sample_","","",62,[[]]],[11,"to_sample_","","",62,[[]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from_sample_","","",185,[[]]],[11,"to_sample_","","",185,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from_sample_","","",63,[[]]],[11,"to_sample_","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from_sample_","","",64,[[]]],[11,"to_sample_","","",64,[[]]],[11,"from","rsynth::backend::jack_backend","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from_sample_","","",65,[[]]],[11,"to_sample_","","",65,[[]]],[11,"from","rsynth::backend::vst_backend::vst::api","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from_sample_","","",66,[[]]],[11,"to_sample_","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from_sample_","","",67,[[]]],[11,"to_sample_","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from_sample_","","",68,[[]]],[11,"to_sample_","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from_sample_","","",69,[[]]],[11,"to_sample_","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from_sample_","","",70,[[]]],[11,"to_sample_","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from_sample_","","",71,[[]]],[11,"to_sample_","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from_sample_","","",72,[[]]],[11,"to_sample_","","",72,[[]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from_sample_","","",73,[[]]],[11,"to_sample_","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from_sample_","","",74,[[]]],[11,"to_sample_","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from_sample_","","",75,[[]]],[11,"to_sample_","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from_sample_","","",76,[[]]],[11,"to_sample_","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from_sample_","","",77,[[]]],[11,"to_sample_","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from_sample_","","",78,[[]]],[11,"to_sample_","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from_sample_","","",79,[[]]],[11,"to_sample_","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from_sample_","","",80,[[]]],[11,"to_sample_","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from_sample_","","",81,[[]]],[11,"to_sample_","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from_sample_","","",82,[[]]],[11,"to_sample_","","",82,[[]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from_sample_","","",186,[[]]],[11,"to_sample_","","",186,[[]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from_sample_","","",187,[[]]],[11,"to_sample_","","",187,[[]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from_sample_","","",188,[[]]],[11,"to_sample_","","",188,[[]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from_sample_","","",189,[[]]],[11,"to_sample_","","",189,[[]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from_sample_","","",190,[[]]],[11,"to_sample_","","",190,[[]]],[11,"from","rsynth::backend::vst_backend::vst::buffer","",191,[[]]],[11,"into","","",191,[[]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"from_sample_","","",191,[[]]],[11,"to_sample_","","",191,[[]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"into_iter","","",192,[[]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"from_sample_","","",192,[[]]],[11,"to_sample_","","",192,[[]]],[11,"from","","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"from_sample_","","",193,[[]]],[11,"to_sample_","","",193,[[]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"into_iter","","",194,[[]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"from_sample_","","",194,[[]]],[11,"to_sample_","","",194,[[]]],[11,"from","","",195,[[]]],[11,"into","","",195,[[]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"from_sample_","","",195,[[]]],[11,"to_sample_","","",195,[[]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"into_iter","","",196,[[]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"from_sample_","","",196,[[]]],[11,"to_sample_","","",196,[[]]],[11,"from","","",197,[[]]],[11,"into","","",197,[[]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"from_sample_","","",197,[[]]],[11,"to_sample_","","",197,[[]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",198,[[]]],[11,"into","","",198,[[]]],[11,"borrow","","",198,[[]]],[11,"borrow_mut","","",198,[[]]],[11,"try_from","","",198,[[],["result",4]]],[11,"try_into","","",198,[[],["result",4]]],[11,"type_id","","",198,[[],["typeid",3]]],[11,"from_sample_","","",198,[[]]],[11,"to_sample_","","",198,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from_sample_","","",84,[[]]],[11,"to_sample_","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from_sample_","","",85,[[]]],[11,"to_sample_","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from_sample_","","",86,[[]]],[11,"to_sample_","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from_sample_","","",87,[[]]],[11,"to_sample_","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from_sample_","","",88,[[]]],[11,"to_sample_","","",88,[[]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from_sample_","","",90,[[]]],[11,"to_sample_","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from_sample_","","",91,[[]]],[11,"to_sample_","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from_sample_","","",92,[[]]],[11,"to_sample_","","",92,[[]]],[11,"from","rsynth::backend::vst_backend::vst::event","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from_sample_","","",93,[[]]],[11,"to_sample_","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from_sample_","","",94,[[]]],[11,"to_sample_","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from_sample_","","",95,[[]]],[11,"to_sample_","","",95,[[]]],[11,"from","rsynth::backend::vst_backend::vst::host","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_string","","",97,[[],["string",3]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from_sample_","","",97,[[]]],[11,"to_sample_","","",97,[[]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"from_sample_","","",199,[[]]],[11,"to_sample_","","",199,[[]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"from_sample_","","",200,[[]]],[11,"to_sample_","","",200,[[]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"from_sample_","","",201,[[]]],[11,"to_sample_","","",201,[[]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from_sample_","","",98,[[]]],[11,"to_sample_","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from_sample_","","",99,[[]]],[11,"to_sample_","","",99,[[]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from_sample_","","",100,[[]]],[11,"to_sample_","","",100,[[]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"to_owned","","",202,[[]]],[11,"clone_into","","",202,[[]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from_sample_","","",202,[[]]],[11,"to_sample_","","",202,[[]]],[11,"from","rsynth::backend::vst_backend::vst::util","",203,[[]]],[11,"into","","",203,[[]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from_sample_","","",203,[[]]],[11,"to_sample_","","",203,[[]]],[11,"from","","",204,[[]]],[11,"into","","",204,[[]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"from_sample_","","",204,[[]]],[11,"to_sample_","","",204,[[]]],[11,"from","","",205,[[]]],[11,"into","","",205,[[]]],[11,"into_iter","","",205,[[]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"from_sample_","","",205,[[]]],[11,"to_sample_","","",205,[[]]],[11,"from","rsynth::backend::vst_backend","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from_sample_","","",104,[[]]],[11,"to_sample_","","",104,[[]]],[11,"from","rsynth::envelope::staircase_envelope","",206,[[]]],[11,"into","","",206,[[]]],[11,"into_iter","","",206,[[]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"from_sample_","","",206,[[]]],[11,"to_sample_","","",206,[[]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from_sample_","","",207,[[]]],[11,"to_sample_","","",207,[[]]],[11,"from","rsynth::envelope","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from_sample_","","",106,[[]]],[11,"to_sample_","","",106,[[]]],[11,"from","rsynth::event::event_queue","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from_sample_","","",110,[[]]],[11,"to_sample_","","",110,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from_sample_","","",108,[[]]],[11,"to_sample_","","",108,[[]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from_sample_","","",208,[[]]],[11,"to_sample_","","",208,[[]]],[11,"from","","",209,[[]]],[11,"into","","",209,[[]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"from_sample_","","",209,[[]]],[11,"to_sample_","","",209,[[]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from_sample_","","",210,[[]]],[11,"to_sample_","","",210,[[]]],[11,"from","","",211,[[]]],[11,"into","","",211,[[]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"from_sample_","","",211,[[]]],[11,"to_sample_","","",211,[[]]],[11,"from","","",212,[[]]],[11,"into","","",212,[[]]],[11,"into_iter","","",212,[[]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"from_sample_","","",212,[[]]],[11,"to_sample_","","",212,[[]]],[11,"from","rsynth::event","",213,[[]]],[11,"into","","",213,[[]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"from_sample_","","",213,[[]]],[11,"to_sample_","","",213,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from_sample_","","",114,[[]]],[11,"to_sample_","","",114,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from_sample_","","",115,[[]]],[11,"to_sample_","","",115,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"to_string","","",116,[[],["string",3]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from_sample_","","",116,[[]]],[11,"to_sample_","","",116,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from_sample_","","",117,[[]]],[11,"to_sample_","","",117,[[]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from_sample_","","",118,[[]]],[11,"to_sample_","","",118,[[]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from_sample_","","",119,[[]]],[11,"to_sample_","","",119,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from_sample_","","",120,[[]]],[11,"to_sample_","","",120,[[]]],[11,"from","rsynth::meta","",214,[[]]],[11,"into","","",214,[[]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from_sample_","","",214,[[]]],[11,"to_sample_","","",214,[[]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from_sample_","","",215,[[]]],[11,"to_sample_","","",215,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from_sample_","","",125,[[]]],[11,"to_sample_","","",125,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from_sample_","","",126,[[]]],[11,"to_sample_","","",126,[[]]],[11,"from","rsynth::test_utilities","",216,[[]]],[11,"into","","",216,[[]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"from_sample_","","",216,[[]]],[11,"to_sample_","","",216,[[]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from_sample_","","",127,[[]]],[11,"to_sample_","","",127,[[]]],[11,"from","rsynth::utilities::polyphony::simple_event_dispatching","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from_sample_","","",128,[[]]],[11,"to_sample_","","",128,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from_sample_","","",129,[[]]],[11,"to_sample_","","",129,[[]]],[11,"from","rsynth::utilities::polyphony","",130,[[]]],[11,"into","","",130,[[]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from_sample_","","",130,[[]]],[11,"to_sample_","","",130,[[]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from_sample_","","",131,[[]]],[11,"to_sample_","","",131,[[]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from_sample_","","",217,[[]]],[11,"to_sample_","","",217,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from_sample_","","",133,[[]]],[11,"to_sample_","","",133,[[]]],[11,"from","rsynth::vecstorage","",218,[[]]],[11,"into","","",218,[[]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"from_sample_","","",218,[[]]],[11,"to_sample_","","",218,[[]]],[11,"drop","","",218,[[]]],[11,"fmt","","",218,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::io","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::live","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::stream","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::io","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::io","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::stream","",150,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",158,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::io","",149,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",163,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::live","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::live","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::io","",148,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::live","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",156,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",159,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::combined::midly::midly::num","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",152,[[["formatter",3]],[["error",3],["result",4]]]],[11,"tell","rsynth::backend::combined::midly::midly::io","",149,[[],[["u64",15],["result",4]]]],[11,"write_at","","",149,[[["u64",15]],["result",4]]],[11,"tell","","",148,[[],[["result",4],["u64",15]]]],[11,"write_at","","",148,[[["u64",15]],["result",4]]],[11,"tell","","",15,[[],[["result",4],["error",3],["u64",15]]]],[11,"write_at","","",15,[[["u64",15]],[["result",4],["error",3]]]],[11,"hash","rsynth::backend::combined::midly::midly","",40,[[]]],[11,"hash","","",35,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::num","",153,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::live","",19,[[]]],[11,"hash","rsynth::backend::combined::midly::midly","",34,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",39,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::live","",16,[[]]],[11,"hash","rsynth::backend::combined::midly::midly","",41,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::num","",156,[[]]],[11,"hash","rsynth::backend::combined::midly::midly","",160,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::num","",154,[[]]],[11,"hash","rsynth::backend::combined::midly::midly","",22,[[]]],[11,"hash","","",26,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::num","",155,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::live","",18,[[]]],[11,"hash","rsynth::backend::combined::midly::midly","",23,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::stream","",151,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::num","",157,[[]]],[11,"hash","","",152,[[]]],[11,"hash","rsynth::backend::combined::midly::midly","",36,[[]]],[11,"hash","rsynth::backend::combined::midly::midly::live","",20,[[]]],[11,"push","rsynth::backend::combined::midly::midly::stream","",151,[[],["result",4]]],[11,"clear","","",151,[[]]],[11,"as_slice","","",151,[[]]],[11,"write","rsynth::backend::combined::midly::midly::io","",14,[[],[["result",4],["error",3]]]],[11,"invalid_input","","",14,[[["str",15]],["error",3]]],[11,"write","","",15,[[],[["result",4],["error",3]]]],[11,"invalid_input","","",15,[[["str",15]],["error",3]]],[11,"make_seekable","","",15,[[],[["seekablewrap",3],["option",4]]]],[11,"write","","",148,[[],["result",4]]],[11,"invalid_input","","",148,[[["str",15]]]],[11,"write","","",149,[[],["result",4]]],[11,"invalid_input","","",149,[[["str",15]],["cursorerror",4]]],[11,"make_seekable","","",149,[[],[["cursor",3],["option",4]]]],[11,"partial_cmp","rsynth::backend::combined::midly::midly::num","",156,[[["u4",3]],[["option",4],["ordering",4]]]],[11,"lt","","",156,[[["u4",3]],["bool",15]]],[11,"le","","",156,[[["u4",3]],["bool",15]]],[11,"gt","","",156,[[["u4",3]],["bool",15]]],[11,"ge","","",156,[[["u4",3]],["bool",15]]],[11,"partial_cmp","","",152,[[["u14",3]],[["option",4],["ordering",4]]]],[11,"lt","","",152,[[["u14",3]],["bool",15]]],[11,"le","","",152,[[["u14",3]],["bool",15]]],[11,"gt","","",152,[[["u14",3]],["bool",15]]],[11,"ge","","",152,[[["u14",3]],["bool",15]]],[11,"partial_cmp","","",154,[[["u24",3]],[["option",4],["ordering",4]]]],[11,"lt","","",154,[[["u24",3]],["bool",15]]],[11,"le","","",154,[[["u24",3]],["bool",15]]],[11,"gt","","",154,[[["u24",3]],["bool",15]]],[11,"ge","","",154,[[["u24",3]],["bool",15]]],[11,"partial_cmp","","",155,[[["u28",3]],[["option",4],["ordering",4]]]],[11,"lt","","",155,[[["u28",3]],["bool",15]]],[11,"le","","",155,[[["u28",3]],["bool",15]]],[11,"gt","","",155,[[["u28",3]],["bool",15]]],[11,"ge","","",155,[[["u28",3]],["bool",15]]],[11,"partial_cmp","","",157,[[["u7",3]],[["option",4],["ordering",4]]]],[11,"lt","","",157,[[["u7",3]],["bool",15]]],[11,"le","","",157,[[["u7",3]],["bool",15]]],[11,"gt","","",157,[[["u7",3]],["bool",15]]],[11,"ge","","",157,[[["u7",3]],["bool",15]]],[11,"partial_cmp","","",153,[[["u15",3]],[["option",4],["ordering",4]]]],[11,"lt","","",153,[[["u15",3]],["bool",15]]],[11,"le","","",153,[[["u15",3]],["bool",15]]],[11,"gt","","",153,[[["u15",3]],["bool",15]]],[11,"ge","","",153,[[["u15",3]],["bool",15]]],[11,"from","","Lossy convertion, loses top bit.",153,[[["u16",15]],["u15",3]]],[11,"from","","Lossy convertion, loses top bit.",152,[[["u16",15]],["u14",3]]],[11,"from","","Lossy convertion, loses top bit.",157,[[["u8",15]],["u7",3]]],[11,"from","rsynth::backend::combined::midly::midly","",159,[[["errorkind",4]],["error",3]]],[11,"from","rsynth::backend::combined::midly::midly::num","Lossy convertion, loses top bit.",154,[[["u32",15]],["u24",3]]],[11,"from","","Lossy convertion, loses top bit.",155,[[["u32",15]],["u28",3]]],[11,"from","","Lossy convertion, loses top bit.",156,[[["u8",15]],["u4",3]]],[11,"source","rsynth::backend::combined::midly::midly","",159,[[],[["option",4],["error",8]]]],[11,"size_hint","","",163,[[]]],[11,"next","","",163,[[],[["result",4],["option",4]]]],[11,"next","","",161,[[],["option",4]]],[11,"next","","",162,[[],["option",4]]],[11,"default","rsynth::backend::combined::midly::midly::num","",152,[[],["u14",3]]],[11,"default","rsynth::backend::combined::midly::midly::io","",14,[[],["iowrap",3]]],[11,"default","rsynth::backend::combined::midly::midly::num","",154,[[],["u24",3]]],[11,"default","rsynth::backend::combined::midly::midly::io","",15,[[],["seekablewrap",3]]],[11,"default","rsynth::backend::combined::midly::midly::num","",156,[[],["u4",3]]],[11,"default","","",157,[[],["u7",3]]],[11,"default","","",155,[[],["u28",3]]],[11,"default","rsynth::backend::combined::midly::midly::stream","",151,[[],["defaultbuffer",3]]],[11,"default","","",150,[[],["midistream",3]]],[11,"default","rsynth::backend::combined::midly::midly::num","",153,[[],["u15",3]]],[11,"default","rsynth::backend::combined::midly::midly","",158,[[],["arena",3]]],[11,"clone","rsynth::backend::combined::midly::midly::stream","",150,[[],["midistream",3]]],[11,"clone","rsynth::backend::combined::midly::midly","",26,[[],["midimessage",4]]],[11,"clone","","",40,[[],["timing",4]]],[11,"clone","","",163,[[],["trackiter",3]]],[11,"clone","","",160,[[],["smptetime",3]]],[11,"clone","","",39,[[],["fps",4]]],[11,"clone","rsynth::backend::combined::midly::midly::io","",14,[[],["iowrap",3]]],[11,"clone","rsynth::backend::combined::midly::midly::num","",153,[[],["u15",3]]],[11,"clone","rsynth::backend::combined::midly::midly::live","",19,[[],["mtcquarterframemessage",4]]],[11,"clone","rsynth::backend::combined::midly::midly","",34,[[],["pitchbend",3]]],[11,"clone","","",38,[[],["format",4]]],[11,"clone","","",25,[[],["metamessage",4]]],[11,"clone","rsynth::backend::combined::midly::midly::num","",155,[[],["u28",3]]],[11,"clone","rsynth::backend::combined::midly::midly","",41,[[],["header",3]]],[11,"clone","","",23,[[],["smfbytemap",3]]],[11,"clone","rsynth::backend::combined::midly::midly::stream","",151,[[],["defaultbuffer",3]]],[11,"clone","rsynth::backend::combined::midly::midly","",35,[[],["trackevent",3]]],[11,"clone","rsynth::backend::combined::midly::midly::live","",20,[[],["systemrealtime",4]]],[11,"clone","","",18,[[],["systemcommon",4]]],[11,"clone","rsynth::backend::combined::midly::midly","",22,[[],["smf",3]]],[11,"clone","","",24,[[],["errorkind",4]]],[11,"clone","rsynth::backend::combined::midly::midly::num","",154,[[],["u24",3]]],[11,"clone","rsynth::backend::combined::midly::midly::live","",16,[[],["liveevent",4]]],[11,"clone","rsynth::backend::combined::midly::midly::num","",156,[[],["u4",3]]],[11,"clone","","",157,[[],["u7",3]]],[11,"clone","rsynth::backend::combined::midly::midly::io","",13,[[],["cursorerror",4]]],[11,"clone","rsynth::backend::combined::midly::midly","",36,[[],["trackeventkind",4]]],[11,"clone","","",161,[[],["eventbytemapiter",3]]],[11,"clone","rsynth::backend::combined::midly::midly::io","",148,[[],["notseekable",3]]],[11,"clone","rsynth::backend::combined::midly::midly","",159,[[],["error",3]]],[11,"clone","","",162,[[],["eventiter",3]]],[11,"clone","rsynth::backend::combined::midly::midly::num","",152,[[],["u14",3]]],[11,"clone","rsynth::backend::combined::midly::midly::io","",15,[[],["seekablewrap",3]]],[11,"drop","rsynth::backend::combined::midly::midly","",158,[[]]],[11,"cmp","rsynth::backend::combined::midly::midly::num","",153,[[["u15",3]],["ordering",4]]],[11,"cmp","","",154,[[["u24",3]],["ordering",4]]],[11,"cmp","","",157,[[["u7",3]],["ordering",4]]],[11,"cmp","","",156,[[["u4",3]],["ordering",4]]],[11,"cmp","","",152,[[["u14",3]],["ordering",4]]],[11,"cmp","","",155,[[["u28",3]],["ordering",4]]],[11,"eq","rsynth::backend::combined::midly::midly","",38,[[["format",4]],["bool",15]]],[11,"eq","rsynth::backend::combined::midly::midly::num","",156,[[["u4",3]],["bool",15]]],[11,"ne","","",156,[[["u4",3]],["bool",15]]],[11,"eq","","",153,[[["u15",3]],["bool",15]]],[11,"ne","","",153,[[["u15",3]],["bool",15]]],[11,"eq","rsynth::backend::combined::midly::midly","",25,[[["metamessage",4]],["bool",15]]],[11,"ne","","",25,[[["metamessage",4]],["bool",15]]],[11,"eq","","",22,[[["smf",3]],["bool",15]]],[11,"ne","","",22,[[["smf",3]],["bool",15]]],[11,"eq","rsynth::backend::combined::midly::midly::live","",16,[[["liveevent",4]],["bool",15]]],[11,"ne","","",16,[[["liveevent",4]],["bool",15]]],[11,"eq","rsynth::backend::combined::midly::midly::num","",152,[[["u14",3]],["bool",15]]],[11,"ne","","",152,[[["u14",3]],["bool",15]]],[11,"eq","rsynth::backend::combined::midly::midly","",41,[[["header",3]],["bool",15]]],[11,"ne","","",41,[[["header",3]],["bool",15]]],[11,"eq","","",36,[[["trackeventkind",4]],["bool",15]]],[11,"ne","","",36,[[["trackeventkind",4]],["bool",15]]],[11,"eq","","",160,[[["smptetime",3]],["bool",15]]],[11,"ne","","",160,[[["smptetime",3]],["bool",15]]],[11,"eq","","",35,[[["trackevent",3]],["bool",15]]],[11,"ne","","",35,[[["trackevent",3]],["bool",15]]],[11,"eq","","",34,[[["pitchbend",3]],["bool",15]]],[11,"ne","","",34,[[["pitchbend",3]],["bool",15]]],[11,"eq","rsynth::backend::combined::midly::midly::num","",157,[[["u7",3]],["bool",15]]],[11,"ne","","",157,[[["u7",3]],["bool",15]]],[11,"eq","rsynth::backend::combined::midly::midly::live","",19,[[["mtcquarterframemessage",4]],["bool",15]]],[11,"eq","","",18,[[["systemcommon",4]],["bool",15]]],[11,"ne","","",18,[[["systemcommon",4]],["bool",15]]],[11,"eq","rsynth::backend::combined::midly::midly","",39,[[["fps",4]],["bool",15]]],[11,"eq","","",23,[[["smfbytemap",3]],["bool",15]]],[11,"ne","","",23,[[["smfbytemap",3]],["bool",15]]],[11,"eq","","",26,[[["midimessage",4]],["bool",15]]],[11,"ne","","",26,[[["midimessage",4]],["bool",15]]],[11,"eq","rsynth::backend::combined::midly::midly::live","",20,[[["systemrealtime",4]],["bool",15]]],[11,"ne","","",20,[[["systemrealtime",4]],["bool",15]]],[11,"eq","rsynth::backend::combined::midly::midly::num","",154,[[["u24",3]],["bool",15]]],[11,"ne","","",154,[[["u24",3]],["bool",15]]],[11,"eq","rsynth::backend::combined::midly::midly","",40,[[["timing",4]],["bool",15]]],[11,"ne","","",40,[[["timing",4]],["bool",15]]],[11,"eq","rsynth::backend::combined::midly::midly::num","",155,[[["u28",3]],["bool",15]]],[11,"ne","","",155,[[["u28",3]],["bool",15]]],[11,"fmt","rsynth::backend::jack_backend::jack","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",185,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",175,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",173,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",176,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",170,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",171,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",178,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",56,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",174,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",168,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",172,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",57,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deref","","",169,[[],["usize",15]]],[11,"deref","","",180,[[],["usize",15]]],[11,"deref","","",179,[[],["usize",15]]],[11,"hash","","",167,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",166,[[]]],[11,"partial_cmp","","",177,[[["portflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",177,[[["portflags",3]],["bool",15]]],[11,"le","","",177,[[["portflags",3]],["bool",15]]],[11,"gt","","",177,[[["portflags",3]],["bool",15]]],[11,"ge","","",177,[[["portflags",3]],["bool",15]]],[11,"partial_cmp","","",176,[[["port",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",166,[[["clientoptions",3]],[["option",4],["ordering",4]]]],[11,"lt","","",166,[[["clientoptions",3]],["bool",15]]],[11,"le","","",166,[[["clientoptions",3]],["bool",15]]],[11,"gt","","",166,[[["clientoptions",3]],["bool",15]]],[11,"ge","","",166,[[["clientoptions",3]],["bool",15]]],[11,"partial_cmp","","",167,[[["clientstatus",3]],[["option",4],["ordering",4]]]],[11,"lt","","",167,[[["clientstatus",3]],["bool",15]]],[11,"le","","",167,[[["clientstatus",3]],["bool",15]]],[11,"gt","","",167,[[["clientstatus",3]],["bool",15]]],[11,"ge","","",167,[[["clientstatus",3]],["bool",15]]],[11,"write","","",183,[[],[["usize",15],["result",4],["error",3]]]],[11,"flush","","",183,[[],[["result",4],["error",3]]]],[11,"fmt","","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"read","","",182,[[],[["usize",15],["result",4],["error",3]]]],[11,"default","","",185,[[],["transportposition",3]]],[11,"default","","",171,[[],["audioout",3]]],[11,"default","","",174,[[],["midiout",3]]],[11,"default","","",56,[[],["control",4]]],[11,"default","","",178,[[],["unowned",3]]],[11,"default","","",170,[[],["audioin",3]]],[11,"default","","",61,[[],["transportbbt",3]]],[11,"default","","",60,[[],["rawmidi",3]]],[11,"default","","",172,[[],["midiin",3]]],[11,"from_iter","","",167,[[],["clientstatus",3]]],[11,"from_iter","","",166,[[],["clientoptions",3]]],[11,"from_iter","","",177,[[],["portflags",3]]],[11,"cmp","","",166,[[["clientoptions",3]],["ordering",4]]],[11,"cmp","","",177,[[["portflags",3]],["ordering",4]]],[11,"cmp","","",176,[[["port",3]],["ordering",4]]],[11,"cmp","","",167,[[["clientstatus",3]],["ordering",4]]],[11,"clone","","",176,[[],[["port",3],["unowned",3]]]],[11,"clone","","",53,[[],["cycletimes",3]]],[11,"clone","","",171,[[],["audioout",3]]],[11,"clone","","",58,[[],["latencytype",4]]],[11,"clone","","",61,[[],["transportbbt",3]]],[11,"clone","","",57,[[],["error",4]]],[11,"clone","","",60,[[],["rawmidi",3]]],[11,"clone","","",173,[[],["midiiter",3]]],[11,"clone","","",56,[[],["control",4]]],[11,"clone","","",177,[[],["portflags",3]]],[11,"clone","","",63,[[],["transportstate",4]]],[11,"clone","","",170,[[],["audioin",3]]],[11,"clone","","",62,[[],["transportbbtvalidationerror",4]]],[11,"clone","","",166,[[],["clientoptions",3]]],[11,"clone","","",167,[[],["clientstatus",3]]],[11,"clone","","",174,[[],["midiout",3]]],[11,"clone","","",172,[[],["midiin",3]]],[11,"process","","",52,[[["processscope",3],["client",3]],["control",4]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"jack_port_type","","Panics on call since the <code>Unowned</code> spec can\'t be used to …",178,[[],["str",15]]],[11,"jack_flags","","Panics on call since the <code>Unowned</code> spec can\'t be used to …",178,[[],["portflags",3]]],[11,"jack_buffer_size","","Panics on call since the <code>Unowned</code> spec can\'t be used to …",178,[[],["u64",15]]],[11,"jack_port_type","","",170,[[],["str",15]]],[11,"jack_flags","","",170,[[],["portflags",3]]],[11,"jack_buffer_size","","",170,[[],["u64",15]]],[11,"jack_port_type","","",171,[[],["str",15]]],[11,"jack_flags","","",171,[[],["portflags",3]]],[11,"jack_buffer_size","","",171,[[],["u64",15]]],[11,"jack_port_type","","",174,[[],["str",15]]],[11,"jack_flags","","",174,[[],["portflags",3]]],[11,"jack_buffer_size","","",174,[[],["u64",15]]],[11,"jack_port_type","","",172,[[],["str",15]]],[11,"jack_flags","","",172,[[],["portflags",3]]],[11,"jack_buffer_size","","",172,[[],["u64",15]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitxor_assign","","Toggles the set of flags.",166,[[["clientoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",167,[[["clientstatus",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",177,[[["portflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",166,[[["clientoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",167,[[["clientstatus",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",177,[[["portflags",3]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",167,[[["clientstatus",3]],["clientstatus",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",177,[[["portflags",3]],["portflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",166,[[["clientoptions",3]],["clientoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",167,[[["clientstatus",3]],["clientstatus",3]]],[11,"bitor","","Returns the union of the two sets of flags.",177,[[["portflags",3]],["portflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",166,[[["clientoptions",3]],["clientoptions",3]]],[11,"not","","Returns the complement of this set of flags.",167,[[],["clientstatus",3]]],[11,"not","","Returns the complement of this set of flags.",177,[[],["portflags",3]]],[11,"not","","Returns the complement of this set of flags.",166,[[],["clientoptions",3]]],[11,"initialize","","",180,[[["port_type_size",3]]]],[11,"initialize","","",179,[[["port_name_size",3]]]],[11,"initialize","","",169,[[["client_name_size",3]]]],[11,"extend","","",167,[[]]],[11,"extend","","",166,[[]]],[11,"extend","","",177,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",167,[[["clientstatus",3]],["clientstatus",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",166,[[["clientoptions",3]],["clientoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",177,[[["portflags",3]],["portflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",177,[[["portflags",3]],["portflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",166,[[["clientoptions",3]],["clientoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",167,[[["clientstatus",3]],["clientstatus",3]]],[11,"bitor_assign","","Adds the set of flags.",177,[[["portflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",167,[[["clientstatus",3]]]],[11,"bitor_assign","","Adds the set of flags.",166,[[["clientoptions",3]]]],[11,"next","","",173,[[],["option",4]]],[11,"size_hint","","",173,[[]]],[11,"count","","",173,[[],["usize",15]]],[11,"last","","",173,[[],["option",4]]],[11,"nth","","",173,[[["usize",15]],["option",4]]],[11,"fmt","","",167,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",166,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",177,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",167,[[["clientstatus",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",177,[[["portflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",166,[[["clientoptions",3]]]],[11,"drop","","Deactivate and close the client.",164,[[]]],[11,"drop","","",165,[[]]],[11,"drop","","",181,[[]]],[11,"drop","","",182,[[]]],[11,"drop","","",183,[[]]],[11,"eq","","",57,[[["error",4]],["bool",15]]],[11,"ne","","",57,[[["error",4]],["bool",15]]],[11,"eq","","",177,[[["portflags",3]],["bool",15]]],[11,"ne","","",177,[[["portflags",3]],["bool",15]]],[11,"eq","","",60,[[["rawmidi",3]],["bool",15]]],[11,"ne","","",60,[[["rawmidi",3]],["bool",15]]],[11,"eq","","",167,[[["clientstatus",3]],["bool",15]]],[11,"ne","","",167,[[["clientstatus",3]],["bool",15]]],[11,"eq","","",61,[[["transportbbt",3]],["bool",15]]],[11,"ne","","",61,[[["transportbbt",3]],["bool",15]]],[11,"eq","","",62,[[["transportbbtvalidationerror",4]],["bool",15]]],[11,"eq","","",53,[[["cycletimes",3]],["bool",15]]],[11,"ne","","",53,[[["cycletimes",3]],["bool",15]]],[11,"eq","","",166,[[["clientoptions",3]],["bool",15]]],[11,"ne","","",166,[[["clientoptions",3]],["bool",15]]],[11,"eq","","",63,[[["transportstate",4]],["bool",15]]],[11,"eq","","",56,[[["control",4]],["bool",15]]],[11,"eq","","",176,[[["port",3]],["bool",15]]],[11,"fmt","rsynth::backend::vst_backend::vst::plugin","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::plugin","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::editor","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::plugin","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::host","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::host","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","rsynth::backend::vst_backend::vst::api","",190,[[]]],[11,"hash","","",186,[[]]],[11,"hash","","",189,[[]]],[11,"hash","","",188,[[]]],[11,"hash","","",187,[[]]],[11,"index","rsynth::backend::vst_backend::vst::buffer","",195,[[["usize",15]]]],[11,"index","","",193,[[["usize",15]]]],[11,"partial_cmp","rsynth::backend::vst_backend::vst::api","",188,[[["modifierkey",3]],[["option",4],["ordering",4]]]],[11,"lt","","",188,[[["modifierkey",3]],["bool",15]]],[11,"le","","",188,[[["modifierkey",3]],["bool",15]]],[11,"gt","","",188,[[["modifierkey",3]],["bool",15]]],[11,"ge","","",188,[[["modifierkey",3]],["bool",15]]],[11,"partial_cmp","","",186,[[["channelflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",186,[[["channelflags",3]],["bool",15]]],[11,"le","","",186,[[["channelflags",3]],["bool",15]]],[11,"gt","","",186,[[["channelflags",3]],["bool",15]]],[11,"ge","","",186,[[["channelflags",3]],["bool",15]]],[11,"partial_cmp","","",187,[[["pluginflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",187,[[["pluginflags",3]],["bool",15]]],[11,"le","","",187,[[["pluginflags",3]],["bool",15]]],[11,"gt","","",187,[[["pluginflags",3]],["bool",15]]],[11,"ge","","",187,[[["pluginflags",3]],["bool",15]]],[11,"partial_cmp","","",190,[[["timeinfoflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",190,[[["timeinfoflags",3]],["bool",15]]],[11,"le","","",190,[[["timeinfoflags",3]],["bool",15]]],[11,"gt","","",190,[[["timeinfoflags",3]],["bool",15]]],[11,"ge","","",190,[[["timeinfoflags",3]],["bool",15]]],[11,"partial_cmp","","",189,[[["midieventflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",189,[[["midieventflags",3]],["bool",15]]],[11,"le","","",189,[[["midieventflags",3]],["bool",15]]],[11,"gt","","",189,[[["midieventflags",3]],["bool",15]]],[11,"ge","","",189,[[["midieventflags",3]],["bool",15]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",92,[[["u16",15]],["key",4]]],[11,"from","","",91,[[["i32",15]],["knobmode",4]]],[11,"from","","",91,[[["u64",15]],["knobmode",4]]],[11,"from","","",92,[[["i16",15]],["key",4]]],[11,"from","","",91,[[["u16",15]],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",98,[[["isize",15]],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",92,[[["u64",15]],["key",4]]],[11,"from","","",92,[[["u32",15]],["key",4]]],[11,"from","","",91,[[["usize",15]],["knobmode",4]]],[11,"from","","",91,[[["i8",15]],["knobmode",4]]],[11,"from","","",91,[[["i64",15]],["knobmode",4]]],[11,"from","","",92,[[["u8",15]],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",98,[[["i8",15]],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",92,[[["isize",15]],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",98,[[["i32",15]],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",92,[[["i64",15]],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",98,[[["u64",15]],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",91,[[["isize",15]],["knobmode",4]]],[11,"from","","",92,[[["i32",15]],["key",4]]],[11,"from","","",92,[[["usize",15]],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",98,[[["u8",15]],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",92,[[["i8",15]],["key",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",98,[[["usize",15]],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",91,[[["u8",15]],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",88,[[["channelproperties",3]],["speakerarrangementtype",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",98,[[["u32",15]],["category",4]]],[11,"from","","",98,[[["i64",15]],["category",4]]],[11,"from","","",98,[[["u16",15]],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::editor","",91,[[["i16",15]],["knobmode",4]]],[11,"from","","",91,[[["u32",15]],["knobmode",4]]],[11,"from","rsynth::backend::vst_backend::vst::event","",93,[[["event",3]],["event",4]]],[11,"from","rsynth::backend::vst_backend::vst::plugin","",98,[[["i16",15]],["category",4]]],[11,"from","rsynth::backend::vst_backend::vst::channels","",198,[[["channelproperties",3]],["channelinfo",3]]],[11,"into_iter","rsynth::backend::vst_backend::vst::buffer","",193,[[]]],[11,"default","rsynth::backend::vst_backend::vst::util","",204,[[],["parametertransfer",3]]],[11,"default","rsynth::backend::vst_backend::vst::api","",82,[[],["smpteframerate",4]]],[11,"default","rsynth::backend::vst_backend::vst::util","",203,[[],["atomicfloat",3]]],[11,"default","rsynth::backend::vst_backend::vst::plugin","",202,[[],["hostcallback",3]]],[11,"default","rsynth::backend::vst_backend::vst::api","",81,[[],["timeinfo",3]]],[11,"default","rsynth::backend::vst_backend::vst::buffer","",197,[[],["sendeventbuffer",3]]],[11,"default","rsynth::backend::vst_backend::vst::channels","",88,[[],["speakerarrangementtype",4]]],[11,"default","rsynth::backend::vst_backend::vst::plugin","",99,[[],["info",3]]],[11,"from_iter","rsynth::backend::vst_backend::vst::api","",190,[[],["timeinfoflags",3]]],[11,"from_iter","","",189,[[],["midieventflags",3]]],[11,"from_iter","","",187,[[],["pluginflags",3]]],[11,"from_iter","","",188,[[],["modifierkey",3]]],[11,"from_iter","","",186,[[],["channelflags",3]]],[11,"automate","rsynth::backend::vst_backend::vst::plugin","",202,[[["f32",15],["i32",15]]]],[11,"get_plugin_id","","",202,[[],["i32",15]]],[11,"idle","","",202,[[]]],[11,"get_info","","",202,[[]]],[11,"process_events","","Send events to the host.",202,[[["events",3]]]],[11,"get_time_info","","Request time information from Host.",202,[[["i32",15]],[["option",4],["timeinfo",3]]]],[11,"get_block_size","","Get block size.",202,[[],["isize",15]]],[11,"update_display","","Refresh UI after the plugin\'s parameters changed.",202,[[]]],[11,"cmp","rsynth::backend::vst_backend::vst::api","",189,[[["midieventflags",3]],["ordering",4]]],[11,"cmp","","",187,[[["pluginflags",3]],["ordering",4]]],[11,"cmp","","",186,[[["channelflags",3]],["ordering",4]]],[11,"cmp","","",190,[[["timeinfoflags",3]],["ordering",4]]],[11,"cmp","","",188,[[["modifierkey",3]],["ordering",4]]],[11,"fmt","","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",78,[[],["event",3]]],[11,"clone","","",82,[[],["smpteframerate",4]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",90,[[],["keycode",3]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",94,[[],["midievent",3]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",99,[[],["info",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",80,[[],["sysexevent",3]]],[11,"clone","","",68,[[],["speakerarrangementtype",4]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",92,[[],["key",4]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",81,[[],["timeinfo",3]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",98,[[],["category",4]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",187,[[],["pluginflags",3]]],[11,"clone","rsynth::backend::vst_backend::vst::editor","",91,[[],["knobmode",4]]],[11,"clone","rsynth::backend::vst_backend::vst::buffer","",193,[[],["inputs",3]]],[11,"clone","rsynth::backend::vst_backend::vst::plugin","",202,[[],["hostcallback",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",188,[[],["modifierkey",3]]],[11,"clone","","",77,[[],["eventtype",4]]],[11,"clone","","",190,[[],["timeinfoflags",3]]],[11,"clone","","",186,[[],["channelflags",3]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",95,[[],["sysexevent",3]]],[11,"clone","rsynth::backend::vst_backend::vst::api","",189,[[],["midieventflags",3]]],[11,"clone","rsynth::backend::vst_backend::vst::event","",93,[[],["event",4]]],[11,"bitand","rsynth::backend::vst_backend::vst::api","Returns the intersection between the two sets of flags.",186,[[["channelflags",3]],["channelflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",187,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",188,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",189,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",190,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",188,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitor","","Returns the union of the two sets of flags.",187,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",190,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",186,[[["channelflags",3]],["channelflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",189,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitxor_assign","","Toggles the set of flags.",188,[[["modifierkey",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",186,[[["channelflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",189,[[["midieventflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",190,[[["timeinfoflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",187,[[["pluginflags",3]]]],[11,"write_into","rsynth::backend::vst_backend::vst::event","",93,[[["sysexevent",3]]]],[11,"write_into","","",95,[[["sysexevent",3]]]],[11,"write_into","","",94,[[["sysexevent",3]]]],[11,"not","rsynth::backend::vst_backend::vst::api","Returns the complement of this set of flags.",187,[[],["pluginflags",3]]],[11,"not","","Returns the complement of this set of flags.",190,[[],["timeinfoflags",3]]],[11,"not","","Returns the complement of this set of flags.",188,[[],["modifierkey",3]]],[11,"not","","Returns the complement of this set of flags.",186,[[],["channelflags",3]]],[11,"not","","Returns the complement of this set of flags.",189,[[],["midieventflags",3]]],[11,"extend","","",189,[[]]],[11,"extend","","",190,[[]]],[11,"extend","","",186,[[]]],[11,"extend","","",187,[[]]],[11,"extend","","",188,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",188,[[["modifierkey",3]],["modifierkey",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",189,[[["midieventflags",3]],["midieventflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",190,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",186,[[["channelflags",3]],["channelflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",187,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",189,[[["midieventflags",3]],["midieventflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",186,[[["channelflags",3]],["channelflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",188,[[["modifierkey",3]],["modifierkey",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",190,[[["timeinfoflags",3]],["timeinfoflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags …",187,[[["pluginflags",3]],["pluginflags",3]]],[11,"bitor_assign","","Adds the set of flags.",189,[[["midieventflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",188,[[["modifierkey",3]]]],[11,"bitor_assign","","Adds the set of flags.",190,[[["timeinfoflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",187,[[["pluginflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",186,[[["channelflags",3]]]],[11,"index_mut","rsynth::backend::vst_backend::vst::buffer","",195,[[["usize",15]]]],[11,"next","","",192,[[],["option",4]]],[11,"next","","",196,[[],["option",4]]],[11,"next","","",194,[[],["option",4]]],[11,"next","rsynth::backend::vst_backend::vst::util","",205,[[],["option",4]]],[11,"get_info","rsynth::backend::vst_backend::vst::host","",200,[[],["info",3]]],[11,"init","","",200,[[]]],[11,"set_sample_rate","","",200,[[["f32",15]]]],[11,"set_block_size","","",200,[[["i64",15]]]],[11,"resume","","",200,[[]]],[11,"suspend","","",200,[[]]],[11,"vendor_specific","","",200,[[["isize",15],["f32",15],["i32",15]],["isize",15]]],[11,"can_do","","",200,[[["cando",4]],["supported",4]]],[11,"get_tail_size","","",200,[[],["isize",15]]],[11,"process","","",200,[[["audiobuffer",3]]]],[11,"process_f64","","",200,[[["audiobuffer",3]]]],[11,"process_events","","",200,[[["events",3]]]],[11,"get_input_info","","",200,[[["i32",15]],["channelinfo",3]]],[11,"get_output_info","","",200,[[["i32",15]],["channelinfo",3]]],[11,"get_parameter_object","","",200,[[],[["pluginparameters",8],["arc",3]]]],[11,"get_editor","","",200,[[],[["box",3],["option",4]]]],[11,"fmt","rsynth::backend::vst_backend::vst::api","",187,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",190,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",186,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",188,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",189,[[["formatter",3]],[["error",3],["result",4]]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",98,[[],["i16",15]]],[11,"into","","",98,[[],["isize",15]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",92,[[],["u32",15]]],[11,"into","rsynth::backend::vst_backend::vst::channels","Convert to VST API arrangement type.",88,[[],["speakerarrangementtype",4]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",98,[[],["i8",15]]],[11,"into","rsynth::backend::vst_backend::vst::channels","Convert to the VST api equivalent of this structure.",198,[[],["channelproperties",3]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",98,[[],["i64",15]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",91,[[],["i64",15]]],[11,"into","","",91,[[],["usize",15]]],[11,"into","","",91,[[],["u16",15]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",98,[[],["usize",15]]],[11,"into","","",98,[[],["u8",15]]],[11,"into","","",98,[[],["i32",15]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",91,[[],["isize",15]]],[11,"into","","",92,[[],["u8",15]]],[11,"into","","",92,[[],["usize",15]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",98,[[],["u16",15]]],[11,"into","","",100,[[],["string",3]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",92,[[],["i64",15]]],[11,"into","","",91,[[],["u8",15]]],[11,"into","","",92,[[],["isize",15]]],[11,"into","","",92,[[],["i32",15]]],[11,"into","","",91,[[],["u32",15]]],[11,"into","","",92,[[],["u16",15]]],[11,"into","","",92,[[],["i8",15]]],[11,"into","","",91,[[],["i32",15]]],[11,"into","","",92,[[],["i16",15]]],[11,"into","","",91,[[],["u64",15]]],[11,"into","","",92,[[],["u64",15]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",98,[[],["u64",15]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",91,[[],["i8",15]]],[11,"into","rsynth::backend::vst_backend::vst::plugin","",98,[[],["u32",15]]],[11,"into","rsynth::backend::vst_backend::vst::editor","",91,[[],["i16",15]]],[11,"into","rsynth::backend::vst_backend::vst::api","Convert to integer ordinal for interop with VST api.",69,[[],["isize",15]]],[11,"bitand_assign","","Disables all flags disabled in the set.",188,[[["modifierkey",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",186,[[["channelflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",187,[[["pluginflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",189,[[["midieventflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",190,[[["timeinfoflags",3]]]],[11,"drop","rsynth::backend::vst_backend::vst::host","",200,[[]]],[11,"eq","rsynth::backend::vst_backend::vst::api","",186,[[["channelflags",3]],["bool",15]]],[11,"ne","","",186,[[["channelflags",3]],["bool",15]]],[11,"eq","","",188,[[["modifierkey",3]],["bool",15]]],[11,"ne","","",188,[[["modifierkey",3]],["bool",15]]],[11,"eq","","",190,[[["timeinfoflags",3]],["bool",15]]],[11,"ne","","",190,[[["timeinfoflags",3]],["bool",15]]],[11,"eq","","",187,[[["pluginflags",3]],["bool",15]]],[11,"ne","","",187,[[["pluginflags",3]],["bool",15]]],[11,"eq","","",69,[[["supported",4]],["bool",15]]],[11,"ne","","",69,[[["supported",4]],["bool",15]]],[11,"eq","","",189,[[["midieventflags",3]],["bool",15]]],[11,"ne","","",189,[[["midieventflags",3]],["bool",15]]],[11,"sub_assign","","Disables all flags enabled in the set.",189,[[["midieventflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",188,[[["modifierkey",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",186,[[["channelflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",190,[[["timeinfoflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",187,[[["pluginflags",3]]]],[11,"number_of_channels","rsynth::backend::combined::dummy","",4,[[],["usize",15]]],[11,"frames_per_second","","",4,[[],["u64",15]]],[11,"fill_buffer","","",4,[[["audiobufferout",3]],[["usize",15],["result",4]]]],[11,"number_of_channels","rsynth::backend::combined::hound","",7,[[],["usize",15]]],[11,"frames_per_second","","",7,[[],["u64",15]]],[11,"fill_buffer","","",7,[[["audiobufferout",3]],[["usize",15],["result",4]]]],[11,"number_of_channels","rsynth::backend::combined::memory","",9,[[],["usize",15]]],[11,"frames_per_second","","",9,[[],["u64",15]]],[11,"fill_buffer","","",9,[[["audiobufferout",3]],[["usize",15],["result",4]]]],[11,"number_of_channels","rsynth::backend::combined","",48,[[],["usize",15]]],[11,"frames_per_second","","",48,[[],["u64",15]]],[11,"fill_buffer","","",48,[[["audiobufferout",3]],[["usize",15],["result",4]]]],[11,"write_buffer","rsynth::backend::combined::dummy","",4,[[["audiobufferin",3]],["result",4]]],[11,"write_buffer","rsynth::backend::combined::hound","",8,[[["audiobufferin",3]],["result",4]]],[11,"specifies_number_of_channels","","",8,[[],["bool",15]]],[11,"number_of_channels","","",8,[[],["usize",15]]],[11,"write_buffer","rsynth::backend::combined::memory","",10,[[["audiobufferin",3]],["result",4]]],[11,"specifies_number_of_channels","","",10,[[],["bool",15]]],[11,"number_of_channels","","",10,[[],["usize",15]]],[11,"write_buffer","rsynth::backend::combined","",49,[[["audiobufferin",3]],["result",4]]],[11,"write_event","rsynth::backend::combined::dummy","",5,[[["rawmidievent",3],["deltaevent",3]]]],[11,"write_event","rsynth::backend::combined","",51,[[["rawmidievent",3],["deltaevent",3]]]],[11,"output_initialized","","",46,[[],["bool",15]]],[11,"stop","","",46,[[]]],[11,"output_initialized","rsynth::backend::jack_backend","",65,[[],["bool",15]]],[11,"stop","","",65,[[]]],[11,"output_initialized","rsynth::backend::vst_backend::vst::plugin","",202,[[],["bool",15]]],[11,"iter","rsynth::envelope::staircase_envelope","",207,[[]]],[11,"insert_event","","",207,[[["timed",3]]]],[11,"forget_past","","",207,[[["u32",15]]]],[11,"decide_on_collision","rsynth::event::event_queue","",208,[[],["eventcollisionhandling",4]]],[11,"decide_on_collision","","",209,[[],["eventcollisionhandling",4]]],[11,"decide_on_collision","","",210,[[],["eventcollisionhandling",4]]],[11,"decide_on_collision","","",211,[[],["eventcollisionhandling",4]]],[11,"handle_event","rsynth::backend::combined","",46,[[["timed",3],["rawmidievent",3]]]],[11,"handle_event","rsynth::backend::jack_backend","",65,[[["indexed",3],["timed",3]]]],[11,"handle_event","","",65,[[["indexed",3],["timed",3]]]],[11,"handle_event","rsynth::event","",213,[[]]],[11,"handle_event","rsynth::test_utilities","",216,[[]]],[11,"handle_event","","",127,[[]]],[11,"handle_event","","",216,[[]]],[11,"general","rsynth::meta","",125,[[]]],[11,"in_ports","","",125,[[]]],[11,"out_ports","","",125,[[]]],[11,"in_ports","","",125,[[]]],[11,"out_ports","","",125,[[]]],[11,"classify","rsynth::utilities::polyphony","",217,[[],["eventdispatchclass",4]]],[11,"classify","rsynth::utilities::polyphony::simple_event_dispatching","",129,[[],["eventdispatchclass",4]]],[11,"find_active_voice","","",129,[[],[["usize",15],["option",4]]]],[11,"find_idle_voice","","",129,[[],["usize",15]]],[11,"max_number_of_audio_inputs","rsynth::test_utilities","",127,[[],["usize",15]]],[11,"max_number_of_audio_outputs","","",127,[[],["usize",15]]],[11,"set_sample_rate","","",127,[[["f64",15]]]],[11,"render_buffer","","",127,[[["audiobufferinout",3]]]],[11,"as_mut","rsynth::event","",115,[[],["rawmidievent",3]]],[11,"as_mut","","",117,[[]]],[11,"as_mut","","",118,[[]]],[11,"as_ref","","",115,[[],["rawmidievent",3]]],[11,"as_ref","","",117,[[]]],[11,"as_ref","","",118,[[]]],[11,"from","rsynth::backend::combined::memory","",9,[[]]],[11,"from","rsynth::event","",116,[[["cursorerror",4]]]],[11,"next_back","rsynth::event::event_queue","",212,[[],["option",4]]],[11,"next","rsynth::buffer","",146,[[],["option",4]]],[11,"next","","",147,[[],["option",4]]],[11,"next","rsynth::backend::combined::dummy","",5,[[],["option",4]]],[11,"next","rsynth::backend::combined::midly","",42,[[],["option",4]]],[11,"next","rsynth::backend::combined","",50,[[],[["option",4],["deltaevent",3]]]],[11,"next","rsynth::envelope::staircase_envelope","",206,[[],["option",4]]],[11,"next","rsynth::event::event_queue","",212,[[],["option",4]]],[11,"size_hint","","",212,[[]]],[11,"clone","rsynth::buffer","",0,[[],["audiobufferin",3]]],[11,"clone","","",3,[[],["audiochunk",3]]],[11,"clone","rsynth::envelope","",106,[[],["envelopeiteratoritem",3]]],[11,"clone","rsynth::event","",114,[[],["sysexevent",3]]],[11,"clone","","",115,[[],["rawmidievent",3]]],[11,"clone","","",116,[[],["midlyconversionerror",4]]],[11,"clone","","",117,[[]]],[11,"clone","","",118,[[]]],[11,"clone","","",119,[[],["deltaevent",3]]],[11,"clone","rsynth::utilities::polyphony","",131,[[],["toneidentifier",3]]],[11,"clone","","",133,[[],["voiceassignment",4]]],[11,"clone","rsynth::utilities::polyphony::simple_event_dispatching","",128,[[],["simplevoicestate",4]]],[11,"default","rsynth::utilities::polyphony","",217,[[],["rawmidieventtoneidentifierdispatchclassifier",3]]],[11,"default","rsynth::utilities::polyphony::simple_event_dispatching","",129,[[]]],[11,"eq","rsynth::buffer","",3,[[["audiochunk",3]],["bool",15]]],[11,"ne","","",3,[[["audiochunk",3]],["bool",15]]],[11,"eq","rsynth::envelope","",106,[[["envelopeiteratoritem",3]],["bool",15]]],[11,"ne","","",106,[[["envelopeiteratoritem",3]],["bool",15]]],[11,"eq","rsynth::event","",114,[[["sysexevent",3]],["bool",15]]],[11,"ne","","",114,[[["sysexevent",3]],["bool",15]]],[11,"eq","","",115,[[["rawmidievent",3]],["bool",15]]],[11,"ne","","",115,[[["rawmidievent",3]],["bool",15]]],[11,"eq","","",117,[[["timed",3]],["bool",15]]],[11,"ne","","",117,[[["timed",3]],["bool",15]]],[11,"eq","","",118,[[["indexed",3]],["bool",15]]],[11,"ne","","",118,[[["indexed",3]],["bool",15]]],[11,"eq","","",119,[[["deltaevent",3]],["bool",15]]],[11,"ne","","",119,[[["deltaevent",3]],["bool",15]]],[11,"eq","rsynth::utilities::polyphony","",131,[[["toneidentifier",3]],["bool",15]]],[11,"ne","","",131,[[["toneidentifier",3]],["bool",15]]],[11,"eq","","",133,[[["voiceassignment",4]],["bool",15]]],[11,"ne","","",133,[[["voiceassignment",4]],["bool",15]]],[11,"eq","rsynth::utilities::polyphony::simple_event_dispatching","",128,[[["simplevoicestate",4]],["bool",15]]],[11,"ne","","",128,[[["simplevoicestate",4]],["bool",15]]],[11,"deref","rsynth::event::event_queue","",110,[[]]],[11,"fmt","rsynth::buffer","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined::hound","",6,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined","",47,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::envelope","",106,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::event","",114,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",115,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::utilities::polyphony","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined::hound","",6,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::backend::combined","",47,[[["formatter",3]],["result",6]]],[11,"fmt","rsynth::event","",116,[[["formatter",3]],["result",6]]],[11,"index","rsynth::event::event_queue","",110,[[["usize",15]]]],[11,"index_mut","","",110,[[["usize",15]]]],[11,"try_from","rsynth::event","",115,[[["trackeventkind",4]],["result",4]]],[11,"source","rsynth::backend::combined::hound","",6,[[],[["option",4],["error",8]]]],[11,"source","rsynth::backend::combined","",47,[[],[["option",4],["error",8]]]],[11,"source","rsynth::event","",116,[[],[["option",4],["error",8]]]],[11,"as_never","rsynth::backend::combined::midly::midly::io","",148,[[]]],[11,"new","","Create a new cursor located at the start of the given …",149,[[],["cursor",3]]],[11,"from_parts","","Create a cursor from a buffer and the cursor within it.",149,[[["usize",15]],["cursor",3]]],[11,"into_parts","","Yield the underlying buffer and the cursor within it.",149,[[]]],[11,"slice","","Get a reference to the whole underlying buffer.",149,[[]]],[11,"slice_mut","","Get a mutable reference to the whole underlying buffer.",149,[[]]],[11,"cursor","","Get the position of the cursor.",149,[[],["usize",15]]],[11,"written","","Get a reference to the written portion of the buffer.",149,[[]]],[11,"unwritten","","Get a reference to the portion of the buffer that is not …",149,[[]]],[11,"split","","Split the buffer into the written and unwritten parts.",149,[[]]],[11,"written_mut","","Get a mutable reference to the written portion of the …",149,[[]]],[11,"unwritten_mut","","Get a mutable reference to the portion of the buffer that …",149,[[]]],[11,"split_mut","","Split the buffer into the written and unwritten parts.",149,[[]]],[11,"parse","rsynth::backend::combined::midly::midly::live","Parse a complete MIDI message from its raw bytes.",16,[[],[["error",3],["liveevent",4],["result",4]]]],[11,"write","","Write a standalone message to the given output.",16,[[],["result",4]]],[11,"write_with_running_status","","Write a message, skipping the status if it shares the …",16,[[["option",4]],["result",4]]],[11,"write_std","","Write a standalone message to the given <code>std::io::Write</code> …",16,[[],[["result",4],["error",3]]]],[11,"write_std_with_running_status","","Write a message, skipping the status if it shares the …",16,[[["option",4]],[["result",4],["error",3]]]],[11,"as_track_event","","Convert this <code>LiveEvent</code> into a static <code>TrackEventKind</code>, …",16,[[["arena",3]],["trackeventkind",4]]],[11,"new","","Create a system realtime event from its id byte.",20,[[["u8",15]],["systemrealtime",4]]],[11,"encode","","Get the id byte for this system realtime message.",20,[[],["u8",15]]],[11,"new","rsynth::backend::combined::midly::midly::stream","Create a new clean midi stream with the default buffer …",150,[[],[["midistream",3],["defaultbuffer",3]]]],[11,"with_buffer","","Create a new clean midi stream using the given data …",150,[[],["midistream",3]]],[11,"feed","","Feeds a slice of bytes to the stream, calling the …",150,[[]]],[11,"flush","","Indicates to the stream that this is an event boundary, …",150,[[]]],[11,"max_cap","","",151,[[],["usize",15]]],[11,"new","","",151,[[],["defaultbuffer",3]]],[11,"max_value","rsynth::backend::combined::midly::midly::num","The maximum value that this restricted integer can hold.",152,[[],["u14",3]]],[11,"new","","Creates a restricted int from its non-restricted …",152,[[["u16",15]],["u14",3]]],[11,"from_int_lossy","","Creates a restricted int from its non-restricted …",152,[[["u16",15]],["u14",3]]],[11,"try_from","","Returns <code>Some</code> if the raw integer is within range of the …",152,[[["u16",15]],[["option",4],["u14",3]]]],[11,"as_int","","Get the inner integer out of the wrapper. The inner …",152,[[],["u16",15]]],[11,"slice_try_from_int","","Cast a slice of raw integers to a slice of restricted …",152,[[],["option",4]]],[11,"slice_from_int","","Cast a slice of raw integers to a slice of restricted …",152,[[]]],[11,"slice_from_int_unchecked","","Cast a slice of raw integers to a slice of restricted …",152,[[]]],[11,"slice_try_from_int_mut","","Cast a slice of mutable raw integers to a slice of …",152,[[],["option",4]]],[11,"slice_from_int_mut","","Cast a slice of mutable raw integers to a slice of …",152,[[]]],[11,"slice_from_int_unchecked_mut","","Cast a slice of mutable raw integers to a slice of …",152,[[]]],[11,"slice_as_int","","Cast a slice of restricted integers to the corresponding …",152,[[]]],[11,"max_value","","The maximum value that this restricted integer can hold.",153,[[],["u15",3]]],[11,"new","","Creates a restricted int from its non-restricted …",153,[[["u16",15]],["u15",3]]],[11,"from_int_lossy","","Creates a restricted int from its non-restricted …",153,[[["u16",15]],["u15",3]]],[11,"try_from","","Returns <code>Some</code> if the raw integer is within range of the …",153,[[["u16",15]],[["u15",3],["option",4]]]],[11,"as_int","","Get the inner integer out of the wrapper. The inner …",153,[[],["u16",15]]],[11,"slice_try_from_int","","Cast a slice of raw integers to a slice of restricted …",153,[[],["option",4]]],[11,"slice_from_int","","Cast a slice of raw integers to a slice of restricted …",153,[[]]],[11,"slice_from_int_unchecked","","Cast a slice of raw integers to a slice of restricted …",153,[[]]],[11,"slice_try_from_int_mut","","Cast a slice of mutable raw integers to a slice of …",153,[[],["option",4]]],[11,"slice_from_int_mut","","Cast a slice of mutable raw integers to a slice of …",153,[[]]],[11,"slice_from_int_unchecked_mut","","Cast a slice of mutable raw integers to a slice of …",153,[[]]],[11,"slice_as_int","","Cast a slice of restricted integers to the corresponding …",153,[[]]],[11,"max_value","","The maximum value that this restricted integer can hold.",154,[[],["u24",3]]],[11,"new","","Creates a restricted int from its non-restricted …",154,[[["u32",15]],["u24",3]]],[11,"from_int_lossy","","Creates a restricted int from its non-restricted …",154,[[["u32",15]],["u24",3]]],[11,"try_from","","Returns <code>Some</code> if the raw integer is within range of the …",154,[[["u32",15]],[["option",4],["u24",3]]]],[11,"as_int","","Get the inner integer out of the wrapper. The inner …",154,[[],["u32",15]]],[11,"slice_try_from_int","","Cast a slice of raw integers to a slice of restricted …",154,[[],["option",4]]],[11,"slice_from_int","","Cast a slice of raw integers to a slice of restricted …",154,[[]]],[11,"slice_from_int_unchecked","","Cast a slice of raw integers to a slice of restricted …",154,[[]]],[11,"slice_try_from_int_mut","","Cast a slice of mutable raw integers to a slice of …",154,[[],["option",4]]],[11,"slice_from_int_mut","","Cast a slice of mutable raw integers to a slice of …",154,[[]]],[11,"slice_from_int_unchecked_mut","","Cast a slice of mutable raw integers to a slice of …",154,[[]]],[11,"slice_as_int","","Cast a slice of restricted integers to the corresponding …",154,[[]]],[11,"max_value","","The maximum value that this restricted integer can hold.",155,[[],["u28",3]]],[11,"new","","Creates a restricted int from its non-restricted …",155,[[["u32",15]],["u28",3]]],[11,"from_int_lossy","","Creates a restricted int from its non-restricted …",155,[[["u32",15]],["u28",3]]],[11,"try_from","","Returns <code>Some</code> if the raw integer is within range of the …",155,[[["u32",15]],[["option",4],["u28",3]]]],[11,"as_int","","Get the inner integer out of the wrapper. The inner …",155,[[],["u32",15]]],[11,"slice_try_from_int","","Cast a slice of raw integers to a slice of restricted …",155,[[],["option",4]]],[11,"slice_from_int","","Cast a slice of raw integers to a slice of restricted …",155,[[]]],[11,"slice_from_int_unchecked","","Cast a slice of raw integers to a slice of restricted …",155,[[]]],[11,"slice_try_from_int_mut","","Cast a slice of mutable raw integers to a slice of …",155,[[],["option",4]]],[11,"slice_from_int_mut","","Cast a slice of mutable raw integers to a slice of …",155,[[]]],[11,"slice_from_int_unchecked_mut","","Cast a slice of mutable raw integers to a slice of …",155,[[]]],[11,"slice_as_int","","Cast a slice of restricted integers to the corresponding …",155,[[]]],[11,"max_value","","The maximum value that this restricted integer can hold.",156,[[],["u4",3]]],[11,"new","","Creates a restricted int from its non-restricted …",156,[[["u8",15]],["u4",3]]],[11,"from_int_lossy","","Creates a restricted int from its non-restricted …",156,[[["u8",15]],["u4",3]]],[11,"try_from","","Returns <code>Some</code> if the raw integer is within range of the …",156,[[["u8",15]],[["option",4],["u4",3]]]],[11,"as_int","","Get the inner integer out of the wrapper. The inner …",156,[[],["u8",15]]],[11,"slice_try_from_int","","Cast a slice of raw integers to a slice of restricted …",156,[[],["option",4]]],[11,"slice_from_int","","Cast a slice of raw integers to a slice of restricted …",156,[[]]],[11,"slice_from_int_unchecked","","Cast a slice of raw integers to a slice of restricted …",156,[[]]],[11,"slice_try_from_int_mut","","Cast a slice of mutable raw integers to a slice of …",156,[[],["option",4]]],[11,"slice_from_int_mut","","Cast a slice of mutable raw integers to a slice of …",156,[[]]],[11,"slice_from_int_unchecked_mut","","Cast a slice of mutable raw integers to a slice of …",156,[[]]],[11,"slice_as_int","","Cast a slice of restricted integers to the corresponding …",156,[[]]],[11,"max_value","","The maximum value that this restricted integer can hold.",157,[[],["u7",3]]],[11,"new","","Creates a restricted int from its non-restricted …",157,[[["u8",15]],["u7",3]]],[11,"from_int_lossy","","Creates a restricted int from its non-restricted …",157,[[["u8",15]],["u7",3]]],[11,"try_from","","Returns <code>Some</code> if the raw integer is within range of the …",157,[[["u8",15]],[["u7",3],["option",4]]]],[11,"as_int","","Get the inner integer out of the wrapper. The inner …",157,[[],["u8",15]]],[11,"slice_try_from_int","","Cast a slice of raw integers to a slice of restricted …",157,[[],["option",4]]],[11,"slice_from_int","","Cast a slice of raw integers to a slice of restricted …",157,[[]]],[11,"slice_from_int_unchecked","","Cast a slice of raw integers to a slice of restricted …",157,[[]]],[11,"slice_try_from_int_mut","","Cast a slice of mutable raw integers to a slice of …",157,[[],["option",4]]],[11,"slice_from_int_mut","","Cast a slice of mutable raw integers to a slice of …",157,[[]]],[11,"slice_from_int_unchecked_mut","","Cast a slice of mutable raw integers to a slice of …",157,[[]]],[11,"slice_as_int","","Cast a slice of restricted integers to the corresponding …",157,[[]]],[11,"new","rsynth::backend::combined::midly::midly","Create a new empty arena.",158,[[],["arena",3]]],[11,"clear","","Empty this arena, deallocating all added bytes.",158,[[]]],[11,"len","","Get the amount of allocations in the arena.",158,[[],["usize",15]]],[11,"add","","Add a set of bytes to the arena, returning a longer-lived …",158,[[]]],[11,"add_vec","","Add a <code>Vec<u8></code> to the arena, returning a long-lived …",158,[[["u8",15],["global",3],["vec",3]]]],[11,"add_u7","","Add a set of databytes to the arena, returning a …",158,[[]]],[11,"add_u7_vec","","Add a <code>Vec<u7></code> to the arena, returning a long-lived …",158,[[["vec",3],["u7",3],["global",3]]]],[11,"new","","Create a new empty <code>Smf</code> with zero tracks, using the given …",22,[[["header",3]],["smf",3]]],[11,"parse","","Parse a <code>.mid</code> Standard Midi File from its raw bytes. If …",22,[[],[["result",4],["smf",3],["error",3]]]],[11,"write","","Encodes and writes the file to the given generic writer.",22,[[],["result",4]]],[11,"write_std","","Encodes and writes the file to the given <code>std::io::Write</code> …",22,[[],[["result",4],["error",3]]]],[11,"save","","Encodes and writes the file to the given path.",22,[[],[["result",4],["error",3]]]],[11,"new","","Create a new empty <code>SmfBytemap</code> with zero tracks, using the …",23,[[["header",3]],["smfbytemap",3]]],[11,"parse","","Parse a Standard Midi File from its raw bytes, keeping a …",23,[[],[["smfbytemap",3],["error",3],["result",4]]]],[11,"write","","Encodes and writes the <em>events</em> (not the bytemap) to the …",23,[[],["result",4]]],[11,"write_std","","Encodes and writes the <em>events</em> (not the bytemap) to the …",23,[[],[["result",4],["error",3]]]],[11,"save","","Creates/overwrites the file at the given path and writes …",23,[[],[["result",4],["error",3]]]],[11,"new","","Create a new error with the given <code>ErrorKind</code>.",159,[[["errorkind",4]],["error",3]]],[11,"kind","","More information about the error itself.",159,[[],["errorkind",4]]],[11,"source","","The underlying cause for this error.",159,[[],[["error",3],["option",4]]]],[11,"message","","Get the informative message on what exact part of the …",24,[[],["str",15]]],[11,"min_raw_value","","The minimum value of <code>0x0000</code>, indicating full bend …",34,[[],["pitchbend",3]]],[11,"mid_raw_value","","The middle value of <code>0x2000</code>, indicating no bend.",34,[[],["pitchbend",3]]],[11,"max_raw_value","","The maximum value of <code>0x3FFF</code>, indicating full bend upwards.",34,[[],["pitchbend",3]]],[11,"from_int","","Create a <code>PitchBend</code> value from an int in the range …",34,[[["i16",15]],["pitchbend",3]]],[11,"from_f32","","Create a <code>PitchBend</code> value from a number in the range …",34,[[["f32",15]],["pitchbend",3]]],[11,"from_f64","","Create a <code>PitchBend</code> value from a number in the range …",34,[[["f64",15]],["pitchbend",3]]],[11,"as_int","","Returns an int in the range <code>[-0x2000, 0x1FFF]</code>.",34,[[],["i16",15]]],[11,"as_f32","","Returns an <code>f32</code> in the range <code>[-1.0, 1.0)</code>.",34,[[],["f32",15]]],[11,"as_f64","","Returns an <code>f64</code> in the range <code>[-1.0, 1.0)</code>.",34,[[],["f64",15]]],[11,"as_live_event","","Lossy conversion from a track event to a live event.",36,[[],[["liveevent",4],["option",4]]]],[11,"from_int","","Converts an integer representing the semantic fps to an …",39,[[["u8",15]],[["option",4],["fps",4]]]],[11,"as_int","","Get the integral approximate fps out.",39,[[],["u8",15]]],[11,"as_f32","","Get the actual <code>f32</code> fps out.",39,[[],["f32",15]]],[11,"new","","",160,[[["fps",4],["u8",15]],[["option",4],["smptetime",3]]]],[11,"hour","","",160,[[],["u8",15]]],[11,"minute","","",160,[[],["u8",15]]],[11,"second","","",160,[[],["u8",15]]],[11,"frame","","",160,[[],["u8",15]]],[11,"subframe","","",160,[[],["u8",15]]],[11,"fps","","",160,[[],["fps",4]]],[11,"second_f32","","",160,[[],["f32",15]]],[11,"new","","Create an event iterator from raw track bytes.",161,[[],["eventbytemapiter",3]]],[11,"unread","","Get the remaining unparsed event bytes.",161,[[]]],[11,"running_status","","Get the current running status of the track.",161,[[],[["option",4],["u8",15]]]],[11,"running_status_mut","","Modify the current running status of the track.",161,[[],["option",4]]],[11,"not_bytemapped","","Stop collecting bytemap information for any remaining …",161,[[],["eventiter",3]]],[11,"into_vec","","Collects the remaining unparsed events into a …",161,[[],[["vec",3],["error",3],["result",4]]]],[11,"new","","Create an event iterator from raw track bytes.",162,[[],["eventiter",3]]],[11,"unread","","Get the remaining unparsed event bytes.",162,[[]]],[11,"running_status","","Get the current running status of the track.",162,[[],[["option",4],["u8",15]]]],[11,"running_status_mut","","Modify the current running status of the track.",162,[[],["option",4]]],[11,"bytemapped","","Make this event iterator keep track of the raw bytes that …",162,[[],["eventbytemapiter",3]]],[11,"into_vec","","Collects the remaining unparsed events into a <code>Track</code>.",162,[[],[["error",3],["result",4],["vec",3]]]],[11,"new","","Create a new header from its raw parts.",41,[[["format",4],["timing",4]],["header",3]]],[11,"new","","Create an event iterator from raw SMF bytes, excluding …",163,[[],["trackiter",3]]],[11,"unread","","Peek at the remaining unparsed bytes in the file.",163,[[]]],[11,"collect_tracks","","Parse and collect the remaining unparsed tracks into a <code>Vec</code>…",163,[[],[["vec",3],["result",4],["error",3]]]],[11,"collect_bytemapped","","Parse and collect the remaining unparsed tracks into a <code>Vec</code>…",163,[[],[["vec",3],["result",4],["error",3]]]],[11,"new","rsynth::backend::jack_backend::jack","Tell the JACK server that the program is ready to start …",164,[[["client",3]],[["asyncclient",3],["error",4],["result",4]]]],[11,"as_client","","Return the underlying <code>jack::Client</code>.",164,[[],["client",3]]],[11,"deactivate","","Tell the JACK server to remove this client from the …",164,[[],[["result",4],["error",4]]]],[11,"new","","Opens a JACK client with the given name and options. If …",165,[[["clientoptions",3],["str",15]],[["result",4],["error",4]]]],[11,"activate_async","","Begin processing in real-time using the specified …",165,[[],[["asyncclient",3],["error",4],["result",4]]]],[11,"sample_rate","","The sample rate of the JACK system, as set by the user …",165,[[],["usize",15]]],[11,"cpu_load","","The current CPU load estimated by JACK. It is on a scale …",165,[[],["f32",15]]],[11,"name","","Get the name of the current client. This may differ from …",165,[[],["str",15]]],[11,"buffer_size","","The current maximum size that will every be passed to the …",165,[[],["u32",15]]],[11,"set_buffer_size","","Change the buffer size passed to the process callback.",165,[[["u32",15]],[["result",4],["error",4]]]],[11,"uuid_string","","Get a String representation of the <code>uuid</code> of this client.",165,[[],["string",3]]],[11,"name_by_uuid_str","","Get the name of a client by its <code>&str</code> uuid.",165,[[["str",15]],[["string",3],["option",4]]]],[11,"ports","","Returns a vector of port names that match the specified …",165,[[["option",4],["portflags",3],["str",15]],[["string",3],["vec",3],["global",3]]]],[11,"register_port","","Create a new port for the client. This is an object used …",165,[[["str",15]],[["result",4],["port",3],["error",4]]]],[11,"port_by_id","","Get a <code>Port</code> by its port id.",165,[[["u32",15]],[["option",4],["port",3]]]],[11,"port_by_name","","Get a <code>Port</code> by its port name.",165,[[["str",15]],[["option",4],["port",3]]]],[11,"frames_since_cycle_start","","The estimated time in frames that has passed since the …",165,[[],["u32",15]]],[11,"frame_time","","The estimated current time in frames. This function is …",165,[[],["u32",15]]],[11,"frames_to_time","","The estimated time in microseconds of the specified frame …",165,[[["u32",15]],["u64",15]]],[11,"time_to_frames","","The estimated time in frames for the specified system …",165,[[["u64",15]],["u32",15]]],[11,"is_mine","","Returns <code>true</code> if the port <code>port</code> belongs to this client.",165,[[["port",3]],["bool",15]]],[11,"request_monitor_by_name","","Toggle input monitoring for the port with name <code>port_name</code>.",165,[[["bool",15],["str",15]],[["result",4],["error",4]]]],[11,"connect_ports_by_name","","Establish a connection between two ports by their full …",165,[[["str",15]],[["result",4],["error",4]]]],[11,"connect_ports","","Establish a connection between two ports.",165,[[["port",3],["port",3]],[["result",4],["error",4]]]],[11,"disconnect","","Remove all connections to/from the port.",165,[[["port",3]],[["result",4],["error",4]]]],[11,"unregister_port","","",165,[[["port",3]],[["result",4],["error",4]]]],[11,"disconnect_ports","","Remove a connection between two ports.",165,[[["port",3],["port",3]],[["result",4],["error",4]]]],[11,"disconnect_ports_by_name","","Remove a connection between two ports.",165,[[["str",15]],[["result",4],["error",4]]]],[11,"type_buffer_size","","The buffer size of a port type",165,[[["str",15]],["usize",15]]],[11,"raw","","Expose the underlying ffi pointer.",165,[[]]],[11,"from_raw","","Create a <code>Client</code> from an ffi pointer.",165,[[],["client",3]]],[11,"transport","","Get a <code>Transport</code> object associated with this client.",165,[[],["transport",3]]],[18,"NO_START_SERVER","","Do not automatically start the JACK server when it is not …",166,null],[18,"USE_EXACT_NAME","","Use the exact client name requested. Otherwise, JACK …",166,null],[18,"SERVER_NAME","","Open with optional <code>server_name</code> parameter.",166,null],[18,"LOAD_NAME","","Load internal client from optional <code>load_name</code>, otherwise …",166,null],[18,"LOAD_INIT","","Pass optional <code>load_init</code> to <code>jack_initialize()</code> entry point …",166,null],[18,"SESSION_ID","","Pass a SessionID token. This allows the session manager …",166,null],[11,"empty","","Returns an empty set of flags",166,[[],["clientoptions",3]]],[11,"all","","Returns the set containing all flags.",166,[[],["clientoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",166,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",166,[[["u32",15]],[["option",4],["clientoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",166,[[["u32",15]],["clientoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",166,[[["u32",15]],["clientoptions",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",166,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",166,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",166,[[["clientoptions",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",166,[[["clientoptions",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",166,[[["clientoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",166,[[["clientoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",166,[[["clientoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",166,[[["bool",15],["clientoptions",3]]]],[18,"FAILURE","","Overall operation failed. File an issue if you can get it …",167,null],[18,"INVALID_OPTION","","The operation contained an invalid or unsupported option.",167,null],[18,"NAME_NOT_UNIQUE","","The desired client name was not unique. With the …",167,null],[18,"SERVER_STARTED","","The JACK server was started as a result of this …",167,null],[18,"SERVER_FAILED","","Unable to connect to the JACK server.",167,null],[18,"SERVER_ERROR","","Communication error with the JACK server.",167,null],[18,"NO_SUCH_CLIENT","","Requested client does not exist.",167,null],[18,"LOAD_FAILURE","","Unable to load internal client",167,null],[18,"INIT_FAILURE","","Unable to initialize client",167,null],[18,"SHM_FAILURE","","Unable to access shared memory",167,null],[18,"VERSION_ERROR","","Client\'s protocol version does not match",167,null],[18,"BACKEND_ERROR","","No documentation found. TODO: dig deeper",167,null],[18,"CLIENT_ZOMBIE","","No documentation found. TODO: dig deeper",167,null],[11,"empty","","Returns an empty set of flags",167,[[],["clientstatus",3]]],[11,"all","","Returns the set containing all flags.",167,[[],["clientstatus",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",167,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",167,[[["u32",15]],[["clientstatus",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",167,[[["u32",15]],["clientstatus",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",167,[[["u32",15]],["clientstatus",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",167,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",167,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",167,[[["clientstatus",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",167,[[["clientstatus",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",167,[[["clientstatus",3]]]],[11,"remove","","Removes the specified flags in-place.",167,[[["clientstatus",3]]]],[11,"toggle","","Toggles the specified flags in-place.",167,[[["clientstatus",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",167,[[["clientstatus",3],["bool",15]]]],[11,"new","","",52,[[],["closureprocesshandler",3]]],[11,"n_frames","","The number of frames in the current process cycle.",168,[[],["u32",15]]],[11,"last_frame_time","","The precise time at the start of the current process …",168,[[],["u32",15]]],[11,"frames_since_cycle_start","","The estimated time in frames that has passed since the …",168,[[],["u32",15]]],[11,"cycle_times","","Provides the internal cycle timing information as used by …",168,[[],[["result",4],["error",4],["cycletimes",3]]]],[11,"client_ptr","","Expose the <code>client_ptr</code> for low level purposes.",168,[[]]],[11,"from_raw","","Create a <code>ProcessScope</code> for the client with the given …",168,[[["u32",15]],["processscope",3]]],[11,"to_ffi","","",56,[[],["i32",15]]],[11,"to_ffi","","",58,[[],["u32",15]]],[11,"peek","","Return the next element without advancing the iterator.",173,[[],[["option",4],["rawmidi",3]]]],[11,"next_if","","Return the next element only if the message passes the …",173,[[],[["option",4],["rawmidi",3]]]],[11,"write","","Write an event into an event port buffer.",175,[[["rawmidi",3]],[["result",4],["error",4]]]],[11,"lost_count","","Get the number of events that could not be written to …",175,[[],["usize",15]]],[11,"max_event_size","","Get the size of the largest event that can be stored by …",175,[[],["usize",15]]],[11,"as_slice","","Read the received audio data.",176,[[["processscope",3]]]],[11,"as_mut_slice","","Get a slice to write audio data to.",176,[[["processscope",3]]]],[11,"iter","","Get an iterator over midi events.",176,[[["processscope",3]],["midiiter",3]]],[11,"writer","","Create a writer that can write midi events to the …",176,[[["processscope",3]],["midiwriter",3]]],[11,"spec","","Returns the spec that was used to create this port.",176,[[]]],[11,"clone_unowned","","Return a copy of port as an unowned port that can still …",176,[[],[["port",3],["unowned",3]]]],[11,"name","","Returns the full name of the port, including the …",176,[[],[["string",3],["result",4],["error",4]]]],[11,"short_name","","Returns the short name of the port, it excludes the …",176,[[],[["string",3],["result",4],["error",4]]]],[11,"flags","","The flags for the port. These are set when the port is …",176,[[],["portflags",3]]],[11,"port_type","","The port type. JACK\'s built in types include …",176,[[],[["string",3],["result",4],["error",4]]]],[11,"connected_count","","Number of ports connected to/from <code>&self</code>.",176,[[],[["result",4],["usize",15],["error",4]]]],[11,"is_connected_to","","Returns <code>true</code> if the port is directly connected to a port …",176,[[["str",15]],[["result",4],["bool",15],["error",4]]]],[11,"aliases","","Get the alias names for <code>self</code>.",176,[[],[["error",4],["result",4],["vec",3]]]],[11,"is_monitoring_input","","Returns <code>true</code> if monitoring has been requested for <code>self</code>.",176,[[],[["result",4],["bool",15],["error",4]]]],[11,"request_monitor","","Turn input monitoring for the port on or off.",176,[[["bool",15]],[["result",4],["error",4]]]],[11,"ensure_monitor","","If the <code>CAN_MONITOR</code> flag is set for the port, then input …",176,[[["bool",15]],[["result",4],["error",4]]]],[11,"set_name","","Set\'s the short name of the port. If the full name is …",176,[[["str",15]],[["result",4],["error",4]]]],[11,"set_alias","","Sets <code>alias</code> as an alias for <code>self</code>.",176,[[["str",15]],[["result",4],["error",4]]]],[11,"unset_alias","","Remove <code>alias</code> as an alias for port. May be called at any …",176,[[["str",15]],[["result",4],["error",4]]]],[11,"from_raw","","Create a Port from raw JACK pointers.",176,[[["weak",3]],["port",3]]],[11,"client_ptr","","Obtain the client pointer that spawned this port.",176,[[]]],[11,"raw","","Obtain the ffi port pointer.",176,[[]]],[11,"buffer","","Obtain the buffer that the Port is holding. For standard …",176,[[["u32",15]]]],[11,"set_latency_range","","Set the minimum and maximum latencies defined by mode for …",176,[[["latencytype",4]]]],[11,"get_latency_range","","Returns a tuple of the minimum and maximum latencies …",176,[[["latencytype",4]]]],[18,"IS_INPUT","","The port can receive data.",177,null],[18,"IS_OUTPUT","","Data can be read from the port.",177,null],[18,"IS_PHYSICAL","","Port corresponds to some kind of physical I/O connector.",177,null],[18,"CAN_MONITOR","","A call to <code>jack_port_request_monitor()</code> makes sense.",177,null],[18,"IS_TERMINAL","","For an input port, the data received by the port will not …",177,null],[11,"empty","","Returns an empty set of flags",177,[[],["portflags",3]]],[11,"all","","Returns the set containing all flags.",177,[[],["portflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",177,[[],["u32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",177,[[["u32",15]],[["portflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",177,[[["u32",15]],["portflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",177,[[["u32",15]],["portflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",177,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",177,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",177,[[["portflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",177,[[["portflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",177,[[["portflags",3]]]],[11,"remove","","Removes the specified flags in-place.",177,[[["portflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",177,[[["portflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",177,[[["portflags",3],["bool",15]]]],[11,"new","","Allocates a ringbuffer of a specified size.",181,[[["usize",15]],[["result",4],["ringbuffer",3]]]],[11,"mlock","","Lock a ringbuffer data block into memory.",181,[[]]],[11,"reset","","Resets the ring buffer, making an empty buffer.",181,[[]]],[11,"into_reader_writer","","Create a reader and writer, to use the ring buffer.",181,[[]]],[11,"from_reader_writer","","Re-create the ring buffer object from reader and writer. …",181,[[["ringbufferreader",3],["ringbufferwriter",3]],["ringbuffer",3]]],[11,"get_vector","","Fill a data structure with a description of the current …",182,[[]]],[11,"read_buffer","","Read data from the ringbuffer.  Returns: the number of …",182,[[],["usize",15]]],[11,"peek","","Read data from the ringbuffer. Opposed to read_buffer() …",182,[[],["usize",15]]],[11,"advance","","Advance the read pointer. use this after peek/peek_iter …",182,[[["usize",15]]]],[11,"space","","Return the number of bytes available for reading.",182,[[],["usize",15]]],[11,"peek_iter","","Iterator that goes over all the data available to read.",182,[[],[["chain",3],["iter",3]]]],[11,"write_buffer","","Write data into the ringbuffer.  Returns: The number of …",183,[[],["usize",15]]],[11,"advance","","Advance the write pointer. use this after peek_iter or …",183,[[["usize",15]]]],[11,"space","","Return the number of bytes available for writing.",183,[[],["usize",15]]],[11,"get_vector","","Return a pair of slices of the current writable space in …",183,[[]]],[11,"peek_iter","","Iterator that goes over all the data available to write.",183,[[],[["chain",3],["itermut",3]]]],[11,"start","","Start the JACK transport rolling.",184,[[],[["result",4],["error",4]]]],[11,"stop","","Stop the JACK transport.",184,[[],[["result",4],["error",4]]]],[11,"reposition","","Request a new transport position.",184,[[["transportposition",3]],[["result",4],["error",4]]]],[11,"locate","","Reposition the transport to a new frame number.",184,[[["u32",15]],[["result",4],["error",4]]]],[11,"query","","Query the current transport state and position.",184,[[],[["result",4],["transportstateposition",3],["error",4]]]],[11,"query_state","","Query the current transport state.",184,[[],[["transportstate",4],["error",4],["result",4]]]],[11,"with_bbt","","Set bar, beat, tick",61,[[["usize",15]],["transportbbt",3]]],[11,"with_bpm","","Set Beats Per Minute.",61,[[["f64",15]],["transportbbt",3]]],[11,"with_timesig","","Set the time signature.",61,[[["f32",15]],["transportbbt",3]]],[11,"with_ticks_per_beat","","Set ticks per beat.",61,[[["f64",15]],["transportbbt",3]]],[11,"with_bar_start_tick","","Set bar start tick.",61,[[["f64",15]],["transportbbt",3]]],[11,"validated","","Validate contents.",61,[[],[["transportbbtvalidationerror",4],["result",4],["transportbbt",3]]]],[11,"valid","","",61,[[],["bool",15]]],[11,"valid_bbt","","Query to see if the BarBeatsTick data is valid.",185,[[],["bool",15]]],[11,"valid_bbt_frame_offset","","Query to see if the frame offset of BarBeatsTick data is …",185,[[],["bool",15]]],[11,"frame","","Get the frame number on the transport timeline.",185,[[],["u32",15]]],[11,"set_frame","","Set the frame number on the transport timeline.",185,[[["u32",15]]]],[11,"frame_rate","","Get the current frame rate, in frames per second.",185,[[],[["u32",15],["option",4]]]],[11,"usecs","","Get a microsecond timestamp.",185,[[],[["option",4],["u64",15]]]],[11,"bbt","","Get the BarBeatsTick data if it is valid.",185,[[],[["option",4],["transportbbt",3]]]],[11,"set_bbt","","Set the BarBeatsTick data in this position.",185,[[["option",4],["transportbbt",3]],[["result",4],["transportbbtvalidationerror",4]]]],[11,"bbt_offset","","Get the frame offset for the BBT fields.",185,[[],[["u32",15],["option",4]]]],[11,"set_bbt_offset","","Set the frame offset for the BBT fields.",185,[[["u32",15],["option",4]],[["result",4],["u32",15]]]],[11,"get_plugin","rsynth::backend::vst_backend::vst::api","Return handle to Plugin object. Only works for plugins …",66,[[],["box",3]]],[11,"drop_plugin","","Drop the Plugin object. Only works for plugins created …",66,[[]]],[11,"from","","Create a <code>Supported</code> value from an integer if possible.",69,[[["isize",15]],[["option",4],["supported",4]]]],[11,"events","","Use this in your impl of process_events() to process the …",76,[[]]],[18,"ACTIVE","","Indicates channel is active. Ignored by host.",186,null],[18,"STEREO","","Indicates channel is first of stereo pair.",186,null],[18,"SPEAKER","","Use channel\'s specified speaker_arrangement instead of …",186,null],[11,"empty","","Returns an empty set of flags",186,[[],["channelflags",3]]],[11,"all","","Returns the set containing all flags.",186,[[],["channelflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",186,[[],["i32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",186,[[["i32",15]],[["option",4],["channelflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",186,[[["i32",15]],["channelflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",186,[[["i32",15]],["channelflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",186,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",186,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",186,[[["channelflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",186,[[["channelflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",186,[[["channelflags",3]]]],[11,"remove","","Removes the specified flags in-place.",186,[[["channelflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",186,[[["channelflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",186,[[["bool",15],["channelflags",3]]]],[18,"HAS_EDITOR","","Plugin has an editor.",187,null],[18,"CAN_REPLACING","","Plugin can process 32 bit audio. (Mandatory in VST 2.4).",187,null],[18,"PROGRAM_CHUNKS","","Plugin preset data is handled in formatless chunks.",187,null],[18,"IS_SYNTH","","Plugin is a synth.",187,null],[18,"NO_SOUND_IN_STOP","","Plugin does not produce sound when all input is silence.",187,null],[18,"CAN_DOUBLE_REPLACING","","Supports 64 bit audio processing.",187,null],[11,"empty","","Returns an empty set of flags",187,[[],["pluginflags",3]]],[11,"all","","Returns the set containing all flags.",187,[[],["pluginflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",187,[[],["i32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",187,[[["i32",15]],[["option",4],["pluginflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",187,[[["i32",15]],["pluginflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",187,[[["i32",15]],["pluginflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",187,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",187,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",187,[[["pluginflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",187,[[["pluginflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",187,[[["pluginflags",3]]]],[11,"remove","","Removes the specified flags in-place.",187,[[["pluginflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",187,[[["pluginflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",187,[[["bool",15],["pluginflags",3]]]],[18,"SHIFT","","Shift key.",188,null],[18,"ALT","","Alt key.",188,null],[18,"COMMAND","","Control on mac.",188,null],[18,"CONTROL","","Command on mac, ctrl on other.",188,null],[11,"empty","","Returns an empty set of flags",188,[[],["modifierkey",3]]],[11,"all","","Returns the set containing all flags.",188,[[],["modifierkey",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",188,[[],["u8",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",188,[[["u8",15]],[["option",4],["modifierkey",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",188,[[["u8",15]],["modifierkey",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",188,[[["u8",15]],["modifierkey",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",188,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",188,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",188,[[["modifierkey",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",188,[[["modifierkey",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",188,[[["modifierkey",3]]]],[11,"remove","","Removes the specified flags in-place.",188,[[["modifierkey",3]]]],[11,"toggle","","Toggles the specified flags in-place.",188,[[["modifierkey",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",188,[[["modifierkey",3],["bool",15]]]],[18,"REALTIME_EVENT","","This event is played live (not in playback from a …",189,null],[11,"empty","","Returns an empty set of flags",189,[[],["midieventflags",3]]],[11,"all","","Returns the set containing all flags.",189,[[],["midieventflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",189,[[],["i32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",189,[[["i32",15]],[["midieventflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",189,[[["i32",15]],["midieventflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",189,[[["i32",15]],["midieventflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",189,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",189,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",189,[[["midieventflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",189,[[["midieventflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",189,[[["midieventflags",3]]]],[11,"remove","","Removes the specified flags in-place.",189,[[["midieventflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",189,[[["midieventflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",189,[[["midieventflags",3],["bool",15]]]],[18,"TRANSPORT_CHANGED","","Indicates that play, cycle or record state has changed.",190,null],[18,"TRANSPORT_PLAYING","","Set if Host sequencer is currently playing.",190,null],[18,"TRANSPORT_CYCLE_ACTIVE","","Set if Host sequencer is in cycle mode.",190,null],[18,"TRANSPORT_RECORDING","","Set if Host sequencer is in record mode.",190,null],[18,"AUTOMATION_WRITING","","Set if automation write mode active (record parameter …",190,null],[18,"AUTOMATION_READING","","Set if automation read mode active (play parameter …",190,null],[18,"NANOSECONDS_VALID","","Set if TimeInfo::nanoseconds is valid.",190,null],[18,"PPQ_POS_VALID","","Set if TimeInfo::ppq_pos is valid.",190,null],[18,"TEMPO_VALID","","Set if TimeInfo::tempo is valid.",190,null],[18,"BARS_VALID","","Set if TimeInfo::bar_start_pos is valid.",190,null],[18,"CYCLE_POS_VALID","","Set if both TimeInfo::cycle_start_pos and …",190,null],[18,"TIME_SIG_VALID","","Set if both TimeInfo::time_sig_numerator and …",190,null],[18,"SMPTE_VALID","","Set if both TimeInfo::smpte_offset and …",190,null],[18,"VST_CLOCK_VALID","","Set if TimeInfo::samples_to_next_clock is valid.",190,null],[11,"empty","","Returns an empty set of flags",190,[[],["timeinfoflags",3]]],[11,"all","","Returns the set containing all flags.",190,[[],["timeinfoflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",190,[[],["i32",15]]],[11,"from_bits","","Convert from underlying bit representation, unless that …",190,[[["i32",15]],[["option",4],["timeinfoflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any …",190,[[["i32",15]],["timeinfoflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",190,[[["i32",15]],["timeinfoflags",3]]],[11,"is_empty","","Returns <code>true</code> if no flags are currently stored.",190,[[],["bool",15]]],[11,"is_all","","Returns <code>true</code> if all flags are currently set.",190,[[],["bool",15]]],[11,"intersects","","Returns <code>true</code> if there are flags common to both <code>self</code> and …",190,[[["timeinfoflags",3]],["bool",15]]],[11,"contains","","Returns <code>true</code> all of the flags in <code>other</code> are contained …",190,[[["timeinfoflags",3]],["bool",15]]],[11,"insert","","Inserts the specified flags in-place.",190,[[["timeinfoflags",3]]]],[11,"remove","","Removes the specified flags in-place.",190,[[["timeinfoflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",190,[[["timeinfoflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the …",190,[[["bool",15],["timeinfoflags",3]]]],[11,"from_raw","rsynth::backend::vst_backend::vst::buffer","Create an <code>AudioBuffer</code> from raw pointers. Only really …",191,[[["usize",15]],["audiobuffer",3]]],[11,"input_count","","The number of input channels that this buffer was created …",191,[[],["usize",15]]],[11,"output_count","","The number of output channels that this buffer was …",191,[[],["usize",15]]],[11,"samples","","The number of samples in this buffer (same for all …",191,[[],["usize",15]]],[11,"split","","Split this buffer into separate inputs and outputs.",191,[[]]],[11,"zip","","Create an iterator over pairs of input buffers and output …",191,[[],["audiobufferiterator",3]]],[11,"len","","Number of channels",193,[[],["usize",15]]],[11,"is_empty","","Returns true if the buffer is empty",193,[[],["bool",15]]],[11,"get","","Access channel at the given index",193,[[["usize",15]]]],[11,"split_at","","Split borrowing at the given index, like for slices",193,[[["usize",15]]]],[11,"len","","Number of channels",195,[[],["usize",15]]],[11,"is_empty","","Returns true if the buffer is empty",195,[[],["bool",15]]],[11,"get","","Access channel at the given index",195,[[["usize",15]]]],[11,"get_mut","","Mutably access channel at the given index",195,[[["usize",15]]]],[11,"split_at_mut","","Split borrowing at the given index, like for slices",195,[[["usize",15]]]],[11,"new","","Creates a buffer for sending up to the given number of …",197,[[["usize",15]],["sendeventbuffer",3]]],[11,"send_events","","Sends events to the host. See the <code>fwd_midi</code> example.",197,[[["host",8]]]],[11,"send_events_to_plugin","","Sends events from the host to a plugin.",197,[[["plugin",8]]]],[11,"new","rsynth::backend::vst_backend::vst::channels","Construct a new <code>ChannelInfo</code> object.",198,[[["option",4],["string",3],["bool",15],["option",4],["speakerarrangementtype",4]],["channelinfo",3]]],[11,"is_speaker_type","","Determine whether this channel is part of a surround …",88,[[],["bool",15]]],[11,"is_left_stereo","","Determine whether this channel is the left speaker in a …",88,[[],["bool",15]]],[11,"load","rsynth::backend::vst_backend::vst::host","Load a plugin at the given path with the given host.",199,[[["mutex",3],["path",3],["arc",3]],[["result",4],["pluginloader",3],["pluginloaderror",4]]]],[11,"instance","","Try to create an instance of this VST plugin.",199,[[],[["result",4],["pluginloaderror",4],["plugininstance",3]]]],[11,"new","","Create a <code>HostBuffer</code> for a given number of input and …",201,[[["usize",15]],["hostbuffer",3]]],[11,"from_info","","Create a <code>HostBuffer</code> for the number of input and output …",201,[[["info",3]],["hostbuffer",3]]],[11,"bind","","Bind sample arrays to the <code>HostBuffer</code> to create an …",201,[[],["audiobuffer",3]]],[11,"input_count","","Number of input channels supported by this <code>HostBuffer</code>.",201,[[],["usize",15]]],[11,"output_count","","Number of output channels supported by this <code>HostBuffer</code>.",201,[[],["usize",15]]],[11,"from_str","rsynth::backend::vst_backend::vst::plugin","Converts a string to a <code>CanDo</code> instance. Any given string …",100,[[["str",15]],["cando",4]]],[11,"vst_version","","Get the VST API version supported by the host e.g. …",202,[[],["i32",15]]],[11,"raw_callback","","Get the callback for calling host-specific extensions",202,[[],["option",4]]],[11,"raw_effect","","Get the effect pointer for calling host-specific …",202,[[]]],[11,"new","rsynth::backend::vst_backend::vst::util","New atomic float with initial value <code>value</code>.",203,[[["f32",15]],["atomicfloat",3]]],[11,"get","","Get the current value of the atomic float.",203,[[],["f32",15]]],[11,"set","","Set the value of the atomic float to <code>value</code>.",203,[[["f32",15]]]],[11,"new","","Create a new parameter set with <code>parameter_count</code> …",204,[[["usize",15]],["parametertransfer",3]]],[11,"set_parameter","","Set the value of the parameter with index <code>index</code> to <code>value</code> …",204,[[["usize",15],["f32",15]]]],[11,"get_parameter","","Get the current value of the parameter with index <code>index</code>.",204,[[["usize",15]],["f32",15]]],[11,"iterate","","Iterate over all parameters marked as changed. If <code>acquire</code> …",204,[[["bool",15]],["parametertransferiterator",3]]],[11,"with_capacity","rsynth::vecstorage","",218,[[["usize",15]],["vecstorage",3]]],[11,"vec_guard","","Creates a new <code>VecGuard</code> using the memory allocated by <code>self</code>…",218,[[],["vecguard",3]]]],"p":[[3,"AudioBufferIn"],[3,"AudioBufferOut"],[3,"AudioBufferInOut"],[3,"AudioChunk"],[3,"AudioDummy"],[3,"MidiDummy"],[4,"HoundAudioError"],[3,"HoundAudioReader"],[3,"HoundAudioWriter"],[3,"AudioChunkReader"],[3,"AudioBufferWriter"],[8,"Write"],[8,"Seek"],[4,"CursorError"],[3,"IoWrap"],[3,"SeekableWrap"],[4,"LiveEvent"],[13,"Midi"],[4,"SystemCommon"],[4,"MtcQuarterFrameMessage"],[4,"SystemRealtime"],[8,"Buffer"],[3,"Smf"],[3,"SmfBytemap"],[4,"ErrorKind"],[4,"MetaMessage"],[4,"MidiMessage"],[13,"NoteOff"],[13,"NoteOn"],[13,"Aftertouch"],[13,"Controller"],[13,"ProgramChange"],[13,"ChannelAftertouch"],[13,"PitchBend"],[3,"PitchBend"],[3,"TrackEvent"],[4,"TrackEventKind"],[13,"Midi"],[4,"Format"],[4,"Fps"],[4,"Timing"],[3,"Header"],[3,"MidlyMidiReader"],[8,"AudioReader"],[8,"AudioWriter"],[8,"MidiWriter"],[3,"MidiWriterWrapper"],[4,"CombinedError"],[3,"TestAudioReader"],[3,"TestAudioWriter"],[3,"TestMidiReader"],[3,"TestMidiWriter"],[3,"ClosureProcessHandler"],[3,"CycleTimes"],[8,"NotificationHandler"],[8,"ProcessHandler"],[4,"Control"],[4,"Error"],[4,"LatencyType"],[8,"PortSpec"],[3,"RawMidi"],[3,"TransportBBT"],[4,"TransportBBTValidationError"],[4,"TransportState"],[3,"TransportStatePosition"],[3,"JackHost"],[3,"AEffect"],[3,"ChannelProperties"],[4,"SpeakerArrangementType"],[4,"Supported"],[4,"ProcessLevel"],[4,"HostLanguage"],[4,"FileSelectCommand"],[4,"FileSelectType"],[3,"FileType"],[3,"FileSelect"],[3,"Events"],[4,"EventType"],[3,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[3,"TimeInfo"],[4,"SmpteFrameRate"],[8,"WriteIntoPlaceholder"],[4,"ArrangementTarget"],[4,"StereoChannel"],[4,"StereoConfig"],[4,"SurroundConfig"],[4,"SpeakerArrangementType"],[8,"Editor"],[3,"KeyCode"],[4,"KnobMode"],[4,"Key"],[4,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[8,"Host"],[4,"PluginLoadError"],[4,"Category"],[3,"Info"],[4,"CanDo"],[8,"Plugin"],[8,"PluginParameters"],[8,"VstPluginMeta"],[3,"VstPluginWrapper"],[8,"HostInterface"],[3,"EnvelopeIteratorItem"],[8,"Envelope"],[4,"EventCollisionHandling"],[8,"HandleEventCollision"],[3,"EventQueue"],[8,"EventHandler"],[8,"EventHandlerExt"],[8,"ContextualEventHandler"],[3,"SysExEvent"],[3,"RawMidiEvent"],[4,"MidlyConversionError"],[3,"Timed"],[3,"Indexed"],[3,"DeltaEvent"],[3,"TimeStretcher"],[8,"Meta"],[8,"General"],[8,"Name"],[8,"Port"],[3,"MetaData"],[3,"InOut"],[3,"TestPlugin"],[4,"SimpleVoiceState"],[3,"SimpleEventDispatcher"],[4,"EventDispatchClass"],[3,"ToneIdentifier"],[8,"EventDispatchClassifier"],[4,"VoiceAssignment"],[8,"Voice"],[8,"VoiceAssigner"],[8,"EventDispatcher"],[8,"ContextualEventDispatcher"],[8,"AudioHandlerMeta"],[8,"AudioHandler"],[8,"MidiHandlerMeta"],[8,"AudioRenderer"],[8,"ContextualAudioRenderer"],[8,"CommonPluginMeta"],[8,"CommonAudioPortMeta"],[8,"CommonMidiPortMeta"],[3,"AudioBufferOutChannelIteratorMut"],[3,"InterlacedSampleIterator"],[3,"NotSeekable"],[3,"Cursor"],[3,"MidiStream"],[3,"DefaultBuffer"],[3,"u14"],[3,"u15"],[3,"u24"],[3,"u28"],[3,"u4"],[3,"u7"],[3,"Arena"],[3,"Error"],[3,"SmpteTime"],[3,"EventBytemapIter"],[3,"EventIter"],[3,"TrackIter"],[3,"AsyncClient"],[3,"Client"],[3,"ClientOptions"],[3,"ClientStatus"],[3,"ProcessScope"],[3,"CLIENT_NAME_SIZE"],[3,"AudioIn"],[3,"AudioOut"],[3,"MidiIn"],[3,"MidiIter"],[3,"MidiOut"],[3,"MidiWriter"],[3,"Port"],[3,"PortFlags"],[3,"Unowned"],[3,"PORT_NAME_SIZE"],[3,"PORT_TYPE_SIZE"],[3,"RingBuffer"],[3,"RingBufferReader"],[3,"RingBufferWriter"],[3,"Transport"],[3,"TransportPosition"],[3,"ChannelFlags"],[3,"PluginFlags"],[3,"ModifierKey"],[3,"MidiEventFlags"],[3,"TimeInfoFlags"],[3,"AudioBuffer"],[3,"AudioBufferIterator"],[3,"Inputs"],[3,"InputIterator"],[3,"Outputs"],[3,"OutputIterator"],[3,"SendEventBuffer"],[3,"ChannelInfo"],[3,"PluginLoader"],[3,"PluginInstance"],[3,"HostBuffer"],[3,"HostCallback"],[3,"AtomicFloat"],[3,"ParameterTransfer"],[3,"ParameterTransferIterator"],[3,"StairCaseEnvelopeIterator"],[3,"StairCaseEnvelope"],[3,"AlwaysInsertNewBeforeOld"],[3,"AlwaysInsertNewAfterOld"],[3,"AlwaysIgnoreNew"],[3,"AlwaysRemoveOld"],[3,"DrainingIter"],[3,"Map"],[3,"AudioPort"],[3,"MidiPort"],[3,"DummyEventHandler"],[3,"RawMidiEventToneIdentifierDispatchClassifier"],[3,"VecStorage"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);